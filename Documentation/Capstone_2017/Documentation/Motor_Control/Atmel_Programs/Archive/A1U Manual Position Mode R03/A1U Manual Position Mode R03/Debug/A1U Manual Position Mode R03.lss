
A1U Manual Position Mode R03.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001eaa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000038  00802000  00001eaa  00001f3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000059  00802038  00802038  00001f76  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f76  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00001fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001785  00000000  00000000  0000203a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000355  00000000  00000000  000037bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ce  00000000  00000000  00003b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  000040e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001c8c  00000000  00000000  00004284  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000038c  00000000  00000000  00005f10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000629c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c1       	rjmp	.+794    	; 0x31c <__ctors_end>
       2:	00 00       	nop
       4:	b0 c1       	rjmp	.+864    	; 0x366 <__bad_interrupt>
       6:	00 00       	nop
       8:	ae c1       	rjmp	.+860    	; 0x366 <__bad_interrupt>
       a:	00 00       	nop
       c:	ac c1       	rjmp	.+856    	; 0x366 <__bad_interrupt>
       e:	00 00       	nop
      10:	aa c1       	rjmp	.+852    	; 0x366 <__bad_interrupt>
      12:	00 00       	nop
      14:	a8 c1       	rjmp	.+848    	; 0x366 <__bad_interrupt>
      16:	00 00       	nop
      18:	a6 c1       	rjmp	.+844    	; 0x366 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a4 c1       	rjmp	.+840    	; 0x366 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a2 c1       	rjmp	.+836    	; 0x366 <__bad_interrupt>
      22:	00 00       	nop
      24:	a0 c1       	rjmp	.+832    	; 0x366 <__bad_interrupt>
      26:	00 00       	nop
      28:	9e c1       	rjmp	.+828    	; 0x366 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9c c1       	rjmp	.+824    	; 0x366 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9a c1       	rjmp	.+820    	; 0x366 <__bad_interrupt>
      32:	00 00       	nop
      34:	98 c1       	rjmp	.+816    	; 0x366 <__bad_interrupt>
      36:	00 00       	nop
      38:	96 c1       	rjmp	.+812    	; 0x366 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	94 c1       	rjmp	.+808    	; 0x366 <__bad_interrupt>
      3e:	00 00       	nop
      40:	92 c1       	rjmp	.+804    	; 0x366 <__bad_interrupt>
      42:	00 00       	nop
      44:	90 c1       	rjmp	.+800    	; 0x366 <__bad_interrupt>
      46:	00 00       	nop
      48:	8e c1       	rjmp	.+796    	; 0x366 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8c c1       	rjmp	.+792    	; 0x366 <__bad_interrupt>
      4e:	00 00       	nop
      50:	2c c2       	rjmp	.+1112   	; 0x4aa <__vector_20>
      52:	00 00       	nop
      54:	88 c1       	rjmp	.+784    	; 0x366 <__bad_interrupt>
      56:	00 00       	nop
      58:	86 c1       	rjmp	.+780    	; 0x366 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	84 c1       	rjmp	.+776    	; 0x366 <__bad_interrupt>
      5e:	00 00       	nop
      60:	82 c1       	rjmp	.+772    	; 0x366 <__bad_interrupt>
      62:	00 00       	nop
      64:	80 c1       	rjmp	.+768    	; 0x366 <__bad_interrupt>
      66:	00 00       	nop
      68:	7e c1       	rjmp	.+764    	; 0x366 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7c c1       	rjmp	.+760    	; 0x366 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7a c1       	rjmp	.+756    	; 0x366 <__bad_interrupt>
      72:	00 00       	nop
      74:	78 c1       	rjmp	.+752    	; 0x366 <__bad_interrupt>
      76:	00 00       	nop
      78:	76 c1       	rjmp	.+748    	; 0x366 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	74 c1       	rjmp	.+744    	; 0x366 <__bad_interrupt>
      7e:	00 00       	nop
      80:	72 c1       	rjmp	.+740    	; 0x366 <__bad_interrupt>
      82:	00 00       	nop
      84:	70 c1       	rjmp	.+736    	; 0x366 <__bad_interrupt>
      86:	00 00       	nop
      88:	6e c1       	rjmp	.+732    	; 0x366 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6c c1       	rjmp	.+728    	; 0x366 <__bad_interrupt>
      8e:	00 00       	nop
      90:	6a c1       	rjmp	.+724    	; 0x366 <__bad_interrupt>
      92:	00 00       	nop
      94:	68 c1       	rjmp	.+720    	; 0x366 <__bad_interrupt>
      96:	00 00       	nop
      98:	66 c1       	rjmp	.+716    	; 0x366 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	64 c1       	rjmp	.+712    	; 0x366 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	62 c1       	rjmp	.+708    	; 0x366 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	60 c1       	rjmp	.+704    	; 0x366 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	5e c1       	rjmp	.+700    	; 0x366 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5c c1       	rjmp	.+696    	; 0x366 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5a c1       	rjmp	.+692    	; 0x366 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	58 c1       	rjmp	.+688    	; 0x366 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	56 c1       	rjmp	.+684    	; 0x366 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	54 c1       	rjmp	.+680    	; 0x366 <__bad_interrupt>
      be:	00 00       	nop
      c0:	52 c1       	rjmp	.+676    	; 0x366 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	50 c1       	rjmp	.+672    	; 0x366 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	4e c1       	rjmp	.+668    	; 0x366 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4c c1       	rjmp	.+664    	; 0x366 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4a c1       	rjmp	.+660    	; 0x366 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	48 c1       	rjmp	.+656    	; 0x366 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	46 c1       	rjmp	.+652    	; 0x366 <__bad_interrupt>
      da:	00 00       	nop
      dc:	44 c1       	rjmp	.+648    	; 0x366 <__bad_interrupt>
      de:	00 00       	nop
      e0:	42 c1       	rjmp	.+644    	; 0x366 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	40 c1       	rjmp	.+640    	; 0x366 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	3e c1       	rjmp	.+636    	; 0x366 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	3c c1       	rjmp	.+632    	; 0x366 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	3a c1       	rjmp	.+628    	; 0x366 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	38 c1       	rjmp	.+624    	; 0x366 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	36 c1       	rjmp	.+620    	; 0x366 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	34 c1       	rjmp	.+616    	; 0x366 <__bad_interrupt>
      fe:	00 00       	nop
     100:	32 c1       	rjmp	.+612    	; 0x366 <__bad_interrupt>
     102:	00 00       	nop
     104:	30 c1       	rjmp	.+608    	; 0x366 <__bad_interrupt>
     106:	00 00       	nop
     108:	2e c1       	rjmp	.+604    	; 0x366 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	2c c1       	rjmp	.+600    	; 0x366 <__bad_interrupt>
     10e:	00 00       	nop
     110:	2a c1       	rjmp	.+596    	; 0x366 <__bad_interrupt>
     112:	00 00       	nop
     114:	28 c1       	rjmp	.+592    	; 0x366 <__bad_interrupt>
     116:	00 00       	nop
     118:	26 c1       	rjmp	.+588    	; 0x366 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	24 c1       	rjmp	.+584    	; 0x366 <__bad_interrupt>
     11e:	00 00       	nop
     120:	22 c1       	rjmp	.+580    	; 0x366 <__bad_interrupt>
     122:	00 00       	nop
     124:	20 c1       	rjmp	.+576    	; 0x366 <__bad_interrupt>
     126:	00 00       	nop
     128:	1e c1       	rjmp	.+572    	; 0x366 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	1c c1       	rjmp	.+568    	; 0x366 <__bad_interrupt>
     12e:	00 00       	nop
     130:	1a c1       	rjmp	.+564    	; 0x366 <__bad_interrupt>
     132:	00 00       	nop
     134:	18 c1       	rjmp	.+560    	; 0x366 <__bad_interrupt>
     136:	00 00       	nop
     138:	16 c1       	rjmp	.+556    	; 0x366 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	14 c1       	rjmp	.+552    	; 0x366 <__bad_interrupt>
     13e:	00 00       	nop
     140:	12 c1       	rjmp	.+548    	; 0x366 <__bad_interrupt>
     142:	00 00       	nop
     144:	10 c1       	rjmp	.+544    	; 0x366 <__bad_interrupt>
     146:	00 00       	nop
     148:	0e c1       	rjmp	.+540    	; 0x366 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	08 c5       	rjmp	.+2576   	; 0xb5e <__vector_83>
     14e:	00 00       	nop
     150:	0a c1       	rjmp	.+532    	; 0x366 <__bad_interrupt>
     152:	00 00       	nop
     154:	08 c1       	rjmp	.+528    	; 0x366 <__bad_interrupt>
     156:	00 00       	nop
     158:	06 c1       	rjmp	.+524    	; 0x366 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	04 c1       	rjmp	.+520    	; 0x366 <__bad_interrupt>
     15e:	00 00       	nop
     160:	02 c1       	rjmp	.+516    	; 0x366 <__bad_interrupt>
     162:	00 00       	nop
     164:	00 c1       	rjmp	.+512    	; 0x366 <__bad_interrupt>
     166:	00 00       	nop
     168:	fe c0       	rjmp	.+508    	; 0x366 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	fc c0       	rjmp	.+504    	; 0x366 <__bad_interrupt>
     16e:	00 00       	nop
     170:	fa c0       	rjmp	.+500    	; 0x366 <__bad_interrupt>
     172:	00 00       	nop
     174:	f8 c0       	rjmp	.+496    	; 0x366 <__bad_interrupt>
     176:	00 00       	nop
     178:	f6 c0       	rjmp	.+492    	; 0x366 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	f4 c0       	rjmp	.+488    	; 0x366 <__bad_interrupt>
     17e:	00 00       	nop
     180:	f2 c0       	rjmp	.+484    	; 0x366 <__bad_interrupt>
     182:	00 00       	nop
     184:	f0 c0       	rjmp	.+480    	; 0x366 <__bad_interrupt>
     186:	00 00       	nop
     188:	ee c0       	rjmp	.+476    	; 0x366 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	ec c0       	rjmp	.+472    	; 0x366 <__bad_interrupt>
     18e:	00 00       	nop
     190:	ea c0       	rjmp	.+468    	; 0x366 <__bad_interrupt>
     192:	00 00       	nop
     194:	e8 c0       	rjmp	.+464    	; 0x366 <__bad_interrupt>
     196:	00 00       	nop
     198:	e6 c0       	rjmp	.+460    	; 0x366 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	e4 c0       	rjmp	.+456    	; 0x366 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	e2 c0       	rjmp	.+452    	; 0x366 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	e0 c0       	rjmp	.+448    	; 0x366 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	de c0       	rjmp	.+444    	; 0x366 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	dc c0       	rjmp	.+440    	; 0x366 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	da c0       	rjmp	.+436    	; 0x366 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	d8 c0       	rjmp	.+432    	; 0x366 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	d6 c0       	rjmp	.+428    	; 0x366 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	d4 c0       	rjmp	.+424    	; 0x366 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	d2 c0       	rjmp	.+420    	; 0x366 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	d0 c0       	rjmp	.+416    	; 0x366 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	ce c0       	rjmp	.+412    	; 0x366 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	cc c0       	rjmp	.+408    	; 0x366 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	ca c0       	rjmp	.+404    	; 0x366 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	c8 c0       	rjmp	.+400    	; 0x366 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	c6 c0       	rjmp	.+396    	; 0x366 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	c4 c0       	rjmp	.+392    	; 0x366 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	c2 c0       	rjmp	.+388    	; 0x366 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	c0 c0       	rjmp	.+384    	; 0x366 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	be c0       	rjmp	.+380    	; 0x366 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	bc c0       	rjmp	.+376    	; 0x366 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	ba c0       	rjmp	.+372    	; 0x366 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	b8 c0       	rjmp	.+368    	; 0x366 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	b6 c0       	rjmp	.+364    	; 0x366 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	05 a8       	ldd	r0, Z+53	; 0x35
     1fe:	4c cd       	rjmp	.-1384   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     200:	b2 d4       	rcall	.+2404   	; 0xb66 <__vector_83+0x8>
     202:	4e b9       	out	0x0e, r20	; 14
     204:	38 36       	cpi	r19, 0x68	; 104
     206:	a9 02       	muls	r26, r25
     208:	0c 50       	subi	r16, 0x0C	; 12
     20a:	b9 91       	ld	r27, Y+
     20c:	86 88       	ldd	r8, Z+22	; 0x16
     20e:	08 3c       	cpi	r16, 0xC8	; 200
     210:	a6 aa       	std	Z+54, r10	; 0x36
     212:	aa 2a       	or	r10, r26
     214:	be 00       	.word	0x00be	; ????
     216:	00 00       	nop
     218:	80 3f       	cpi	r24, 0xF0	; 240

0000021a <__trampolines_end>:
     21a:	6e 61       	ori	r22, 0x1E	; 30
     21c:	6e 00       	.word	0x006e	; ????

0000021e <__c.2159>:
     21e:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     22e:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     23e:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     24e:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     25e:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     26e:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     27e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     28e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     29e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     2ae:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2be:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2ce:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2de:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2ee:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2fe:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     30e:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000031c <__ctors_end>:
     31c:	11 24       	eor	r1, r1
     31e:	1f be       	out	0x3f, r1	; 63
     320:	cf ef       	ldi	r28, 0xFF	; 255
     322:	cd bf       	out	0x3d, r28	; 61
     324:	df e3       	ldi	r29, 0x3F	; 63
     326:	de bf       	out	0x3e, r29	; 62
     328:	00 e0       	ldi	r16, 0x00	; 0
     32a:	0c bf       	out	0x3c, r16	; 60
     32c:	18 be       	out	0x38, r1	; 56
     32e:	19 be       	out	0x39, r1	; 57
     330:	1a be       	out	0x3a, r1	; 58
     332:	1b be       	out	0x3b, r1	; 59

00000334 <__do_copy_data>:
     334:	10 e2       	ldi	r17, 0x20	; 32
     336:	a0 e0       	ldi	r26, 0x00	; 0
     338:	b0 e2       	ldi	r27, 0x20	; 32
     33a:	ea ea       	ldi	r30, 0xAA	; 170
     33c:	fe e1       	ldi	r31, 0x1E	; 30
     33e:	00 e0       	ldi	r16, 0x00	; 0
     340:	0b bf       	out	0x3b, r16	; 59
     342:	02 c0       	rjmp	.+4      	; 0x348 <__do_copy_data+0x14>
     344:	07 90       	elpm	r0, Z+
     346:	0d 92       	st	X+, r0
     348:	a8 33       	cpi	r26, 0x38	; 56
     34a:	b1 07       	cpc	r27, r17
     34c:	d9 f7       	brne	.-10     	; 0x344 <__do_copy_data+0x10>
     34e:	1b be       	out	0x3b, r1	; 59

00000350 <__do_clear_bss>:
     350:	20 e2       	ldi	r18, 0x20	; 32
     352:	a8 e3       	ldi	r26, 0x38	; 56
     354:	b0 e2       	ldi	r27, 0x20	; 32
     356:	01 c0       	rjmp	.+2      	; 0x35a <.do_clear_bss_start>

00000358 <.do_clear_bss_loop>:
     358:	1d 92       	st	X+, r1

0000035a <.do_clear_bss_start>:
     35a:	a1 39       	cpi	r26, 0x91	; 145
     35c:	b2 07       	cpc	r27, r18
     35e:	e1 f7       	brne	.-8      	; 0x358 <.do_clear_bss_loop>
     360:	ea d4       	rcall	.+2516   	; 0xd36 <main>
     362:	0c 94 53 0f 	jmp	0x1ea6	; 0x1ea6 <_exit>

00000366 <__bad_interrupt>:
     366:	4c ce       	rjmp	.-872    	; 0x0 <__vectors>

00000368 <put_char>:

}


static int put_char(char c, FILE *stream) //Serial transfer function
{
     368:	cf 93       	push	r28
     36a:	c8 2f       	mov	r28, r24
	if (c == '\n') put_char('\r',stream);	//add return to newline character for term
     36c:	8a 30       	cpi	r24, 0x0A	; 10
     36e:	11 f4       	brne	.+4      	; 0x374 <put_char+0xc>
     370:	8d e0       	ldi	r24, 0x0D	; 13
     372:	fa df       	rcall	.-12     	; 0x368 <put_char>

	while(!(USARTC0.STATUS & USART_DREIF_bm)); //loop until Tx is ready
     374:	e0 ea       	ldi	r30, 0xA0	; 160
     376:	f8 e0       	ldi	r31, 0x08	; 8
     378:	91 81       	ldd	r25, Z+1	; 0x01
     37a:	95 ff       	sbrs	r25, 5
     37c:	fd cf       	rjmp	.-6      	; 0x378 <put_char+0x10>
	USARTC0.DATA = c;
     37e:	c0 93 a0 08 	sts	0x08A0, r28
	return 0;
}
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	cf 91       	pop	r28
     388:	08 95       	ret

0000038a <pwmtoMotor1>:
	timeNow += Ts;	//Calculate time in program
}

void pwmtoMotor1(float voltSet1)
{
	digiHB1 = voltSet1 / 12.0*1599;	//Convert to digital PWM compare value for HB1
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	40 e4       	ldi	r20, 0x40	; 64
     390:	51 e4       	ldi	r21, 0x41	; 65
     392:	44 d6       	rcall	.+3208   	; 0x101c <__divsf3>
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	30 ee       	ldi	r19, 0xE0	; 224
     398:	47 ec       	ldi	r20, 0xC7	; 199
     39a:	54 e4       	ldi	r21, 0x44	; 68
     39c:	c7 d7       	rcall	.+3982   	; 0x132c <__mulsf3>
     39e:	60 93 67 20 	sts	0x2067, r22
     3a2:	70 93 68 20 	sts	0x2068, r23
     3a6:	80 93 69 20 	sts	0x2069, r24
     3aa:	90 93 6a 20 	sts	0x206A, r25
	
	//Motor 1
	if(digiHB1 < 0)
     3ae:	60 91 67 20 	lds	r22, 0x2067
     3b2:	70 91 68 20 	lds	r23, 0x2068
     3b6:	80 91 69 20 	lds	r24, 0x2069
     3ba:	90 91 6a 20 	lds	r25, 0x206A
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	a9 01       	movw	r20, r18
     3c4:	24 d6       	rcall	.+3144   	; 0x100e <__cmpsf2>
     3c6:	88 23       	and	r24, r24
     3c8:	0c f0       	brlt	.+2      	; 0x3cc <pwmtoMotor1+0x42>
     3ca:	40 c0       	rjmp	.+128    	; 0x44c <pwmtoMotor1+0xc2>
	{
		//PORTF.OUTCLR = PIN2_bm;	//pull HB1 direction pin low for reverse direction
		PORTF.OUTSET = PIN3_bm;	//set INB high for CCW direction
     3cc:	e0 ea       	ldi	r30, 0xA0	; 160
     3ce:	f6 e0       	ldi	r31, 0x06	; 6
     3d0:	88 e0       	ldi	r24, 0x08	; 8
     3d2:	85 83       	std	Z+5, r24	; 0x05
		PORTF.OUTCLR = PIN2_bm;	//set INA
     3d4:	84 e0       	ldi	r24, 0x04	; 4
     3d6:	86 83       	std	Z+6, r24	; 0x06
		digiHB1 = -digiHB1;	//make digital HB value positive
     3d8:	80 91 67 20 	lds	r24, 0x2067
     3dc:	90 91 68 20 	lds	r25, 0x2068
     3e0:	a0 91 69 20 	lds	r26, 0x2069
     3e4:	b0 91 6a 20 	lds	r27, 0x206A
     3e8:	b0 58       	subi	r27, 0x80	; 128
     3ea:	80 93 67 20 	sts	0x2067, r24
     3ee:	90 93 68 20 	sts	0x2068, r25
     3f2:	a0 93 69 20 	sts	0x2069, r26
     3f6:	b0 93 6a 20 	sts	0x206A, r27
		if(digiHB1 >= 1599){digiHB1 = 1599;}	//PWM overflow error check (pulse width cannot exceed top count)
     3fa:	60 91 67 20 	lds	r22, 0x2067
     3fe:	70 91 68 20 	lds	r23, 0x2068
     402:	80 91 69 20 	lds	r24, 0x2069
     406:	90 91 6a 20 	lds	r25, 0x206A
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 ee       	ldi	r19, 0xE0	; 224
     40e:	47 ec       	ldi	r20, 0xC7	; 199
     410:	54 e4       	ldi	r21, 0x44	; 68
     412:	88 d7       	rcall	.+3856   	; 0x1324 <__gesf2>
     414:	88 23       	and	r24, r24
     416:	64 f0       	brlt	.+24     	; 0x430 <pwmtoMotor1+0xa6>
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	90 ee       	ldi	r25, 0xE0	; 224
     41c:	a7 ec       	ldi	r26, 0xC7	; 199
     41e:	b4 e4       	ldi	r27, 0x44	; 68
     420:	80 93 67 20 	sts	0x2067, r24
     424:	90 93 68 20 	sts	0x2068, r25
     428:	a0 93 69 20 	sts	0x2069, r26
     42c:	b0 93 6a 20 	sts	0x206A, r27
		TCF1.CCA = digiHB1; //Set duty cycle on compare channel A (HB1)
     430:	60 91 67 20 	lds	r22, 0x2067
     434:	70 91 68 20 	lds	r23, 0x2068
     438:	80 91 69 20 	lds	r24, 0x2069
     43c:	90 91 6a 20 	lds	r25, 0x206A
     440:	5a d6       	rcall	.+3252   	; 0x10f6 <__fixunssfsi>
     442:	e0 e4       	ldi	r30, 0x40	; 64
     444:	fb e0       	ldi	r31, 0x0B	; 11
     446:	60 a7       	std	Z+40, r22	; 0x28
     448:	71 a7       	std	Z+41, r23	; 0x29
     44a:	08 95       	ret
	}
	else
	{
		//PORTF.OUTSET = PIN2_bm;	//pull HB1 direction pin high for forward direction
		PORTF.OUTSET = PIN2_bm;	//set INA high for CW direction
     44c:	e0 ea       	ldi	r30, 0xA0	; 160
     44e:	f6 e0       	ldi	r31, 0x06	; 6
     450:	84 e0       	ldi	r24, 0x04	; 4
     452:	85 83       	std	Z+5, r24	; 0x05
		PORTF.OUTCLR = PIN3_bm;	//set INB low
     454:	88 e0       	ldi	r24, 0x08	; 8
     456:	86 83       	std	Z+6, r24	; 0x06
		if(digiHB1 >= 1599){digiHB1 = 1599;}	//PWM overflow error check (pulse width cannot exceed top count)
     458:	60 91 67 20 	lds	r22, 0x2067
     45c:	70 91 68 20 	lds	r23, 0x2068
     460:	80 91 69 20 	lds	r24, 0x2069
     464:	90 91 6a 20 	lds	r25, 0x206A
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 ee       	ldi	r19, 0xE0	; 224
     46c:	47 ec       	ldi	r20, 0xC7	; 199
     46e:	54 e4       	ldi	r21, 0x44	; 68
     470:	59 d7       	rcall	.+3762   	; 0x1324 <__gesf2>
     472:	88 23       	and	r24, r24
     474:	64 f0       	brlt	.+24     	; 0x48e <pwmtoMotor1+0x104>
     476:	80 e0       	ldi	r24, 0x00	; 0
     478:	90 ee       	ldi	r25, 0xE0	; 224
     47a:	a7 ec       	ldi	r26, 0xC7	; 199
     47c:	b4 e4       	ldi	r27, 0x44	; 68
     47e:	80 93 67 20 	sts	0x2067, r24
     482:	90 93 68 20 	sts	0x2068, r25
     486:	a0 93 69 20 	sts	0x2069, r26
     48a:	b0 93 6a 20 	sts	0x206A, r27
		TCF1.CCA = digiHB1;
     48e:	60 91 67 20 	lds	r22, 0x2067
     492:	70 91 68 20 	lds	r23, 0x2068
     496:	80 91 69 20 	lds	r24, 0x2069
     49a:	90 91 6a 20 	lds	r25, 0x206A
     49e:	2b d6       	rcall	.+3158   	; 0x10f6 <__fixunssfsi>
     4a0:	e0 e4       	ldi	r30, 0x40	; 64
     4a2:	fb e0       	ldi	r31, 0x0B	; 11
     4a4:	60 a7       	std	Z+40, r22	; 0x28
     4a6:	71 a7       	std	Z+41, r23	; 0x29
     4a8:	08 95       	ret

000004aa <__vector_20>:
	}

}

ISR(TCC1_OVF_vect)
{
     4aa:	1f 92       	push	r1
     4ac:	0f 92       	push	r0
     4ae:	0f b6       	in	r0, 0x3f	; 63
     4b0:	0f 92       	push	r0
     4b2:	11 24       	eor	r1, r1
     4b4:	08 b6       	in	r0, 0x38	; 56
     4b6:	0f 92       	push	r0
     4b8:	18 be       	out	0x38, r1	; 56
     4ba:	09 b6       	in	r0, 0x39	; 57
     4bc:	0f 92       	push	r0
     4be:	19 be       	out	0x39, r1	; 57
     4c0:	0a b6       	in	r0, 0x3a	; 58
     4c2:	0f 92       	push	r0
     4c4:	1a be       	out	0x3a, r1	; 58
     4c6:	0b b6       	in	r0, 0x3b	; 59
     4c8:	0f 92       	push	r0
     4ca:	1b be       	out	0x3b, r1	; 59
     4cc:	4f 92       	push	r4
     4ce:	5f 92       	push	r5
     4d0:	6f 92       	push	r6
     4d2:	7f 92       	push	r7
     4d4:	8f 92       	push	r8
     4d6:	9f 92       	push	r9
     4d8:	af 92       	push	r10
     4da:	bf 92       	push	r11
     4dc:	cf 92       	push	r12
     4de:	df 92       	push	r13
     4e0:	ef 92       	push	r14
     4e2:	ff 92       	push	r15
     4e4:	0f 93       	push	r16
     4e6:	1f 93       	push	r17
     4e8:	2f 93       	push	r18
     4ea:	3f 93       	push	r19
     4ec:	4f 93       	push	r20
     4ee:	5f 93       	push	r21
     4f0:	6f 93       	push	r22
     4f2:	7f 93       	push	r23
     4f4:	8f 93       	push	r24
     4f6:	9f 93       	push	r25
     4f8:	af 93       	push	r26
     4fa:	bf 93       	push	r27
     4fc:	ef 93       	push	r30
     4fe:	ff 93       	push	r31
     500:	cf 93       	push	r28
     502:	df 93       	push	r29
     504:	cd b7       	in	r28, 0x3d	; 61
     506:	de b7       	in	r29, 0x3e	; 62
     508:	64 97       	sbiw	r28, 0x14	; 20
     50a:	cd bf       	out	0x3d, r28	; 61
     50c:	de bf       	out	0x3e, r29	; 62
	
	PORTD.OUTTGL = PIN6_bm;	//Toggle Pin D6 for interrupt timing
     50e:	80 e4       	ldi	r24, 0x40	; 64
     510:	e0 e6       	ldi	r30, 0x60	; 96
     512:	f6 e0       	ldi	r31, 0x06	; 6
     514:	87 83       	std	Z+7, r24	; 0x07

	if((inputMode == OSCILLATION) & (timeNow <= stopTime))
     516:	00 91 00 20 	lds	r16, 0x2000
     51a:	60 91 81 20 	lds	r22, 0x2081
     51e:	70 91 82 20 	lds	r23, 0x2082
     522:	80 91 83 20 	lds	r24, 0x2083
     526:	90 91 84 20 	lds	r25, 0x2084
     52a:	20 91 85 20 	lds	r18, 0x2085
     52e:	30 91 86 20 	lds	r19, 0x2086
     532:	40 91 87 20 	lds	r20, 0x2087
     536:	50 91 88 20 	lds	r21, 0x2088
     53a:	11 e0       	ldi	r17, 0x01	; 1
     53c:	68 d5       	rcall	.+2768   	; 0x100e <__cmpsf2>
     53e:	18 16       	cp	r1, r24
     540:	0c f4       	brge	.+2      	; 0x544 <__vector_20+0x9a>
     542:	10 e0       	ldi	r17, 0x00	; 0
     544:	11 23       	and	r17, r17
     546:	09 f4       	brne	.+2      	; 0x54a <__vector_20+0xa0>
     548:	75 c0       	rjmp	.+234    	; 0x634 <__vector_20+0x18a>
     54a:	81 e0       	ldi	r24, 0x01	; 1
     54c:	02 30       	cpi	r16, 0x02	; 2
     54e:	09 f0       	breq	.+2      	; 0x552 <__vector_20+0xa8>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	88 23       	and	r24, r24
     554:	09 f4       	brne	.+2      	; 0x558 <__vector_20+0xae>
     556:	6e c0       	rjmp	.+220    	; 0x634 <__vector_20+0x18a>
	//if(neutralPositionCounter != (numberofCycles*2))
	{
		
		commandPosition = amplitude*sin(2*M_PI*frequency*timeNow);	//command position of platform (degrees)
     558:	60 91 02 20 	lds	r22, 0x2002
     55c:	70 91 03 20 	lds	r23, 0x2003
     560:	80 91 04 20 	lds	r24, 0x2004
     564:	90 91 05 20 	lds	r25, 0x2005
     568:	c0 90 81 20 	lds	r12, 0x2081
     56c:	d0 90 82 20 	lds	r13, 0x2082
     570:	e0 90 83 20 	lds	r14, 0x2083
     574:	f0 90 84 20 	lds	r15, 0x2084
     578:	2b ed       	ldi	r18, 0xDB	; 219
     57a:	3f e0       	ldi	r19, 0x0F	; 15
     57c:	49 ec       	ldi	r20, 0xC9	; 201
     57e:	50 e4       	ldi	r21, 0x40	; 64
     580:	d5 d6       	rcall	.+3498   	; 0x132c <__mulsf3>
     582:	a7 01       	movw	r20, r14
     584:	96 01       	movw	r18, r12
     586:	d2 d6       	rcall	.+3492   	; 0x132c <__mulsf3>
     588:	34 d7       	rcall	.+3688   	; 0x13f2 <sin>
     58a:	20 91 06 20 	lds	r18, 0x2006
     58e:	30 91 07 20 	lds	r19, 0x2007
     592:	40 91 08 20 	lds	r20, 0x2008
     596:	50 91 09 20 	lds	r21, 0x2009
     59a:	c8 d6       	rcall	.+3472   	; 0x132c <__mulsf3>
     59c:	60 93 7d 20 	sts	0x207D, r22
     5a0:	70 93 7e 20 	sts	0x207E, r23
     5a4:	80 93 7f 20 	sts	0x207F, r24
     5a8:	90 93 80 20 	sts	0x2080, r25
		inputVelocity = amplitude*2*M_PI*frequency*cos(2*M_PI*frequency*timeNow);	//calculated velocity value (dps)
     5ac:	c0 90 06 20 	lds	r12, 0x2006
     5b0:	d0 90 07 20 	lds	r13, 0x2007
     5b4:	e0 90 08 20 	lds	r14, 0x2008
     5b8:	f0 90 09 20 	lds	r15, 0x2009
     5bc:	40 90 02 20 	lds	r4, 0x2002
     5c0:	50 90 03 20 	lds	r5, 0x2003
     5c4:	60 90 04 20 	lds	r6, 0x2004
     5c8:	70 90 05 20 	lds	r7, 0x2005
     5cc:	60 91 02 20 	lds	r22, 0x2002
     5d0:	70 91 03 20 	lds	r23, 0x2003
     5d4:	80 91 04 20 	lds	r24, 0x2004
     5d8:	90 91 05 20 	lds	r25, 0x2005
     5dc:	80 90 81 20 	lds	r8, 0x2081
     5e0:	90 90 82 20 	lds	r9, 0x2082
     5e4:	a0 90 83 20 	lds	r10, 0x2083
     5e8:	b0 90 84 20 	lds	r11, 0x2084
     5ec:	2b ed       	ldi	r18, 0xDB	; 219
     5ee:	3f e0       	ldi	r19, 0x0F	; 15
     5f0:	49 ec       	ldi	r20, 0xC9	; 201
     5f2:	50 e4       	ldi	r21, 0x40	; 64
     5f4:	9b d6       	rcall	.+3382   	; 0x132c <__mulsf3>
     5f6:	a5 01       	movw	r20, r10
     5f8:	94 01       	movw	r18, r8
     5fa:	98 d6       	rcall	.+3376   	; 0x132c <__mulsf3>
     5fc:	0c d5       	rcall	.+2584   	; 0x1016 <cos>
     5fe:	4b 01       	movw	r8, r22
     600:	5c 01       	movw	r10, r24
     602:	a7 01       	movw	r20, r14
     604:	96 01       	movw	r18, r12
     606:	c7 01       	movw	r24, r14
     608:	b6 01       	movw	r22, r12
     60a:	9d d4       	rcall	.+2362   	; 0xf46 <__addsf3>
     60c:	2b ed       	ldi	r18, 0xDB	; 219
     60e:	3f e0       	ldi	r19, 0x0F	; 15
     610:	49 e4       	ldi	r20, 0x49	; 73
     612:	50 e4       	ldi	r21, 0x40	; 64
     614:	8b d6       	rcall	.+3350   	; 0x132c <__mulsf3>
     616:	a3 01       	movw	r20, r6
     618:	92 01       	movw	r18, r4
     61a:	88 d6       	rcall	.+3344   	; 0x132c <__mulsf3>
     61c:	a5 01       	movw	r20, r10
     61e:	94 01       	movw	r18, r8
     620:	85 d6       	rcall	.+3338   	; 0x132c <__mulsf3>
     622:	60 93 79 20 	sts	0x2079, r22
     626:	70 93 7a 20 	sts	0x207A, r23
     62a:	80 93 7b 20 	sts	0x207B, r24
     62e:	90 93 7c 20 	sts	0x207C, r25
     632:	38 c0       	rjmp	.+112    	; 0x6a4 <__vector_20+0x1fa>
	}
	else if((inputMode == STEP) & (timeNow <= stopTime))
     634:	00 91 00 20 	lds	r16, 0x2000
     638:	60 91 81 20 	lds	r22, 0x2081
     63c:	70 91 82 20 	lds	r23, 0x2082
     640:	80 91 83 20 	lds	r24, 0x2083
     644:	90 91 84 20 	lds	r25, 0x2084
     648:	20 91 85 20 	lds	r18, 0x2085
     64c:	30 91 86 20 	lds	r19, 0x2086
     650:	40 91 87 20 	lds	r20, 0x2087
     654:	50 91 88 20 	lds	r21, 0x2088
     658:	11 e0       	ldi	r17, 0x01	; 1
     65a:	d9 d4       	rcall	.+2482   	; 0x100e <__cmpsf2>
     65c:	18 16       	cp	r1, r24
     65e:	0c f4       	brge	.+2      	; 0x662 <__vector_20+0x1b8>
     660:	10 e0       	ldi	r17, 0x00	; 0
     662:	11 23       	and	r17, r17
     664:	b9 f0       	breq	.+46     	; 0x694 <__vector_20+0x1ea>
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	01 30       	cpi	r16, 0x01	; 1
     66a:	09 f0       	breq	.+2      	; 0x66e <__vector_20+0x1c4>
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	88 23       	and	r24, r24
     670:	89 f0       	breq	.+34     	; 0x694 <__vector_20+0x1ea>
	{
		commandPosition = amplitude;	//Input position in degrees
     672:	80 91 06 20 	lds	r24, 0x2006
     676:	90 91 07 20 	lds	r25, 0x2007
     67a:	a0 91 08 20 	lds	r26, 0x2008
     67e:	b0 91 09 20 	lds	r27, 0x2009
     682:	80 93 7d 20 	sts	0x207D, r24
     686:	90 93 7e 20 	sts	0x207E, r25
     68a:	a0 93 7f 20 	sts	0x207F, r26
     68e:	b0 93 80 20 	sts	0x2080, r27
     692:	08 c0       	rjmp	.+16     	; 0x6a4 <__vector_20+0x1fa>
	}
	else
	{
		voltSet1 = 0;
     694:	10 92 6b 20 	sts	0x206B, r1
     698:	10 92 6c 20 	sts	0x206C, r1
     69c:	10 92 6d 20 	sts	0x206D, r1
     6a0:	10 92 6e 20 	sts	0x206E, r1
	}

	////Read encoder 1 and calculate position and velocity
	if(timeNow == 0)
     6a4:	60 91 81 20 	lds	r22, 0x2081
     6a8:	70 91 82 20 	lds	r23, 0x2082
     6ac:	80 91 83 20 	lds	r24, 0x2083
     6b0:	90 91 84 20 	lds	r25, 0x2084
     6b4:	20 e0       	ldi	r18, 0x00	; 0
     6b6:	30 e0       	ldi	r19, 0x00	; 0
     6b8:	a9 01       	movw	r20, r18
     6ba:	a9 d4       	rcall	.+2386   	; 0x100e <__cmpsf2>
     6bc:	81 11       	cpse	r24, r1
     6be:	10 c0       	rjmp	.+32     	; 0x6e0 <__vector_20+0x236>
	{
		encCount1_first = TCD1.CNT;
     6c0:	e0 e4       	ldi	r30, 0x40	; 64
     6c2:	f9 e0       	ldi	r31, 0x09	; 9
     6c4:	80 a1       	ldd	r24, Z+32	; 0x20
     6c6:	91 a1       	ldd	r25, Z+33	; 0x21
     6c8:	80 93 65 20 	sts	0x2065, r24
     6cc:	90 93 66 20 	sts	0x2066, r25
		encCount1_first = encCount1_first;
     6d0:	80 91 65 20 	lds	r24, 0x2065
     6d4:	90 91 66 20 	lds	r25, 0x2066
     6d8:	80 93 65 20 	sts	0x2065, r24
     6dc:	90 93 66 20 	sts	0x2066, r25
	}

	encCount1 = TCD1.CNT;
     6e0:	e0 e4       	ldi	r30, 0x40	; 64
     6e2:	f9 e0       	ldi	r31, 0x09	; 9
     6e4:	80 a1       	ldd	r24, Z+32	; 0x20
     6e6:	91 a1       	ldd	r25, Z+33	; 0x21
     6e8:	80 93 89 20 	sts	0x2089, r24
     6ec:	90 93 8a 20 	sts	0x208A, r25
	
	if(encCount1 < 0) encCount1 = 0;		//encoder 1 out of bounds check
     6f0:	80 91 89 20 	lds	r24, 0x2089
     6f4:	90 91 8a 20 	lds	r25, 0x208A
     6f8:	99 23       	and	r25, r25
     6fa:	24 f4       	brge	.+8      	; 0x704 <__vector_20+0x25a>
     6fc:	10 92 89 20 	sts	0x2089, r1
     700:	10 92 8a 20 	sts	0x208A, r1
	if(encCount1 > 8191) encCount1 = 8191;	//encoder 1 out of bounds check
     704:	80 91 89 20 	lds	r24, 0x2089
     708:	90 91 8a 20 	lds	r25, 0x208A
     70c:	81 15       	cp	r24, r1
     70e:	90 42       	sbci	r25, 0x20	; 32
     710:	34 f0       	brlt	.+12     	; 0x71e <__vector_20+0x274>
     712:	8f ef       	ldi	r24, 0xFF	; 255
     714:	9f e1       	ldi	r25, 0x1F	; 31
     716:	80 93 89 20 	sts	0x2089, r24
     71a:	90 93 8a 20 	sts	0x208A, r25
	
	position1_now = (revCnt1 + (encCount1-encCount1_first)/8191.)*360.;	//Position in degrees
     71e:	60 91 89 20 	lds	r22, 0x2089
     722:	70 91 8a 20 	lds	r23, 0x208A
     726:	80 91 65 20 	lds	r24, 0x2065
     72a:	90 91 66 20 	lds	r25, 0x2066
     72e:	c0 90 58 20 	lds	r12, 0x2058
     732:	d0 90 59 20 	lds	r13, 0x2059
     736:	e0 90 5a 20 	lds	r14, 0x205A
     73a:	f0 90 5b 20 	lds	r15, 0x205B
     73e:	68 1b       	sub	r22, r24
     740:	79 0b       	sbc	r23, r25
     742:	88 27       	eor	r24, r24
     744:	77 fd       	sbrc	r23, 7
     746:	80 95       	com	r24
     748:	98 2f       	mov	r25, r24
     74a:	03 d5       	rcall	.+2566   	; 0x1152 <__floatsisf>
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	38 ef       	ldi	r19, 0xF8	; 248
     750:	4f ef       	ldi	r20, 0xFF	; 255
     752:	55 e4       	ldi	r21, 0x45	; 69
     754:	63 d4       	rcall	.+2246   	; 0x101c <__divsf3>
     756:	a7 01       	movw	r20, r14
     758:	96 01       	movw	r18, r12
     75a:	f5 d3       	rcall	.+2026   	; 0xf46 <__addsf3>
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	44 eb       	ldi	r20, 0xB4	; 180
     762:	53 e4       	ldi	r21, 0x43	; 67
     764:	e3 d5       	rcall	.+3014   	; 0x132c <__mulsf3>
     766:	60 93 61 20 	sts	0x2061, r22
     76a:	70 93 62 20 	sts	0x2062, r23
     76e:	80 93 63 20 	sts	0x2063, r24
     772:	90 93 64 20 	sts	0x2064, r25
	
	deltapos1_ang = (position1_now - position1_m1);			//calculate change in angular position of motor 1 for current loop (degrees/count = (360 deg/rev)/(8192 counts/rev))
     776:	60 91 61 20 	lds	r22, 0x2061
     77a:	70 91 62 20 	lds	r23, 0x2062
     77e:	80 91 63 20 	lds	r24, 0x2063
     782:	90 91 64 20 	lds	r25, 0x2064
     786:	20 91 5d 20 	lds	r18, 0x205D
     78a:	30 91 5e 20 	lds	r19, 0x205E
     78e:	40 91 5f 20 	lds	r20, 0x205F
     792:	50 91 60 20 	lds	r21, 0x2060
     796:	d6 d3       	rcall	.+1964   	; 0xf44 <__subsf3>
     798:	60 93 50 20 	sts	0x2050, r22
     79c:	70 93 51 20 	sts	0x2051, r23
     7a0:	80 93 52 20 	sts	0x2052, r24
     7a4:	90 93 53 20 	sts	0x2053, r25
	velocity1_ang = (deltapos1_ang)/(Ts);					//calculate angular velocity of motor 1 for last loop (deg/s)
     7a8:	60 91 50 20 	lds	r22, 0x2050
     7ac:	70 91 51 20 	lds	r23, 0x2051
     7b0:	80 91 52 20 	lds	r24, 0x2052
     7b4:	90 91 53 20 	lds	r25, 0x2053
     7b8:	20 91 71 20 	lds	r18, 0x2071
     7bc:	30 91 72 20 	lds	r19, 0x2072
     7c0:	40 91 73 20 	lds	r20, 0x2073
     7c4:	50 91 74 20 	lds	r21, 0x2074
     7c8:	29 d4       	rcall	.+2130   	; 0x101c <__divsf3>
     7ca:	60 93 4c 20 	sts	0x204C, r22
     7ce:	70 93 4d 20 	sts	0x204D, r23
     7d2:	80 93 4e 20 	sts	0x204E, r24
     7d6:	90 93 4f 20 	sts	0x204F, r25
	
	errorNow = commandPosition - position1_now;
     7da:	60 91 7d 20 	lds	r22, 0x207D
     7de:	70 91 7e 20 	lds	r23, 0x207E
     7e2:	80 91 7f 20 	lds	r24, 0x207F
     7e6:	90 91 80 20 	lds	r25, 0x2080
     7ea:	20 91 61 20 	lds	r18, 0x2061
     7ee:	30 91 62 20 	lds	r19, 0x2062
     7f2:	40 91 63 20 	lds	r20, 0x2063
     7f6:	50 91 64 20 	lds	r21, 0x2064
     7fa:	a4 d3       	rcall	.+1864   	; 0xf44 <__subsf3>
     7fc:	60 93 40 20 	sts	0x2040, r22
     800:	70 93 41 20 	sts	0x2041, r23
     804:	80 93 42 20 	sts	0x2042, r24
     808:	90 93 43 20 	sts	0x2043, r25
	
	//Controller
	
	//ctrlOut = Kp * errorNow;	//Proportional Controller

	ctrlOut = ((-Kp) + 1./2.*Ki*Ts)*error_m1 + (Kp + 1./2.*Ki*Ts)*errorNow + ctrlOut_m1;	//PI Controller
     80c:	60 91 0a 20 	lds	r22, 0x200A
     810:	70 91 0b 20 	lds	r23, 0x200B
     814:	80 91 0c 20 	lds	r24, 0x200C
     818:	90 91 0d 20 	lds	r25, 0x200D
     81c:	40 90 71 20 	lds	r4, 0x2071
     820:	50 90 72 20 	lds	r5, 0x2072
     824:	60 90 73 20 	lds	r6, 0x2073
     828:	70 90 74 20 	lds	r7, 0x2074
     82c:	80 90 0e 20 	lds	r8, 0x200E
     830:	90 90 0f 20 	lds	r9, 0x200F
     834:	a0 90 10 20 	lds	r10, 0x2010
     838:	b0 90 11 20 	lds	r11, 0x2011
     83c:	20 91 3c 20 	lds	r18, 0x203C
     840:	30 91 3d 20 	lds	r19, 0x203D
     844:	40 91 3e 20 	lds	r20, 0x203E
     848:	50 91 3f 20 	lds	r21, 0x203F
     84c:	29 83       	std	Y+1, r18	; 0x01
     84e:	3a 83       	std	Y+2, r19	; 0x02
     850:	4b 83       	std	Y+3, r20	; 0x03
     852:	5c 83       	std	Y+4, r21	; 0x04
     854:	20 91 0a 20 	lds	r18, 0x200A
     858:	30 91 0b 20 	lds	r19, 0x200B
     85c:	40 91 0c 20 	lds	r20, 0x200C
     860:	50 91 0d 20 	lds	r21, 0x200D
     864:	2d 83       	std	Y+5, r18	; 0x05
     866:	3e 83       	std	Y+6, r19	; 0x06
     868:	4f 83       	std	Y+7, r20	; 0x07
     86a:	58 87       	std	Y+8, r21	; 0x08
     86c:	20 91 71 20 	lds	r18, 0x2071
     870:	30 91 72 20 	lds	r19, 0x2072
     874:	40 91 73 20 	lds	r20, 0x2073
     878:	50 91 74 20 	lds	r21, 0x2074
     87c:	29 87       	std	Y+9, r18	; 0x09
     87e:	3a 87       	std	Y+10, r19	; 0x0a
     880:	4b 87       	std	Y+11, r20	; 0x0b
     882:	5c 87       	std	Y+12, r21	; 0x0c
     884:	20 91 0e 20 	lds	r18, 0x200E
     888:	30 91 0f 20 	lds	r19, 0x200F
     88c:	40 91 10 20 	lds	r20, 0x2010
     890:	50 91 11 20 	lds	r21, 0x2011
     894:	2d 87       	std	Y+13, r18	; 0x0d
     896:	3e 87       	std	Y+14, r19	; 0x0e
     898:	4f 87       	std	Y+15, r20	; 0x0f
     89a:	58 8b       	std	Y+16, r21	; 0x10
     89c:	20 91 40 20 	lds	r18, 0x2040
     8a0:	30 91 41 20 	lds	r19, 0x2041
     8a4:	40 91 42 20 	lds	r20, 0x2042
     8a8:	50 91 43 20 	lds	r21, 0x2043
     8ac:	29 8b       	std	Y+17, r18	; 0x11
     8ae:	3a 8b       	std	Y+18, r19	; 0x12
     8b0:	4b 8b       	std	Y+19, r20	; 0x13
     8b2:	5c 8b       	std	Y+20, r21	; 0x14
     8b4:	c0 90 44 20 	lds	r12, 0x2044
     8b8:	d0 90 45 20 	lds	r13, 0x2045
     8bc:	e0 90 46 20 	lds	r14, 0x2046
     8c0:	f0 90 47 20 	lds	r15, 0x2047
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	30 e0       	ldi	r19, 0x00	; 0
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	5f e3       	ldi	r21, 0x3F	; 63
     8cc:	2f d5       	rcall	.+2654   	; 0x132c <__mulsf3>
     8ce:	a3 01       	movw	r20, r6
     8d0:	92 01       	movw	r18, r4
     8d2:	2c d5       	rcall	.+2648   	; 0x132c <__mulsf3>
     8d4:	a5 01       	movw	r20, r10
     8d6:	94 01       	movw	r18, r8
     8d8:	35 d3       	rcall	.+1642   	; 0xf44 <__subsf3>
     8da:	29 81       	ldd	r18, Y+1	; 0x01
     8dc:	3a 81       	ldd	r19, Y+2	; 0x02
     8de:	4b 81       	ldd	r20, Y+3	; 0x03
     8e0:	5c 81       	ldd	r21, Y+4	; 0x04
     8e2:	24 d5       	rcall	.+2632   	; 0x132c <__mulsf3>
     8e4:	4b 01       	movw	r8, r22
     8e6:	5c 01       	movw	r10, r24
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	40 e0       	ldi	r20, 0x00	; 0
     8ee:	5f e3       	ldi	r21, 0x3F	; 63
     8f0:	6d 81       	ldd	r22, Y+5	; 0x05
     8f2:	7e 81       	ldd	r23, Y+6	; 0x06
     8f4:	8f 81       	ldd	r24, Y+7	; 0x07
     8f6:	98 85       	ldd	r25, Y+8	; 0x08
     8f8:	19 d5       	rcall	.+2610   	; 0x132c <__mulsf3>
     8fa:	29 85       	ldd	r18, Y+9	; 0x09
     8fc:	3a 85       	ldd	r19, Y+10	; 0x0a
     8fe:	4b 85       	ldd	r20, Y+11	; 0x0b
     900:	5c 85       	ldd	r21, Y+12	; 0x0c
     902:	14 d5       	rcall	.+2600   	; 0x132c <__mulsf3>
     904:	2d 85       	ldd	r18, Y+13	; 0x0d
     906:	3e 85       	ldd	r19, Y+14	; 0x0e
     908:	4f 85       	ldd	r20, Y+15	; 0x0f
     90a:	58 89       	ldd	r21, Y+16	; 0x10
     90c:	1c d3       	rcall	.+1592   	; 0xf46 <__addsf3>
     90e:	29 89       	ldd	r18, Y+17	; 0x11
     910:	3a 89       	ldd	r19, Y+18	; 0x12
     912:	4b 89       	ldd	r20, Y+19	; 0x13
     914:	5c 89       	ldd	r21, Y+20	; 0x14
     916:	0a d5       	rcall	.+2580   	; 0x132c <__mulsf3>
     918:	9b 01       	movw	r18, r22
     91a:	ac 01       	movw	r20, r24
     91c:	c5 01       	movw	r24, r10
     91e:	b4 01       	movw	r22, r8
     920:	12 d3       	rcall	.+1572   	; 0xf46 <__addsf3>
     922:	a7 01       	movw	r20, r14
     924:	96 01       	movw	r18, r12
     926:	0f d3       	rcall	.+1566   	; 0xf46 <__addsf3>
     928:	60 93 48 20 	sts	0x2048, r22
     92c:	70 93 49 20 	sts	0x2049, r23
     930:	80 93 4a 20 	sts	0x204A, r24
     934:	90 93 4b 20 	sts	0x204B, r25
	//ctrlOut = ctrlOut_m1 + 10*errorNow - 10*error_m1; //not so sure

	voltSet1 = ctrlOut;
     938:	80 91 48 20 	lds	r24, 0x2048
     93c:	90 91 49 20 	lds	r25, 0x2049
     940:	a0 91 4a 20 	lds	r26, 0x204A
     944:	b0 91 4b 20 	lds	r27, 0x204B
     948:	80 93 6b 20 	sts	0x206B, r24
     94c:	90 93 6c 20 	sts	0x206C, r25
     950:	a0 93 6d 20 	sts	0x206D, r26
     954:	b0 93 6e 20 	sts	0x206E, r27
	//if(revCnt1 != revCnt1_m1)
	//{
	//neutralPositionCounter += 1;
	//}

	position1_m1 = position1_now;			//store last position of motor 1
     958:	80 91 61 20 	lds	r24, 0x2061
     95c:	90 91 62 20 	lds	r25, 0x2062
     960:	a0 91 63 20 	lds	r26, 0x2063
     964:	b0 91 64 20 	lds	r27, 0x2064
     968:	80 93 5d 20 	sts	0x205D, r24
     96c:	90 93 5e 20 	sts	0x205E, r25
     970:	a0 93 5f 20 	sts	0x205F, r26
     974:	b0 93 60 20 	sts	0x2060, r27
	revCnt1_m1 = revCnt1;					//store last rev counter
     978:	80 91 58 20 	lds	r24, 0x2058
     97c:	90 91 59 20 	lds	r25, 0x2059
     980:	a0 91 5a 20 	lds	r26, 0x205A
     984:	b0 91 5b 20 	lds	r27, 0x205B
     988:	80 93 54 20 	sts	0x2054, r24
     98c:	90 93 55 20 	sts	0x2055, r25
     990:	a0 93 56 20 	sts	0x2056, r26
     994:	b0 93 57 20 	sts	0x2057, r27
	error_m1 = errorNow;					//store last error value for motor 1
     998:	80 91 40 20 	lds	r24, 0x2040
     99c:	90 91 41 20 	lds	r25, 0x2041
     9a0:	a0 91 42 20 	lds	r26, 0x2042
     9a4:	b0 91 43 20 	lds	r27, 0x2043
     9a8:	80 93 3c 20 	sts	0x203C, r24
     9ac:	90 93 3d 20 	sts	0x203D, r25
     9b0:	a0 93 3e 20 	sts	0x203E, r26
     9b4:	b0 93 3f 20 	sts	0x203F, r27
	ctrlOut_m1 = ctrlOut;					//store last control value for motor 1
     9b8:	80 91 48 20 	lds	r24, 0x2048
     9bc:	90 91 49 20 	lds	r25, 0x2049
     9c0:	a0 91 4a 20 	lds	r26, 0x204A
     9c4:	b0 91 4b 20 	lds	r27, 0x204B
     9c8:	80 93 44 20 	sts	0x2044, r24
     9cc:	90 93 45 20 	sts	0x2045, r25
     9d0:	a0 93 46 20 	sts	0x2046, r26
     9d4:	b0 93 47 20 	sts	0x2047, r27
	
	//printf("%f \t %f \t %f \t %f \t %f \t %f \n", timeNow, voltSet1, commandPosition, position1_now, inputVelocity, velocity1_ang);
	//printf("%f \t %f \t %f \t %f \t %f \t %f \n", timeNow, voltSet1, commandPosition, position1_now, revCnt1, stopPosition);

	if(abs(voltSet1) >= maxVoltage)
     9d8:	60 91 6b 20 	lds	r22, 0x206B
     9dc:	70 91 6c 20 	lds	r23, 0x206C
     9e0:	80 91 6d 20 	lds	r24, 0x206D
     9e4:	90 91 6e 20 	lds	r25, 0x206E
     9e8:	c0 90 12 20 	lds	r12, 0x2012
     9ec:	d0 90 13 20 	lds	r13, 0x2013
     9f0:	e0 90 14 20 	lds	r14, 0x2014
     9f4:	f0 90 15 20 	lds	r15, 0x2015
     9f8:	79 d3       	rcall	.+1778   	; 0x10ec <__fixsfsi>
     9fa:	9b 01       	movw	r18, r22
     9fc:	77 23       	and	r23, r23
     9fe:	24 f4       	brge	.+8      	; 0xa08 <__vector_20+0x55e>
     a00:	22 27       	eor	r18, r18
     a02:	33 27       	eor	r19, r19
     a04:	26 1b       	sub	r18, r22
     a06:	37 0b       	sbc	r19, r23
     a08:	b9 01       	movw	r22, r18
     a0a:	88 27       	eor	r24, r24
     a0c:	77 fd       	sbrc	r23, 7
     a0e:	80 95       	com	r24
     a10:	98 2f       	mov	r25, r24
     a12:	9f d3       	rcall	.+1854   	; 0x1152 <__floatsisf>
     a14:	a7 01       	movw	r20, r14
     a16:	96 01       	movw	r18, r12
     a18:	85 d4       	rcall	.+2314   	; 0x1324 <__gesf2>
     a1a:	88 23       	and	r24, r24
     a1c:	d4 f0       	brlt	.+52     	; 0xa52 <__vector_20+0x5a8>
	{
		//printf("\nBumped back in: %f",voltSet1);
		voltSet1 = copysign(maxVoltage,voltSet1);
     a1e:	40 91 6b 20 	lds	r20, 0x206B
     a22:	50 91 6c 20 	lds	r21, 0x206C
     a26:	60 91 6d 20 	lds	r22, 0x206D
     a2a:	70 91 6e 20 	lds	r23, 0x206E
     a2e:	80 91 12 20 	lds	r24, 0x2012
     a32:	90 91 13 20 	lds	r25, 0x2013
     a36:	a0 91 14 20 	lds	r26, 0x2014
     a3a:	b0 91 15 20 	lds	r27, 0x2015
    The copysign() function returns \a __x but with the sign of \a __y.
    They work even if \a __x or \a __y are NaN or zero.
*/
__ATTR_CONST__ static inline double copysign (double __x, double __y)
{
    __asm__ (
     a3e:	77 fb       	bst	r23, 7
     a40:	b7 f9       	bld	r27, 7
     a42:	80 93 6b 20 	sts	0x206B, r24
     a46:	90 93 6c 20 	sts	0x206C, r25
     a4a:	a0 93 6d 20 	sts	0x206D, r26
     a4e:	b0 93 6e 20 	sts	0x206E, r27
	} //if greater than max, set value to max with original sign

	pwmtoMotor1(voltSet1);
     a52:	60 91 6b 20 	lds	r22, 0x206B
     a56:	70 91 6c 20 	lds	r23, 0x206C
     a5a:	80 91 6d 20 	lds	r24, 0x206D
     a5e:	90 91 6e 20 	lds	r25, 0x206E
     a62:	93 dc       	rcall	.-1754   	; 0x38a <pwmtoMotor1>
	
	printf("%f \t %f \t %f \t %f \n", timeNow, voltSet1, commandPosition, position1_now);
     a64:	80 90 61 20 	lds	r8, 0x2061
     a68:	90 90 62 20 	lds	r9, 0x2062
     a6c:	a0 90 63 20 	lds	r10, 0x2063
     a70:	b0 90 64 20 	lds	r11, 0x2064
     a74:	c0 90 7d 20 	lds	r12, 0x207D
     a78:	d0 90 7e 20 	lds	r13, 0x207E
     a7c:	e0 90 7f 20 	lds	r14, 0x207F
     a80:	f0 90 80 20 	lds	r15, 0x2080
     a84:	40 91 6b 20 	lds	r20, 0x206B
     a88:	50 91 6c 20 	lds	r21, 0x206C
     a8c:	60 91 6d 20 	lds	r22, 0x206D
     a90:	70 91 6e 20 	lds	r23, 0x206E
     a94:	80 91 81 20 	lds	r24, 0x2081
     a98:	90 91 82 20 	lds	r25, 0x2082
     a9c:	a0 91 83 20 	lds	r26, 0x2083
     aa0:	b0 91 84 20 	lds	r27, 0x2084
     aa4:	bf 92       	push	r11
     aa6:	af 92       	push	r10
     aa8:	9f 92       	push	r9
     aaa:	8f 92       	push	r8
     aac:	ff 92       	push	r15
     aae:	ef 92       	push	r14
     ab0:	df 92       	push	r13
     ab2:	cf 92       	push	r12
     ab4:	7f 93       	push	r23
     ab6:	6f 93       	push	r22
     ab8:	5f 93       	push	r21
     aba:	4f 93       	push	r20
     abc:	bf 93       	push	r27
     abe:	af 93       	push	r26
     ac0:	9f 93       	push	r25
     ac2:	8f 93       	push	r24
     ac4:	84 e2       	ldi	r24, 0x24	; 36
     ac6:	90 e2       	ldi	r25, 0x20	; 32
     ac8:	9f 93       	push	r25
     aca:	8f 93       	push	r24
     acc:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <printf>

	timeNow += Ts;	//Calculate time in program
     ad0:	60 91 81 20 	lds	r22, 0x2081
     ad4:	70 91 82 20 	lds	r23, 0x2082
     ad8:	80 91 83 20 	lds	r24, 0x2083
     adc:	90 91 84 20 	lds	r25, 0x2084
     ae0:	20 91 71 20 	lds	r18, 0x2071
     ae4:	30 91 72 20 	lds	r19, 0x2072
     ae8:	40 91 73 20 	lds	r20, 0x2073
     aec:	50 91 74 20 	lds	r21, 0x2074
     af0:	2a d2       	rcall	.+1108   	; 0xf46 <__addsf3>
     af2:	60 93 81 20 	sts	0x2081, r22
     af6:	70 93 82 20 	sts	0x2082, r23
     afa:	80 93 83 20 	sts	0x2083, r24
     afe:	90 93 84 20 	sts	0x2084, r25
     b02:	cd bf       	out	0x3d, r28	; 61
     b04:	de bf       	out	0x3e, r29	; 62
}
     b06:	64 96       	adiw	r28, 0x14	; 20
     b08:	cd bf       	out	0x3d, r28	; 61
     b0a:	de bf       	out	0x3e, r29	; 62
     b0c:	df 91       	pop	r29
     b0e:	cf 91       	pop	r28
     b10:	ff 91       	pop	r31
     b12:	ef 91       	pop	r30
     b14:	bf 91       	pop	r27
     b16:	af 91       	pop	r26
     b18:	9f 91       	pop	r25
     b1a:	8f 91       	pop	r24
     b1c:	7f 91       	pop	r23
     b1e:	6f 91       	pop	r22
     b20:	5f 91       	pop	r21
     b22:	4f 91       	pop	r20
     b24:	3f 91       	pop	r19
     b26:	2f 91       	pop	r18
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	df 90       	pop	r13
     b32:	cf 90       	pop	r12
     b34:	bf 90       	pop	r11
     b36:	af 90       	pop	r10
     b38:	9f 90       	pop	r9
     b3a:	8f 90       	pop	r8
     b3c:	7f 90       	pop	r7
     b3e:	6f 90       	pop	r6
     b40:	5f 90       	pop	r5
     b42:	4f 90       	pop	r4
     b44:	0f 90       	pop	r0
     b46:	0b be       	out	0x3b, r0	; 59
     b48:	0f 90       	pop	r0
     b4a:	0a be       	out	0x3a, r0	; 58
     b4c:	0f 90       	pop	r0
     b4e:	09 be       	out	0x39, r0	; 57
     b50:	0f 90       	pop	r0
     b52:	08 be       	out	0x38, r0	; 56
     b54:	0f 90       	pop	r0
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	0f 90       	pop	r0
     b5a:	1f 90       	pop	r1
     b5c:	18 95       	reti

00000b5e <__vector_83>:
		TCF1.CCA = digiHB1;
	}
}

ISR(TCD1_OVF_vect)
{
     b5e:	1f 92       	push	r1
     b60:	0f 92       	push	r0
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	0f 92       	push	r0
     b66:	11 24       	eor	r1, r1
     b68:	08 b6       	in	r0, 0x38	; 56
     b6a:	0f 92       	push	r0
     b6c:	18 be       	out	0x38, r1	; 56
     b6e:	09 b6       	in	r0, 0x39	; 57
     b70:	0f 92       	push	r0
     b72:	19 be       	out	0x39, r1	; 57
     b74:	0b b6       	in	r0, 0x3b	; 59
     b76:	0f 92       	push	r0
     b78:	1b be       	out	0x3b, r1	; 59
     b7a:	2f 93       	push	r18
     b7c:	3f 93       	push	r19
     b7e:	4f 93       	push	r20
     b80:	5f 93       	push	r21
     b82:	6f 93       	push	r22
     b84:	7f 93       	push	r23
     b86:	8f 93       	push	r24
     b88:	9f 93       	push	r25
     b8a:	af 93       	push	r26
     b8c:	bf 93       	push	r27
     b8e:	ef 93       	push	r30
     b90:	ff 93       	push	r31
	if (TCD1.CTRLFSET & TC1_DIR_bm)	//if DIR pin is 0, encoder direction is positive (counting up); if DIR pin is 1, enoder direction is negative (counting down)
     b92:	e0 e4       	ldi	r30, 0x40	; 64
     b94:	f9 e0       	ldi	r31, 0x09	; 9
     b96:	81 85       	ldd	r24, Z+9	; 0x09
     b98:	80 ff       	sbrs	r24, 0
     b9a:	18 c0       	rjmp	.+48     	; 0xbcc <__vector_83+0x6e>
	{
		--revCnt1;		//decrement RevCnt1 variable if overflow in negative direction
     b9c:	60 91 58 20 	lds	r22, 0x2058
     ba0:	70 91 59 20 	lds	r23, 0x2059
     ba4:	80 91 5a 20 	lds	r24, 0x205A
     ba8:	90 91 5b 20 	lds	r25, 0x205B
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e8       	ldi	r20, 0x80	; 128
     bb2:	5f e3       	ldi	r21, 0x3F	; 63
     bb4:	c7 d1       	rcall	.+910    	; 0xf44 <__subsf3>
     bb6:	60 93 58 20 	sts	0x2058, r22
     bba:	70 93 59 20 	sts	0x2059, r23
     bbe:	80 93 5a 20 	sts	0x205A, r24
     bc2:	90 93 5b 20 	sts	0x205B, r25
		overFlag1 = 0;	//the overFlag variable is solely intended to make the double firing problem visible in the positive direction
     bc6:	10 92 5c 20 	sts	0x205C, r1
     bca:	23 c0       	rjmp	.+70     	; 0xc12 <__vector_83+0xb4>
		//printf("revCnt1 is %d \n\n", revCnt1);
	}
	else if (overFlag1 == 0)
     bcc:	80 91 5c 20 	lds	r24, 0x205C
     bd0:	81 11       	cpse	r24, r1
     bd2:	19 c0       	rjmp	.+50     	; 0xc06 <__vector_83+0xa8>
	{
		++revCnt1;		//increment RevCnt1 variable if overflow in positive direction
     bd4:	60 91 58 20 	lds	r22, 0x2058
     bd8:	70 91 59 20 	lds	r23, 0x2059
     bdc:	80 91 5a 20 	lds	r24, 0x205A
     be0:	90 91 5b 20 	lds	r25, 0x205B
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	40 e8       	ldi	r20, 0x80	; 128
     bea:	5f e3       	ldi	r21, 0x3F	; 63
     bec:	ac d1       	rcall	.+856    	; 0xf46 <__addsf3>
     bee:	60 93 58 20 	sts	0x2058, r22
     bf2:	70 93 59 20 	sts	0x2059, r23
     bf6:	80 93 5a 20 	sts	0x205A, r24
     bfa:	90 93 5b 20 	sts	0x205B, r25
		overFlag1 = 1;	//when positive overflow from TOP to 0, set flag to 1
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	80 93 5c 20 	sts	0x205C, r24
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <__vector_83+0xb4>
		//printf("revCnt1 is %d \n\n", revCnt1);
	}
	else if (overFlag1 == 1)
     c06:	80 91 5c 20 	lds	r24, 0x205C
     c0a:	81 30       	cpi	r24, 0x01	; 1
     c0c:	11 f4       	brne	.+4      	; 0xc12 <__vector_83+0xb4>
	overFlag1 = 0;		//when overflow is positive, and flag is set a second time (in error) from 0 to 1, clear the flag
     c0e:	10 92 5c 20 	sts	0x205C, r1
}
     c12:	ff 91       	pop	r31
     c14:	ef 91       	pop	r30
     c16:	bf 91       	pop	r27
     c18:	af 91       	pop	r26
     c1a:	9f 91       	pop	r25
     c1c:	8f 91       	pop	r24
     c1e:	7f 91       	pop	r23
     c20:	6f 91       	pop	r22
     c22:	5f 91       	pop	r21
     c24:	4f 91       	pop	r20
     c26:	3f 91       	pop	r19
     c28:	2f 91       	pop	r18
     c2a:	0f 90       	pop	r0
     c2c:	0b be       	out	0x3b, r0	; 59
     c2e:	0f 90       	pop	r0
     c30:	09 be       	out	0x39, r0	; 57
     c32:	0f 90       	pop	r0
     c34:	08 be       	out	0x38, r0	; 56
     c36:	0f 90       	pop	r0
     c38:	0f be       	out	0x3f, r0	; 63
     c3a:	0f 90       	pop	r0
     c3c:	1f 90       	pop	r1
     c3e:	18 95       	reti

00000c40 <clk_init>:

void clk_init(void)
{
	OSC.CTRL |= OSC_RC32MEN_bm;					//enable 32Mhz RC Osc
     c40:	e0 e5       	ldi	r30, 0x50	; 80
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	82 60       	ori	r24, 0x02	; 2
     c48:	80 83       	st	Z, r24
	while(!(OSC.STATUS & OSC_RC32MRDY_bm));		//wait for Osc to be stable
     c4a:	81 81       	ldd	r24, Z+1	; 0x01
     c4c:	81 ff       	sbrs	r24, 1
     c4e:	fd cf       	rjmp	.-6      	; 0xc4a <clk_init+0xa>
	CCP = CCP_IOREG_gc;							//disables IO protection for 4 clock cycles to permit selection of system clock
     c50:	88 ed       	ldi	r24, 0xD8	; 216
     c52:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;			//set 32Mhz RC Osc as system clock
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 40 00 	sts	0x0040, r24
     c5a:	08 95       	ret

00000c5c <timer_init>:
}


void timer_init(uint16_t topCount)	//initialization of Interrupt timer
{
	TCC1.CTRLB |= TC_WGMODE_NORMAL_gc;		//Normal mode on Port C, Output Compare pins disconnected
     c5c:	e0 e4       	ldi	r30, 0x40	; 64
     c5e:	f8 e0       	ldi	r31, 0x08	; 8
     c60:	21 81       	ldd	r18, Z+1	; 0x01
     c62:	21 83       	std	Z+1, r18	; 0x01
	TCC1.INTCTRLA |= TC_OVFINTLVL_LO_gc;	//Enable overflow interrupt
     c64:	26 81       	ldd	r18, Z+6	; 0x06
     c66:	21 60       	ori	r18, 0x01	; 1
     c68:	26 83       	std	Z+6, r18	; 0x06
	TCC1.PER = topCount;					//Set Period
     c6a:	86 a3       	std	Z+38, r24	; 0x26
     c6c:	97 a3       	std	Z+39, r25	; 0x27
	TCC1.CTRLA |= TC_CLKSEL_DIV256_gc;		//Start at Clk/256
     c6e:	80 81       	ld	r24, Z
     c70:	86 60       	ori	r24, 0x06	; 6
     c72:	80 83       	st	Z, r24
     c74:	08 95       	ret

00000c76 <usart_init>:


void usart_init(void) //(Port C)
{

	PORTC.DIRSET = PIN3_bm;		//Set Tx pin as output
     c76:	e0 e4       	ldi	r30, 0x40	; 64
     c78:	f6 e0       	ldi	r31, 0x06	; 6
     c7a:	88 e0       	ldi	r24, 0x08	; 8
     c7c:	81 83       	std	Z+1, r24	; 0x01
	PORTC.DIRCLR = PIN2_bm;		//Set Rx pin as input (this should be default)
     c7e:	94 e0       	ldi	r25, 0x04	; 4
     c80:	92 83       	std	Z+2, r25	; 0x02
	PORTC.OUTSET = PIN3_bm;		//Set Tx pin high
     c82:	85 83       	std	Z+5, r24	; 0x05

	//Set mode, baud rate and frame format
	USARTC0.CTRLC |= USART_CMODE_ASYNCHRONOUS_gc | USART_CHSIZE_8BIT_gc;
     c84:	e0 ea       	ldi	r30, 0xA0	; 160
     c86:	f8 e0       	ldi	r31, 0x08	; 8
     c88:	85 81       	ldd	r24, Z+5	; 0x05
     c8a:	83 60       	ori	r24, 0x03	; 3
     c8c:	85 83       	std	Z+5, r24	; 0x05
	USARTC0.BAUDCTRLA = (uint8_t)BSEL;
     c8e:	8b e6       	ldi	r24, 0x6B	; 107
     c90:	86 83       	std	Z+6, r24	; 0x06
	USARTC0.BAUDCTRLB = (BSCALE<<USART_BSCALE0_bp) | (BSEL>>8);
     c92:	80 eb       	ldi	r24, 0xB0	; 176
     c94:	87 83       	std	Z+7, r24	; 0x07

	//enable Tx (Rx not enabled)
	USARTC0.CTRLB |= USART_TXEN_bm;
     c96:	84 81       	ldd	r24, Z+4	; 0x04
     c98:	88 60       	ori	r24, 0x08	; 8
     c9a:	84 83       	std	Z+4, r24	; 0x04
     c9c:	08 95       	ret

00000c9e <pwmtimer_init>:
}


void pwmtimer_init(void) //initialization of PWM timer (come back to period of timer)
{
	TCF1.CTRLB = TC_WGMODE_SS_gc | TC1_CCAEN_bm;		//Singleslope PWM mode, enable compare on Channel A
     c9e:	e0 e4       	ldi	r30, 0x40	; 64
     ca0:	fb e0       	ldi	r31, 0x0B	; 11
     ca2:	83 e1       	ldi	r24, 0x13	; 19
     ca4:	81 83       	std	Z+1, r24	; 0x01
	TCF1.PER = 1599;									//Set Period at 20k Hz (20k = 32e6/(1(top+1))), top = 1599, res = 10.64
     ca6:	8f e3       	ldi	r24, 0x3F	; 63
     ca8:	96 e0       	ldi	r25, 0x06	; 6
     caa:	86 a3       	std	Z+38, r24	; 0x26
     cac:	97 a3       	std	Z+39, r25	; 0x27
	TCF1.CTRLA |= TC_CLKSEL_DIV1_gc;					//Start at Clk/1
     cae:	80 81       	ld	r24, Z
     cb0:	81 60       	ori	r24, 0x01	; 1
     cb2:	80 83       	st	Z, r24
	PORTF.DIRSET = PIN4_bm;								//Set Port F channel as output, ChA on pin4
     cb4:	80 e1       	ldi	r24, 0x10	; 16
     cb6:	a0 ea       	ldi	r26, 0xA0	; 160
     cb8:	b6 e0       	ldi	r27, 0x06	; 6
     cba:	11 96       	adiw	r26, 0x01	; 1
     cbc:	8c 93       	st	X, r24
	TCF1.CCA = 0;										//Set starting duty cycle on compare channel A
     cbe:	10 a6       	std	Z+40, r1	; 0x28
     cc0:	11 a6       	std	Z+41, r1	; 0x29
     cc2:	08 95       	ret

00000cc4 <encoder_init>:


void encoder_init(void)
{
	//set up 2 encoders, do not use index
	PORTD.DIRCLR = PIN0_bm | PIN1_bm | PIN3_bm | PIN4_bm; //set encoder pins as input (Enc1 pins 0-2, Enc2, pins 3-5)
     cc4:	e0 e6       	ldi	r30, 0x60	; 96
     cc6:	f6 e0       	ldi	r31, 0x06	; 6
     cc8:	8b e1       	ldi	r24, 0x1B	; 27
     cca:	82 83       	std	Z+2, r24	; 0x02
	PORTD.PIN0CTRL |= PORT_ISC_LEVEL_gc;		//set Pin 0 to low level sensing (encoder 1 phase A)
     ccc:	80 89       	ldd	r24, Z+16	; 0x10
     cce:	83 60       	ori	r24, 0x03	; 3
     cd0:	80 8b       	std	Z+16, r24	; 0x10
	PORTD.PIN1CTRL |= PORT_ISC_LEVEL_gc;		//set Pin 1 to low level sensing (encoder 1 phase B)
     cd2:	81 89       	ldd	r24, Z+17	; 0x11
     cd4:	83 60       	ori	r24, 0x03	; 3
     cd6:	81 8b       	std	Z+17, r24	; 0x11
	PORTD.PIN3CTRL |= PORT_ISC_LEVEL_gc;		//set Pin 3 to low level sensing (encoder 2 phase A)
     cd8:	83 89       	ldd	r24, Z+19	; 0x13
     cda:	83 60       	ori	r24, 0x03	; 3
     cdc:	83 8b       	std	Z+19, r24	; 0x13
	PORTD.PIN4CTRL |= PORT_ISC_LEVEL_gc;		//set Pin 4 to low level sensing (encoder 2 phase B)
     cde:	84 89       	ldd	r24, Z+20	; 0x14
     ce0:	83 60       	ori	r24, 0x03	; 3
     ce2:	84 8b       	std	Z+20, r24	; 0x14

	//setup event system
	EVSYS.CH0MUX = EVSYS_CHMUX_PORTD_PIN0_gc;	//route PIND0 (encoder 1 phase A) to Event channel 0
     ce4:	e0 e8       	ldi	r30, 0x80	; 128
     ce6:	f1 e0       	ldi	r31, 0x01	; 1
     ce8:	88 e6       	ldi	r24, 0x68	; 104
     cea:	80 83       	st	Z, r24
	EVSYS.CH2MUX = EVSYS_CHMUX_PORTD_PIN3_gc;	//route PIND3 (encoder 2 phase A) to Event channel 2
     cec:	8b e6       	ldi	r24, 0x6B	; 107
     cee:	82 83       	std	Z+2, r24	; 0x02
	EVSYS.CH0CTRL |= EVSYS_QDEN_bm 				//enable quadrature decode for encoder 1
     cf0:	80 85       	ldd	r24, Z+8	; 0x08
     cf2:	89 60       	ori	r24, 0x09	; 9
     cf4:	80 87       	std	Z+8, r24	; 0x08
	| EVSYS_DIGFILT_2SAMPLES_gc;				//set digital filter to 2 samples for encoder 1
	EVSYS.CH2CTRL |= EVSYS_QDEN_bm				//enable quadrature decode for encoder 2
     cf6:	82 85       	ldd	r24, Z+10	; 0x0a
     cf8:	89 60       	ori	r24, 0x09	; 9
     cfa:	82 87       	std	Z+10, r24	; 0x0a
	| EVSYS_DIGFILT_2SAMPLES_gc;				//set digital filter to 2 samples for encoder 2

	//setup timer for encoder 1
	TCD1.CTRLA |= TC_CLKSEL_DIV1_gc;			//enables timer type 1 on Port D, at peripheral clock speed
     cfc:	e0 e4       	ldi	r30, 0x40	; 64
     cfe:	f9 e0       	ldi	r31, 0x09	; 9
     d00:	80 81       	ld	r24, Z
     d02:	81 60       	ori	r24, 0x01	; 1
     d04:	80 83       	st	Z, r24
	TCD1.CTRLD |= TC_EVACT_QDEC_gc				//set event action of timer to quadrature decode
     d06:	83 81       	ldd	r24, Z+3	; 0x03
     d08:	88 66       	ori	r24, 0x68	; 104
     d0a:	83 83       	std	Z+3, r24	; 0x03
	| TC_EVSEL_CH0_gc;							//set EVCH0 as source (encoder 1)
	TCD1.PER = 8191;							//set period based on: (((pulses/rev)*1/1)*4 - 1) of WHEEL (This CUI encoder has 2048 pulses/rev, at 1:1 (gear out/gear in) scale for output shaft of Tiff's motor - mounted after gear box)
     d0c:	8f ef       	ldi	r24, 0xFF	; 255
     d0e:	9f e1       	ldi	r25, 0x1F	; 31
     d10:	86 a3       	std	Z+38, r24	; 0x26
     d12:	97 a3       	std	Z+39, r25	; 0x27
	TCD1.INTCTRLA |= TC_OVFINTLVL_MED_gc;		//set priority of timer overflow interrupt to medium
     d14:	26 81       	ldd	r18, Z+6	; 0x06
     d16:	22 60       	ori	r18, 0x02	; 2
     d18:	26 83       	std	Z+6, r18	; 0x06

	//setup timer for encoder 2
	TCE1.CTRLA |= TC_CLKSEL_DIV1_gc;			//enables timer type 1 on Port E, at peripheral clock speed
     d1a:	e0 e4       	ldi	r30, 0x40	; 64
     d1c:	fa e0       	ldi	r31, 0x0A	; 10
     d1e:	20 81       	ld	r18, Z
     d20:	21 60       	ori	r18, 0x01	; 1
     d22:	20 83       	st	Z, r18
	TCE1.CTRLD |= TC_EVACT_QDEC_gc				//set event action of timer to quadrature decode
     d24:	23 81       	ldd	r18, Z+3	; 0x03
     d26:	2a 66       	ori	r18, 0x6A	; 106
     d28:	23 83       	std	Z+3, r18	; 0x03
	| TC_EVSEL_CH2_gc;							//set EVCH2 as source (encoder 2)
	TCE1.PER = 8191;
     d2a:	86 a3       	std	Z+38, r24	; 0x26
     d2c:	97 a3       	std	Z+39, r25	; 0x27
	TCE1.INTCTRLA |= TC_OVFINTLVL_MED_gc;
     d2e:	86 81       	ldd	r24, Z+6	; 0x06
     d30:	82 60       	ori	r24, 0x02	; 2
     d32:	86 83       	std	Z+6, r24	; 0x06
     d34:	08 95       	ret

00000d36 <main>:
#define STEP 1
#define OSCILLATION 2

int main (void)
{
	clk_init();     // Initialize the system clock to 32 MHz
     d36:	84 df       	rcall	.-248    	; 0xc40 <clk_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d38:	2f ef       	ldi	r18, 0xFF	; 255
     d3a:	87 e8       	ldi	r24, 0x87	; 135
     d3c:	93 e1       	ldi	r25, 0x13	; 19
     d3e:	21 50       	subi	r18, 0x01	; 1
     d40:	80 40       	sbci	r24, 0x00	; 0
     d42:	90 40       	sbci	r25, 0x00	; 0
     d44:	e1 f7       	brne	.-8      	; 0xd3e <main+0x8>
     d46:	00 c0       	rjmp	.+0      	; 0xd48 <main+0x12>
     d48:	00 00       	nop
	_delay_ms(200);	// Delay is necessary to let the clock stabilize, otherwise encoder offset problem occurs
	
	//USART setup
	usart_init(); //Initialize serial output
     d4a:	95 df       	rcall	.-214    	; 0xc76 <usart_init>
	stdout = &usart_output;	//required for fprint (A1 - not needed; required for A1U)
     d4c:	86 e1       	ldi	r24, 0x16	; 22
     d4e:	90 e2       	ldi	r25, 0x20	; 32
     d50:	80 93 8d 20 	sts	0x208D, r24
     d54:	90 93 8e 20 	sts	0x208E, r25
	
	//H bridge hardware setup and PWM initialization
	PORTF.DIRSET = PIN2_bm|PIN3_bm;	//set output pins for H bridge communication (Pin 2 = INA ("clockwise" input), Pin 3 = INB ("CCW" input))
     d58:	8c e0       	ldi	r24, 0x0C	; 12
     d5a:	e0 ea       	ldi	r30, 0xA0	; 160
     d5c:	f6 e0       	ldi	r31, 0x06	; 6
     d5e:	81 83       	std	Z+1, r24	; 0x01
	
	pwmtimer_init();	//initialize timer type 1 on Port F pin 4 for PWM signal out
     d60:	9e df       	rcall	.-196    	; 0xc9e <pwmtimer_init>

	PORTA.DIRCLR = PIN5_bm | PIN6_bm | PIN7_bm;	//set input pins for "manual positioning mode" buttons
     d62:	e0 e0       	ldi	r30, 0x00	; 0
     d64:	f6 e0       	ldi	r31, 0x06	; 6
     d66:	80 ee       	ldi	r24, 0xE0	; 224
     d68:	82 83       	std	Z+2, r24	; 0x02
	PORTA.PIN5CTRL = PORT_OPC_PULLDOWN_gc;	//Use Pull down resistor
     d6a:	80 e1       	ldi	r24, 0x10	; 16
     d6c:	85 8b       	std	Z+21, r24	; 0x15
	PORTA.PIN6CTRL = PORT_OPC_PULLDOWN_gc;
     d6e:	86 8b       	std	Z+22, r24	; 0x16
	PORTA.PIN7CTRL = PORT_OPC_PULLDOWN_gc;
     d70:	87 8b       	std	Z+23, r24	; 0x17

	if((inputMode == OSCILLATION) & (frequency <= 0.4))
     d72:	d0 91 00 20 	lds	r29, 0x2000
     d76:	60 91 02 20 	lds	r22, 0x2002
     d7a:	70 91 03 20 	lds	r23, 0x2003
     d7e:	80 91 04 20 	lds	r24, 0x2004
     d82:	90 91 05 20 	lds	r25, 0x2005
     d86:	c1 e0       	ldi	r28, 0x01	; 1
     d88:	2d ec       	ldi	r18, 0xCD	; 205
     d8a:	3c ec       	ldi	r19, 0xCC	; 204
     d8c:	4c ec       	ldi	r20, 0xCC	; 204
     d8e:	5e e3       	ldi	r21, 0x3E	; 62
     d90:	3e d1       	rcall	.+636    	; 0x100e <__cmpsf2>
     d92:	18 16       	cp	r1, r24
     d94:	0c f4       	brge	.+2      	; 0xd98 <main+0x62>
     d96:	c0 e0       	ldi	r28, 0x00	; 0
     d98:	cc 23       	and	r28, r28
     d9a:	99 f0       	breq	.+38     	; 0xdc2 <main+0x8c>
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	d2 30       	cpi	r29, 0x02	; 2
     da0:	09 f0       	breq	.+2      	; 0xda4 <main+0x6e>
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	88 23       	and	r24, r24
     da6:	69 f0       	breq	.+26     	; 0xdc2 <main+0x8c>
	{
		fs = 20.;
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	a0 ea       	ldi	r26, 0xA0	; 160
     dae:	b1 e4       	ldi	r27, 0x41	; 65
     db0:	80 93 38 20 	sts	0x2038, r24
     db4:	90 93 39 20 	sts	0x2039, r25
     db8:	a0 93 3a 20 	sts	0x203A, r26
     dbc:	b0 93 3b 20 	sts	0x203B, r27
     dc0:	0c c0       	rjmp	.+24     	; 0xdda <main+0xa4>
	}
	else
	{
		fs = 50.;
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	a8 e4       	ldi	r26, 0x48	; 72
     dc8:	b2 e4       	ldi	r27, 0x42	; 66
     dca:	80 93 38 20 	sts	0x2038, r24
     dce:	90 93 39 20 	sts	0x2039, r25
     dd2:	a0 93 3a 20 	sts	0x203A, r26
     dd6:	b0 93 3b 20 	sts	0x203B, r27
	}

	Ts = 1./fs;
     dda:	20 91 38 20 	lds	r18, 0x2038
     dde:	30 91 39 20 	lds	r19, 0x2039
     de2:	40 91 3a 20 	lds	r20, 0x203A
     de6:	50 91 3b 20 	lds	r21, 0x203B
     dea:	60 e0       	ldi	r22, 0x00	; 0
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	80 e8       	ldi	r24, 0x80	; 128
     df0:	9f e3       	ldi	r25, 0x3F	; 63
     df2:	14 d1       	rcall	.+552    	; 0x101c <__divsf3>
     df4:	60 93 71 20 	sts	0x2071, r22
     df8:	70 93 72 20 	sts	0x2072, r23
     dfc:	80 93 73 20 	sts	0x2073, r24
     e00:	90 93 74 20 	sts	0x2074, r25

	//Interrupt timer setup
	topCount = (uint16_t)(Ts*125000.);		//Computed TOP value for TCC1 interrupt timer (500000 for div64, 125000 for div256)
     e04:	60 91 71 20 	lds	r22, 0x2071
     e08:	70 91 72 20 	lds	r23, 0x2072
     e0c:	80 91 73 20 	lds	r24, 0x2073
     e10:	90 91 74 20 	lds	r25, 0x2074
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	34 e2       	ldi	r19, 0x24	; 36
     e18:	44 ef       	ldi	r20, 0xF4	; 244
     e1a:	57 e4       	ldi	r21, 0x47	; 71
     e1c:	87 d2       	rcall	.+1294   	; 0x132c <__mulsf3>
     e1e:	6b d1       	rcall	.+726    	; 0x10f6 <__fixunssfsi>
     e20:	60 93 6f 20 	sts	0x206F, r22
     e24:	70 93 70 20 	sts	0x2070, r23
	timer_init(topCount);
     e28:	80 91 6f 20 	lds	r24, 0x206F
     e2c:	90 91 70 20 	lds	r25, 0x2070
     e30:	15 df       	rcall	.-470    	; 0xc5c <timer_init>

	while(!(PORTA.IN & PIN7_bm))
     e32:	c0 e0       	ldi	r28, 0x00	; 0
     e34:	d6 e0       	ldi	r29, 0x06	; 6
     e36:	16 c0       	rjmp	.+44     	; 0xe64 <main+0x12e>
	{
		if(PORTA.IN & PIN6_bm)
     e38:	88 85       	ldd	r24, Y+8	; 0x08
     e3a:	86 ff       	sbrs	r24, 6
     e3c:	06 c0       	rjmp	.+12     	; 0xe4a <main+0x114>
		{
			pwmtoMotor1(3);
     e3e:	60 e0       	ldi	r22, 0x00	; 0
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	80 e4       	ldi	r24, 0x40	; 64
     e44:	90 e4       	ldi	r25, 0x40	; 64
     e46:	a1 da       	rcall	.-2750   	; 0x38a <pwmtoMotor1>
     e48:	0d c0       	rjmp	.+26     	; 0xe64 <main+0x12e>
		}
		else if(PORTA.IN & PIN5_bm)
     e4a:	88 85       	ldd	r24, Y+8	; 0x08
     e4c:	85 ff       	sbrs	r24, 5
     e4e:	06 c0       	rjmp	.+12     	; 0xe5c <main+0x126>
		{
			pwmtoMotor1(-3);
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	80 e4       	ldi	r24, 0x40	; 64
     e56:	90 ec       	ldi	r25, 0xC0	; 192
     e58:	98 da       	rcall	.-2768   	; 0x38a <pwmtoMotor1>
     e5a:	04 c0       	rjmp	.+8      	; 0xe64 <main+0x12e>
		}
		else
		{
			pwmtoMotor1(0);
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	cb 01       	movw	r24, r22
     e62:	93 da       	rcall	.-2778   	; 0x38a <pwmtoMotor1>

	//Interrupt timer setup
	topCount = (uint16_t)(Ts*125000.);		//Computed TOP value for TCC1 interrupt timer (500000 for div64, 125000 for div256)
	timer_init(topCount);

	while(!(PORTA.IN & PIN7_bm))
     e64:	88 85       	ldd	r24, Y+8	; 0x08
     e66:	88 23       	and	r24, r24
     e68:	3c f7       	brge	.-50     	; 0xe38 <main+0x102>

	//revCnt1 = 0;	//the
	//cli();	//disable global interrupts (order seems to matter, setting pmic.ctrl register then enabling interrupts, so have to clear before we can reset otherwise we get bursts of voltage to the motor)

	//Set timing pins as output
	PORTD.DIRSET = PIN7_bm;	//set D7 as output for timing pin (peripheral clock 32Mhz)
     e6a:	e0 e6       	ldi	r30, 0x60	; 96
     e6c:	f6 e0       	ldi	r31, 0x06	; 6
     e6e:	80 e8       	ldi	r24, 0x80	; 128
     e70:	81 83       	std	Z+1, r24	; 0x01
	PORTD.DIRSET = PIN6_bm;	//set D6 as output for interrupt timing pin (1000 Hz)
     e72:	80 e4       	ldi	r24, 0x40	; 64
     e74:	81 83       	std	Z+1, r24	; 0x01

	if(inputMode == OSCILLATION)
     e76:	80 91 00 20 	lds	r24, 0x2000
     e7a:	82 30       	cpi	r24, 0x02	; 2
     e7c:	d1 f4       	brne	.+52     	; 0xeb2 <main+0x17c>
	{
		stopTime = numberofCycles/frequency;	//Stop time in seconds
     e7e:	60 91 01 20 	lds	r22, 0x2001
     e82:	c0 90 02 20 	lds	r12, 0x2002
     e86:	d0 90 03 20 	lds	r13, 0x2003
     e8a:	e0 90 04 20 	lds	r14, 0x2004
     e8e:	f0 90 05 20 	lds	r15, 0x2005
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	5c d1       	rcall	.+696    	; 0x1152 <__floatsisf>
     e9a:	a7 01       	movw	r20, r14
     e9c:	96 01       	movw	r18, r12
     e9e:	be d0       	rcall	.+380    	; 0x101c <__divsf3>
     ea0:	60 93 85 20 	sts	0x2085, r22
     ea4:	70 93 86 20 	sts	0x2086, r23
     ea8:	80 93 87 20 	sts	0x2087, r24
     eac:	90 93 88 20 	sts	0x2088, r25
     eb0:	10 c0       	rjmp	.+32     	; 0xed2 <main+0x19c>
	}
	else if(inputMode == STEP)
     eb2:	80 91 00 20 	lds	r24, 0x2000
     eb6:	81 30       	cpi	r24, 0x01	; 1
     eb8:	61 f4       	brne	.+24     	; 0xed2 <main+0x19c>
	{
		stopTime = 10.0;
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e2       	ldi	r26, 0x20	; 32
     ec0:	b1 e4       	ldi	r27, 0x41	; 65
     ec2:	80 93 85 20 	sts	0x2085, r24
     ec6:	90 93 86 20 	sts	0x2086, r25
     eca:	a0 93 87 20 	sts	0x2087, r26
     ece:	b0 93 88 20 	sts	0x2088, r27
	}

	encoder_init();	//encoder must be initialized AFTER manual mode, otherwise the medium level interrupt misfires and loads a value into revCnt variable causing voltage burst to motor
     ed2:	f8 de       	rcall	.-528    	; 0xcc4 <encoder_init>

	PMIC.CTRL = PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;	//enable interrupts medium and high levels
     ed4:	87 e0       	ldi	r24, 0x07	; 7
     ed6:	e0 ea       	ldi	r30, 0xA0	; 160
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	82 83       	std	Z+2, r24	; 0x02
	sei();	//enable global interrupts
     edc:	78 94       	sei
	
	while(1)
	{
		PORTD.OUTTGL = (1<<7);	//Toggle Pin D7 for oscillator clock timing
     ede:	00 e6       	ldi	r16, 0x60	; 96
     ee0:	16 e0       	ldi	r17, 0x06	; 6
     ee2:	68 94       	set
     ee4:	dd 24       	eor	r13, r13
     ee6:	d7 f8       	bld	r13, 7

		if((timeNow >= stopTime) & !(PORTA.IN & PIN7_bm))	//after program is over if manual override switch is turned back to ground, manual button positioning is enabled
     ee8:	c0 e0       	ldi	r28, 0x00	; 0
     eea:	d6 e0       	ldi	r29, 0x06	; 6
		{
			cli();						//disable interrupts to prevent interruption between CCP end and reset
			CCP = 0xD8;					//configuration change protection: allow protected IO register write
     eec:	0f 2e       	mov	r0, r31
     eee:	f8 ed       	ldi	r31, 0xD8	; 216
     ef0:	bf 2e       	mov	r11, r31
     ef2:	f0 2d       	mov	r31, r0
			RST.CTRL = RST_SWRST_bm;	//software reset at end of program
     ef4:	0f 2e       	mov	r0, r31
     ef6:	f8 e7       	ldi	r31, 0x78	; 120
     ef8:	ef 2e       	mov	r14, r31
     efa:	f1 2c       	mov	r15, r1
     efc:	f0 2d       	mov	r31, r0
	PMIC.CTRL = PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;	//enable interrupts medium and high levels
	sei();	//enable global interrupts
	
	while(1)
	{
		PORTD.OUTTGL = (1<<7);	//Toggle Pin D7 for oscillator clock timing
     efe:	f8 01       	movw	r30, r16
     f00:	d7 82       	std	Z+7, r13	; 0x07

		if((timeNow >= stopTime) & !(PORTA.IN & PIN7_bm))	//after program is over if manual override switch is turned back to ground, manual button positioning is enabled
     f02:	60 91 81 20 	lds	r22, 0x2081
     f06:	70 91 82 20 	lds	r23, 0x2082
     f0a:	80 91 83 20 	lds	r24, 0x2083
     f0e:	90 91 84 20 	lds	r25, 0x2084
     f12:	20 91 85 20 	lds	r18, 0x2085
     f16:	30 91 86 20 	lds	r19, 0x2086
     f1a:	40 91 87 20 	lds	r20, 0x2087
     f1e:	50 91 88 20 	lds	r21, 0x2088
     f22:	e8 85       	ldd	r30, Y+8	; 0x08
     f24:	ee 23       	and	r30, r30
     f26:	5c f3       	brlt	.-42     	; 0xefe <main+0x1c8>
     f28:	cc 24       	eor	r12, r12
     f2a:	c3 94       	inc	r12
     f2c:	fb d1       	rcall	.+1014   	; 0x1324 <__gesf2>
     f2e:	88 23       	and	r24, r24
     f30:	0c f4       	brge	.+2      	; 0xf34 <main+0x1fe>
     f32:	c1 2c       	mov	r12, r1
     f34:	cc 20       	and	r12, r12
     f36:	19 f3       	breq	.-58     	; 0xefe <main+0x1c8>
		{
			cli();						//disable interrupts to prevent interruption between CCP end and reset
     f38:	f8 94       	cli
			CCP = 0xD8;					//configuration change protection: allow protected IO register write
     f3a:	b4 be       	out	0x34, r11	; 52
			RST.CTRL = RST_SWRST_bm;	//software reset at end of program
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	f7 01       	movw	r30, r14
     f40:	81 83       	std	Z+1, r24	; 0x01
     f42:	dd cf       	rjmp	.-70     	; 0xefe <main+0x1c8>

00000f44 <__subsf3>:
     f44:	50 58       	subi	r21, 0x80	; 128

00000f46 <__addsf3>:
     f46:	bb 27       	eor	r27, r27
     f48:	aa 27       	eor	r26, r26
     f4a:	0e d0       	rcall	.+28     	; 0xf68 <__addsf3x>
     f4c:	a0 c1       	rjmp	.+832    	; 0x128e <__fp_round>
     f4e:	69 d1       	rcall	.+722    	; 0x1222 <__fp_pscA>
     f50:	30 f0       	brcs	.+12     	; 0xf5e <__addsf3+0x18>
     f52:	6e d1       	rcall	.+732    	; 0x1230 <__fp_pscB>
     f54:	20 f0       	brcs	.+8      	; 0xf5e <__addsf3+0x18>
     f56:	31 f4       	brne	.+12     	; 0xf64 <__addsf3+0x1e>
     f58:	9f 3f       	cpi	r25, 0xFF	; 255
     f5a:	11 f4       	brne	.+4      	; 0xf60 <__addsf3+0x1a>
     f5c:	1e f4       	brtc	.+6      	; 0xf64 <__addsf3+0x1e>
     f5e:	5e c1       	rjmp	.+700    	; 0x121c <__fp_nan>
     f60:	0e f4       	brtc	.+2      	; 0xf64 <__addsf3+0x1e>
     f62:	e0 95       	com	r30
     f64:	e7 fb       	bst	r30, 7
     f66:	54 c1       	rjmp	.+680    	; 0x1210 <__fp_inf>

00000f68 <__addsf3x>:
     f68:	e9 2f       	mov	r30, r25
     f6a:	b3 d1       	rcall	.+870    	; 0x12d2 <__fp_split3>
     f6c:	80 f3       	brcs	.-32     	; 0xf4e <__addsf3+0x8>
     f6e:	ba 17       	cp	r27, r26
     f70:	62 07       	cpc	r22, r18
     f72:	73 07       	cpc	r23, r19
     f74:	84 07       	cpc	r24, r20
     f76:	95 07       	cpc	r25, r21
     f78:	18 f0       	brcs	.+6      	; 0xf80 <__addsf3x+0x18>
     f7a:	71 f4       	brne	.+28     	; 0xf98 <__addsf3x+0x30>
     f7c:	9e f5       	brtc	.+102    	; 0xfe4 <__addsf3x+0x7c>
     f7e:	cb c1       	rjmp	.+918    	; 0x1316 <__fp_zero>
     f80:	0e f4       	brtc	.+2      	; 0xf84 <__addsf3x+0x1c>
     f82:	e0 95       	com	r30
     f84:	0b 2e       	mov	r0, r27
     f86:	ba 2f       	mov	r27, r26
     f88:	a0 2d       	mov	r26, r0
     f8a:	0b 01       	movw	r0, r22
     f8c:	b9 01       	movw	r22, r18
     f8e:	90 01       	movw	r18, r0
     f90:	0c 01       	movw	r0, r24
     f92:	ca 01       	movw	r24, r20
     f94:	a0 01       	movw	r20, r0
     f96:	11 24       	eor	r1, r1
     f98:	ff 27       	eor	r31, r31
     f9a:	59 1b       	sub	r21, r25
     f9c:	99 f0       	breq	.+38     	; 0xfc4 <__addsf3x+0x5c>
     f9e:	59 3f       	cpi	r21, 0xF9	; 249
     fa0:	50 f4       	brcc	.+20     	; 0xfb6 <__addsf3x+0x4e>
     fa2:	50 3e       	cpi	r21, 0xE0	; 224
     fa4:	68 f1       	brcs	.+90     	; 0x1000 <__addsf3x+0x98>
     fa6:	1a 16       	cp	r1, r26
     fa8:	f0 40       	sbci	r31, 0x00	; 0
     faa:	a2 2f       	mov	r26, r18
     fac:	23 2f       	mov	r18, r19
     fae:	34 2f       	mov	r19, r20
     fb0:	44 27       	eor	r20, r20
     fb2:	58 5f       	subi	r21, 0xF8	; 248
     fb4:	f3 cf       	rjmp	.-26     	; 0xf9c <__addsf3x+0x34>
     fb6:	46 95       	lsr	r20
     fb8:	37 95       	ror	r19
     fba:	27 95       	ror	r18
     fbc:	a7 95       	ror	r26
     fbe:	f0 40       	sbci	r31, 0x00	; 0
     fc0:	53 95       	inc	r21
     fc2:	c9 f7       	brne	.-14     	; 0xfb6 <__addsf3x+0x4e>
     fc4:	7e f4       	brtc	.+30     	; 0xfe4 <__addsf3x+0x7c>
     fc6:	1f 16       	cp	r1, r31
     fc8:	ba 0b       	sbc	r27, r26
     fca:	62 0b       	sbc	r22, r18
     fcc:	73 0b       	sbc	r23, r19
     fce:	84 0b       	sbc	r24, r20
     fd0:	ba f0       	brmi	.+46     	; 0x1000 <__addsf3x+0x98>
     fd2:	91 50       	subi	r25, 0x01	; 1
     fd4:	a1 f0       	breq	.+40     	; 0xffe <__addsf3x+0x96>
     fd6:	ff 0f       	add	r31, r31
     fd8:	bb 1f       	adc	r27, r27
     fda:	66 1f       	adc	r22, r22
     fdc:	77 1f       	adc	r23, r23
     fde:	88 1f       	adc	r24, r24
     fe0:	c2 f7       	brpl	.-16     	; 0xfd2 <__addsf3x+0x6a>
     fe2:	0e c0       	rjmp	.+28     	; 0x1000 <__addsf3x+0x98>
     fe4:	ba 0f       	add	r27, r26
     fe6:	62 1f       	adc	r22, r18
     fe8:	73 1f       	adc	r23, r19
     fea:	84 1f       	adc	r24, r20
     fec:	48 f4       	brcc	.+18     	; 0x1000 <__addsf3x+0x98>
     fee:	87 95       	ror	r24
     ff0:	77 95       	ror	r23
     ff2:	67 95       	ror	r22
     ff4:	b7 95       	ror	r27
     ff6:	f7 95       	ror	r31
     ff8:	9e 3f       	cpi	r25, 0xFE	; 254
     ffa:	08 f0       	brcs	.+2      	; 0xffe <__addsf3x+0x96>
     ffc:	b3 cf       	rjmp	.-154    	; 0xf64 <__addsf3+0x1e>
     ffe:	93 95       	inc	r25
    1000:	88 0f       	add	r24, r24
    1002:	08 f0       	brcs	.+2      	; 0x1006 <__addsf3x+0x9e>
    1004:	99 27       	eor	r25, r25
    1006:	ee 0f       	add	r30, r30
    1008:	97 95       	ror	r25
    100a:	87 95       	ror	r24
    100c:	08 95       	ret

0000100e <__cmpsf2>:
    100e:	dc d0       	rcall	.+440    	; 0x11c8 <__fp_cmp>
    1010:	08 f4       	brcc	.+2      	; 0x1014 <__cmpsf2+0x6>
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	08 95       	ret

00001016 <cos>:
    1016:	14 d1       	rcall	.+552    	; 0x1240 <__fp_rempio2>
    1018:	e3 95       	inc	r30
    101a:	4a c1       	rjmp	.+660    	; 0x12b0 <__fp_sinus>

0000101c <__divsf3>:
    101c:	0c d0       	rcall	.+24     	; 0x1036 <__divsf3x>
    101e:	37 c1       	rjmp	.+622    	; 0x128e <__fp_round>
    1020:	07 d1       	rcall	.+526    	; 0x1230 <__fp_pscB>
    1022:	40 f0       	brcs	.+16     	; 0x1034 <__divsf3+0x18>
    1024:	fe d0       	rcall	.+508    	; 0x1222 <__fp_pscA>
    1026:	30 f0       	brcs	.+12     	; 0x1034 <__divsf3+0x18>
    1028:	21 f4       	brne	.+8      	; 0x1032 <__divsf3+0x16>
    102a:	5f 3f       	cpi	r21, 0xFF	; 255
    102c:	19 f0       	breq	.+6      	; 0x1034 <__divsf3+0x18>
    102e:	f0 c0       	rjmp	.+480    	; 0x1210 <__fp_inf>
    1030:	51 11       	cpse	r21, r1
    1032:	72 c1       	rjmp	.+740    	; 0x1318 <__fp_szero>
    1034:	f3 c0       	rjmp	.+486    	; 0x121c <__fp_nan>

00001036 <__divsf3x>:
    1036:	4d d1       	rcall	.+666    	; 0x12d2 <__fp_split3>
    1038:	98 f3       	brcs	.-26     	; 0x1020 <__divsf3+0x4>

0000103a <__divsf3_pse>:
    103a:	99 23       	and	r25, r25
    103c:	c9 f3       	breq	.-14     	; 0x1030 <__divsf3+0x14>
    103e:	55 23       	and	r21, r21
    1040:	b1 f3       	breq	.-20     	; 0x102e <__divsf3+0x12>
    1042:	95 1b       	sub	r25, r21
    1044:	55 0b       	sbc	r21, r21
    1046:	bb 27       	eor	r27, r27
    1048:	aa 27       	eor	r26, r26
    104a:	62 17       	cp	r22, r18
    104c:	73 07       	cpc	r23, r19
    104e:	84 07       	cpc	r24, r20
    1050:	38 f0       	brcs	.+14     	; 0x1060 <__divsf3_pse+0x26>
    1052:	9f 5f       	subi	r25, 0xFF	; 255
    1054:	5f 4f       	sbci	r21, 0xFF	; 255
    1056:	22 0f       	add	r18, r18
    1058:	33 1f       	adc	r19, r19
    105a:	44 1f       	adc	r20, r20
    105c:	aa 1f       	adc	r26, r26
    105e:	a9 f3       	breq	.-22     	; 0x104a <__divsf3_pse+0x10>
    1060:	33 d0       	rcall	.+102    	; 0x10c8 <__divsf3_pse+0x8e>
    1062:	0e 2e       	mov	r0, r30
    1064:	3a f0       	brmi	.+14     	; 0x1074 <__divsf3_pse+0x3a>
    1066:	e0 e8       	ldi	r30, 0x80	; 128
    1068:	30 d0       	rcall	.+96     	; 0x10ca <__divsf3_pse+0x90>
    106a:	91 50       	subi	r25, 0x01	; 1
    106c:	50 40       	sbci	r21, 0x00	; 0
    106e:	e6 95       	lsr	r30
    1070:	00 1c       	adc	r0, r0
    1072:	ca f7       	brpl	.-14     	; 0x1066 <__divsf3_pse+0x2c>
    1074:	29 d0       	rcall	.+82     	; 0x10c8 <__divsf3_pse+0x8e>
    1076:	fe 2f       	mov	r31, r30
    1078:	27 d0       	rcall	.+78     	; 0x10c8 <__divsf3_pse+0x8e>
    107a:	66 0f       	add	r22, r22
    107c:	77 1f       	adc	r23, r23
    107e:	88 1f       	adc	r24, r24
    1080:	bb 1f       	adc	r27, r27
    1082:	26 17       	cp	r18, r22
    1084:	37 07       	cpc	r19, r23
    1086:	48 07       	cpc	r20, r24
    1088:	ab 07       	cpc	r26, r27
    108a:	b0 e8       	ldi	r27, 0x80	; 128
    108c:	09 f0       	breq	.+2      	; 0x1090 <__divsf3_pse+0x56>
    108e:	bb 0b       	sbc	r27, r27
    1090:	80 2d       	mov	r24, r0
    1092:	bf 01       	movw	r22, r30
    1094:	ff 27       	eor	r31, r31
    1096:	93 58       	subi	r25, 0x83	; 131
    1098:	5f 4f       	sbci	r21, 0xFF	; 255
    109a:	2a f0       	brmi	.+10     	; 0x10a6 <__divsf3_pse+0x6c>
    109c:	9e 3f       	cpi	r25, 0xFE	; 254
    109e:	51 05       	cpc	r21, r1
    10a0:	68 f0       	brcs	.+26     	; 0x10bc <__divsf3_pse+0x82>
    10a2:	b6 c0       	rjmp	.+364    	; 0x1210 <__fp_inf>
    10a4:	39 c1       	rjmp	.+626    	; 0x1318 <__fp_szero>
    10a6:	5f 3f       	cpi	r21, 0xFF	; 255
    10a8:	ec f3       	brlt	.-6      	; 0x10a4 <__divsf3_pse+0x6a>
    10aa:	98 3e       	cpi	r25, 0xE8	; 232
    10ac:	dc f3       	brlt	.-10     	; 0x10a4 <__divsf3_pse+0x6a>
    10ae:	86 95       	lsr	r24
    10b0:	77 95       	ror	r23
    10b2:	67 95       	ror	r22
    10b4:	b7 95       	ror	r27
    10b6:	f7 95       	ror	r31
    10b8:	9f 5f       	subi	r25, 0xFF	; 255
    10ba:	c9 f7       	brne	.-14     	; 0x10ae <__divsf3_pse+0x74>
    10bc:	88 0f       	add	r24, r24
    10be:	91 1d       	adc	r25, r1
    10c0:	96 95       	lsr	r25
    10c2:	87 95       	ror	r24
    10c4:	97 f9       	bld	r25, 7
    10c6:	08 95       	ret
    10c8:	e1 e0       	ldi	r30, 0x01	; 1
    10ca:	66 0f       	add	r22, r22
    10cc:	77 1f       	adc	r23, r23
    10ce:	88 1f       	adc	r24, r24
    10d0:	bb 1f       	adc	r27, r27
    10d2:	62 17       	cp	r22, r18
    10d4:	73 07       	cpc	r23, r19
    10d6:	84 07       	cpc	r24, r20
    10d8:	ba 07       	cpc	r27, r26
    10da:	20 f0       	brcs	.+8      	; 0x10e4 <__divsf3_pse+0xaa>
    10dc:	62 1b       	sub	r22, r18
    10de:	73 0b       	sbc	r23, r19
    10e0:	84 0b       	sbc	r24, r20
    10e2:	ba 0b       	sbc	r27, r26
    10e4:	ee 1f       	adc	r30, r30
    10e6:	88 f7       	brcc	.-30     	; 0x10ca <__divsf3_pse+0x90>
    10e8:	e0 95       	com	r30
    10ea:	08 95       	ret

000010ec <__fixsfsi>:
    10ec:	04 d0       	rcall	.+8      	; 0x10f6 <__fixunssfsi>
    10ee:	68 94       	set
    10f0:	b1 11       	cpse	r27, r1
    10f2:	12 c1       	rjmp	.+548    	; 0x1318 <__fp_szero>
    10f4:	08 95       	ret

000010f6 <__fixunssfsi>:
    10f6:	f5 d0       	rcall	.+490    	; 0x12e2 <__fp_splitA>
    10f8:	88 f0       	brcs	.+34     	; 0x111c <__fixunssfsi+0x26>
    10fa:	9f 57       	subi	r25, 0x7F	; 127
    10fc:	90 f0       	brcs	.+36     	; 0x1122 <__fixunssfsi+0x2c>
    10fe:	b9 2f       	mov	r27, r25
    1100:	99 27       	eor	r25, r25
    1102:	b7 51       	subi	r27, 0x17	; 23
    1104:	a0 f0       	brcs	.+40     	; 0x112e <__fixunssfsi+0x38>
    1106:	d1 f0       	breq	.+52     	; 0x113c <__fixunssfsi+0x46>
    1108:	66 0f       	add	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	1a f0       	brmi	.+6      	; 0x1118 <__fixunssfsi+0x22>
    1112:	ba 95       	dec	r27
    1114:	c9 f7       	brne	.-14     	; 0x1108 <__fixunssfsi+0x12>
    1116:	12 c0       	rjmp	.+36     	; 0x113c <__fixunssfsi+0x46>
    1118:	b1 30       	cpi	r27, 0x01	; 1
    111a:	81 f0       	breq	.+32     	; 0x113c <__fixunssfsi+0x46>
    111c:	fc d0       	rcall	.+504    	; 0x1316 <__fp_zero>
    111e:	b1 e0       	ldi	r27, 0x01	; 1
    1120:	08 95       	ret
    1122:	f9 c0       	rjmp	.+498    	; 0x1316 <__fp_zero>
    1124:	67 2f       	mov	r22, r23
    1126:	78 2f       	mov	r23, r24
    1128:	88 27       	eor	r24, r24
    112a:	b8 5f       	subi	r27, 0xF8	; 248
    112c:	39 f0       	breq	.+14     	; 0x113c <__fixunssfsi+0x46>
    112e:	b9 3f       	cpi	r27, 0xF9	; 249
    1130:	cc f3       	brlt	.-14     	; 0x1124 <__fixunssfsi+0x2e>
    1132:	86 95       	lsr	r24
    1134:	77 95       	ror	r23
    1136:	67 95       	ror	r22
    1138:	b3 95       	inc	r27
    113a:	d9 f7       	brne	.-10     	; 0x1132 <__fixunssfsi+0x3c>
    113c:	3e f4       	brtc	.+14     	; 0x114c <__fixunssfsi+0x56>
    113e:	90 95       	com	r25
    1140:	80 95       	com	r24
    1142:	70 95       	com	r23
    1144:	61 95       	neg	r22
    1146:	7f 4f       	sbci	r23, 0xFF	; 255
    1148:	8f 4f       	sbci	r24, 0xFF	; 255
    114a:	9f 4f       	sbci	r25, 0xFF	; 255
    114c:	08 95       	ret

0000114e <__floatunsisf>:
    114e:	e8 94       	clt
    1150:	09 c0       	rjmp	.+18     	; 0x1164 <__floatsisf+0x12>

00001152 <__floatsisf>:
    1152:	97 fb       	bst	r25, 7
    1154:	3e f4       	brtc	.+14     	; 0x1164 <__floatsisf+0x12>
    1156:	90 95       	com	r25
    1158:	80 95       	com	r24
    115a:	70 95       	com	r23
    115c:	61 95       	neg	r22
    115e:	7f 4f       	sbci	r23, 0xFF	; 255
    1160:	8f 4f       	sbci	r24, 0xFF	; 255
    1162:	9f 4f       	sbci	r25, 0xFF	; 255
    1164:	99 23       	and	r25, r25
    1166:	a9 f0       	breq	.+42     	; 0x1192 <__floatsisf+0x40>
    1168:	f9 2f       	mov	r31, r25
    116a:	96 e9       	ldi	r25, 0x96	; 150
    116c:	bb 27       	eor	r27, r27
    116e:	93 95       	inc	r25
    1170:	f6 95       	lsr	r31
    1172:	87 95       	ror	r24
    1174:	77 95       	ror	r23
    1176:	67 95       	ror	r22
    1178:	b7 95       	ror	r27
    117a:	f1 11       	cpse	r31, r1
    117c:	f8 cf       	rjmp	.-16     	; 0x116e <__floatsisf+0x1c>
    117e:	fa f4       	brpl	.+62     	; 0x11be <__floatsisf+0x6c>
    1180:	bb 0f       	add	r27, r27
    1182:	11 f4       	brne	.+4      	; 0x1188 <__floatsisf+0x36>
    1184:	60 ff       	sbrs	r22, 0
    1186:	1b c0       	rjmp	.+54     	; 0x11be <__floatsisf+0x6c>
    1188:	6f 5f       	subi	r22, 0xFF	; 255
    118a:	7f 4f       	sbci	r23, 0xFF	; 255
    118c:	8f 4f       	sbci	r24, 0xFF	; 255
    118e:	9f 4f       	sbci	r25, 0xFF	; 255
    1190:	16 c0       	rjmp	.+44     	; 0x11be <__floatsisf+0x6c>
    1192:	88 23       	and	r24, r24
    1194:	11 f0       	breq	.+4      	; 0x119a <__floatsisf+0x48>
    1196:	96 e9       	ldi	r25, 0x96	; 150
    1198:	11 c0       	rjmp	.+34     	; 0x11bc <__floatsisf+0x6a>
    119a:	77 23       	and	r23, r23
    119c:	21 f0       	breq	.+8      	; 0x11a6 <__floatsisf+0x54>
    119e:	9e e8       	ldi	r25, 0x8E	; 142
    11a0:	87 2f       	mov	r24, r23
    11a2:	76 2f       	mov	r23, r22
    11a4:	05 c0       	rjmp	.+10     	; 0x11b0 <__floatsisf+0x5e>
    11a6:	66 23       	and	r22, r22
    11a8:	71 f0       	breq	.+28     	; 0x11c6 <__floatsisf+0x74>
    11aa:	96 e8       	ldi	r25, 0x86	; 134
    11ac:	86 2f       	mov	r24, r22
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	60 e0       	ldi	r22, 0x00	; 0
    11b2:	2a f0       	brmi	.+10     	; 0x11be <__floatsisf+0x6c>
    11b4:	9a 95       	dec	r25
    11b6:	66 0f       	add	r22, r22
    11b8:	77 1f       	adc	r23, r23
    11ba:	88 1f       	adc	r24, r24
    11bc:	da f7       	brpl	.-10     	; 0x11b4 <__floatsisf+0x62>
    11be:	88 0f       	add	r24, r24
    11c0:	96 95       	lsr	r25
    11c2:	87 95       	ror	r24
    11c4:	97 f9       	bld	r25, 7
    11c6:	08 95       	ret

000011c8 <__fp_cmp>:
    11c8:	99 0f       	add	r25, r25
    11ca:	00 08       	sbc	r0, r0
    11cc:	55 0f       	add	r21, r21
    11ce:	aa 0b       	sbc	r26, r26
    11d0:	e0 e8       	ldi	r30, 0x80	; 128
    11d2:	fe ef       	ldi	r31, 0xFE	; 254
    11d4:	16 16       	cp	r1, r22
    11d6:	17 06       	cpc	r1, r23
    11d8:	e8 07       	cpc	r30, r24
    11da:	f9 07       	cpc	r31, r25
    11dc:	c0 f0       	brcs	.+48     	; 0x120e <__fp_cmp+0x46>
    11de:	12 16       	cp	r1, r18
    11e0:	13 06       	cpc	r1, r19
    11e2:	e4 07       	cpc	r30, r20
    11e4:	f5 07       	cpc	r31, r21
    11e6:	98 f0       	brcs	.+38     	; 0x120e <__fp_cmp+0x46>
    11e8:	62 1b       	sub	r22, r18
    11ea:	73 0b       	sbc	r23, r19
    11ec:	84 0b       	sbc	r24, r20
    11ee:	95 0b       	sbc	r25, r21
    11f0:	39 f4       	brne	.+14     	; 0x1200 <__fp_cmp+0x38>
    11f2:	0a 26       	eor	r0, r26
    11f4:	61 f0       	breq	.+24     	; 0x120e <__fp_cmp+0x46>
    11f6:	23 2b       	or	r18, r19
    11f8:	24 2b       	or	r18, r20
    11fa:	25 2b       	or	r18, r21
    11fc:	21 f4       	brne	.+8      	; 0x1206 <__fp_cmp+0x3e>
    11fe:	08 95       	ret
    1200:	0a 26       	eor	r0, r26
    1202:	09 f4       	brne	.+2      	; 0x1206 <__fp_cmp+0x3e>
    1204:	a1 40       	sbci	r26, 0x01	; 1
    1206:	a6 95       	lsr	r26
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	81 1d       	adc	r24, r1
    120c:	81 1d       	adc	r24, r1
    120e:	08 95       	ret

00001210 <__fp_inf>:
    1210:	97 f9       	bld	r25, 7
    1212:	9f 67       	ori	r25, 0x7F	; 127
    1214:	80 e8       	ldi	r24, 0x80	; 128
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	60 e0       	ldi	r22, 0x00	; 0
    121a:	08 95       	ret

0000121c <__fp_nan>:
    121c:	9f ef       	ldi	r25, 0xFF	; 255
    121e:	80 ec       	ldi	r24, 0xC0	; 192
    1220:	08 95       	ret

00001222 <__fp_pscA>:
    1222:	00 24       	eor	r0, r0
    1224:	0a 94       	dec	r0
    1226:	16 16       	cp	r1, r22
    1228:	17 06       	cpc	r1, r23
    122a:	18 06       	cpc	r1, r24
    122c:	09 06       	cpc	r0, r25
    122e:	08 95       	ret

00001230 <__fp_pscB>:
    1230:	00 24       	eor	r0, r0
    1232:	0a 94       	dec	r0
    1234:	12 16       	cp	r1, r18
    1236:	13 06       	cpc	r1, r19
    1238:	14 06       	cpc	r1, r20
    123a:	05 06       	cpc	r0, r21
    123c:	08 95       	ret
    123e:	ee cf       	rjmp	.-36     	; 0x121c <__fp_nan>

00001240 <__fp_rempio2>:
    1240:	50 d0       	rcall	.+160    	; 0x12e2 <__fp_splitA>
    1242:	e8 f3       	brcs	.-6      	; 0x123e <__fp_pscB+0xe>
    1244:	e8 94       	clt
    1246:	e0 e0       	ldi	r30, 0x00	; 0
    1248:	bb 27       	eor	r27, r27
    124a:	9f 57       	subi	r25, 0x7F	; 127
    124c:	f0 f0       	brcs	.+60     	; 0x128a <__fp_rempio2+0x4a>
    124e:	2a ed       	ldi	r18, 0xDA	; 218
    1250:	3f e0       	ldi	r19, 0x0F	; 15
    1252:	49 ec       	ldi	r20, 0xC9	; 201
    1254:	06 c0       	rjmp	.+12     	; 0x1262 <__fp_rempio2+0x22>
    1256:	ee 0f       	add	r30, r30
    1258:	bb 0f       	add	r27, r27
    125a:	66 1f       	adc	r22, r22
    125c:	77 1f       	adc	r23, r23
    125e:	88 1f       	adc	r24, r24
    1260:	28 f0       	brcs	.+10     	; 0x126c <__fp_rempio2+0x2c>
    1262:	b2 3a       	cpi	r27, 0xA2	; 162
    1264:	62 07       	cpc	r22, r18
    1266:	73 07       	cpc	r23, r19
    1268:	84 07       	cpc	r24, r20
    126a:	28 f0       	brcs	.+10     	; 0x1276 <__fp_rempio2+0x36>
    126c:	b2 5a       	subi	r27, 0xA2	; 162
    126e:	62 0b       	sbc	r22, r18
    1270:	73 0b       	sbc	r23, r19
    1272:	84 0b       	sbc	r24, r20
    1274:	e3 95       	inc	r30
    1276:	9a 95       	dec	r25
    1278:	72 f7       	brpl	.-36     	; 0x1256 <__fp_rempio2+0x16>
    127a:	80 38       	cpi	r24, 0x80	; 128
    127c:	30 f4       	brcc	.+12     	; 0x128a <__fp_rempio2+0x4a>
    127e:	9a 95       	dec	r25
    1280:	bb 0f       	add	r27, r27
    1282:	66 1f       	adc	r22, r22
    1284:	77 1f       	adc	r23, r23
    1286:	88 1f       	adc	r24, r24
    1288:	d2 f7       	brpl	.-12     	; 0x127e <__fp_rempio2+0x3e>
    128a:	90 48       	sbci	r25, 0x80	; 128
    128c:	ba c0       	rjmp	.+372    	; 0x1402 <__fp_mpack_finite>

0000128e <__fp_round>:
    128e:	09 2e       	mov	r0, r25
    1290:	03 94       	inc	r0
    1292:	00 0c       	add	r0, r0
    1294:	11 f4       	brne	.+4      	; 0x129a <__fp_round+0xc>
    1296:	88 23       	and	r24, r24
    1298:	52 f0       	brmi	.+20     	; 0x12ae <__fp_round+0x20>
    129a:	bb 0f       	add	r27, r27
    129c:	40 f4       	brcc	.+16     	; 0x12ae <__fp_round+0x20>
    129e:	bf 2b       	or	r27, r31
    12a0:	11 f4       	brne	.+4      	; 0x12a6 <__fp_round+0x18>
    12a2:	60 ff       	sbrs	r22, 0
    12a4:	04 c0       	rjmp	.+8      	; 0x12ae <__fp_round+0x20>
    12a6:	6f 5f       	subi	r22, 0xFF	; 255
    12a8:	7f 4f       	sbci	r23, 0xFF	; 255
    12aa:	8f 4f       	sbci	r24, 0xFF	; 255
    12ac:	9f 4f       	sbci	r25, 0xFF	; 255
    12ae:	08 95       	ret

000012b0 <__fp_sinus>:
    12b0:	ef 93       	push	r30
    12b2:	e0 ff       	sbrs	r30, 0
    12b4:	06 c0       	rjmp	.+12     	; 0x12c2 <__fp_sinus+0x12>
    12b6:	a2 ea       	ldi	r26, 0xA2	; 162
    12b8:	2a ed       	ldi	r18, 0xDA	; 218
    12ba:	3f e0       	ldi	r19, 0x0F	; 15
    12bc:	49 ec       	ldi	r20, 0xC9	; 201
    12be:	5f eb       	ldi	r21, 0xBF	; 191
    12c0:	53 de       	rcall	.-858    	; 0xf68 <__addsf3x>
    12c2:	e5 df       	rcall	.-54     	; 0x128e <__fp_round>
    12c4:	0f 90       	pop	r0
    12c6:	03 94       	inc	r0
    12c8:	01 fc       	sbrc	r0, 1
    12ca:	90 58       	subi	r25, 0x80	; 128
    12cc:	ec ef       	ldi	r30, 0xFC	; 252
    12ce:	f1 e0       	ldi	r31, 0x01	; 1
    12d0:	a4 c0       	rjmp	.+328    	; 0x141a <__fp_powsodd>

000012d2 <__fp_split3>:
    12d2:	57 fd       	sbrc	r21, 7
    12d4:	90 58       	subi	r25, 0x80	; 128
    12d6:	44 0f       	add	r20, r20
    12d8:	55 1f       	adc	r21, r21
    12da:	59 f0       	breq	.+22     	; 0x12f2 <__fp_splitA+0x10>
    12dc:	5f 3f       	cpi	r21, 0xFF	; 255
    12de:	71 f0       	breq	.+28     	; 0x12fc <__fp_splitA+0x1a>
    12e0:	47 95       	ror	r20

000012e2 <__fp_splitA>:
    12e2:	88 0f       	add	r24, r24
    12e4:	97 fb       	bst	r25, 7
    12e6:	99 1f       	adc	r25, r25
    12e8:	61 f0       	breq	.+24     	; 0x1302 <__fp_splitA+0x20>
    12ea:	9f 3f       	cpi	r25, 0xFF	; 255
    12ec:	79 f0       	breq	.+30     	; 0x130c <__fp_splitA+0x2a>
    12ee:	87 95       	ror	r24
    12f0:	08 95       	ret
    12f2:	12 16       	cp	r1, r18
    12f4:	13 06       	cpc	r1, r19
    12f6:	14 06       	cpc	r1, r20
    12f8:	55 1f       	adc	r21, r21
    12fa:	f2 cf       	rjmp	.-28     	; 0x12e0 <__fp_split3+0xe>
    12fc:	46 95       	lsr	r20
    12fe:	f1 df       	rcall	.-30     	; 0x12e2 <__fp_splitA>
    1300:	08 c0       	rjmp	.+16     	; 0x1312 <__fp_splitA+0x30>
    1302:	16 16       	cp	r1, r22
    1304:	17 06       	cpc	r1, r23
    1306:	18 06       	cpc	r1, r24
    1308:	99 1f       	adc	r25, r25
    130a:	f1 cf       	rjmp	.-30     	; 0x12ee <__fp_splitA+0xc>
    130c:	86 95       	lsr	r24
    130e:	71 05       	cpc	r23, r1
    1310:	61 05       	cpc	r22, r1
    1312:	08 94       	sec
    1314:	08 95       	ret

00001316 <__fp_zero>:
    1316:	e8 94       	clt

00001318 <__fp_szero>:
    1318:	bb 27       	eor	r27, r27
    131a:	66 27       	eor	r22, r22
    131c:	77 27       	eor	r23, r23
    131e:	cb 01       	movw	r24, r22
    1320:	97 f9       	bld	r25, 7
    1322:	08 95       	ret

00001324 <__gesf2>:
    1324:	51 df       	rcall	.-350    	; 0x11c8 <__fp_cmp>
    1326:	08 f4       	brcc	.+2      	; 0x132a <__gesf2+0x6>
    1328:	8f ef       	ldi	r24, 0xFF	; 255
    132a:	08 95       	ret

0000132c <__mulsf3>:
    132c:	0b d0       	rcall	.+22     	; 0x1344 <__mulsf3x>
    132e:	af cf       	rjmp	.-162    	; 0x128e <__fp_round>
    1330:	78 df       	rcall	.-272    	; 0x1222 <__fp_pscA>
    1332:	28 f0       	brcs	.+10     	; 0x133e <__mulsf3+0x12>
    1334:	7d df       	rcall	.-262    	; 0x1230 <__fp_pscB>
    1336:	18 f0       	brcs	.+6      	; 0x133e <__mulsf3+0x12>
    1338:	95 23       	and	r25, r21
    133a:	09 f0       	breq	.+2      	; 0x133e <__mulsf3+0x12>
    133c:	69 cf       	rjmp	.-302    	; 0x1210 <__fp_inf>
    133e:	6e cf       	rjmp	.-292    	; 0x121c <__fp_nan>
    1340:	11 24       	eor	r1, r1
    1342:	ea cf       	rjmp	.-44     	; 0x1318 <__fp_szero>

00001344 <__mulsf3x>:
    1344:	c6 df       	rcall	.-116    	; 0x12d2 <__fp_split3>
    1346:	a0 f3       	brcs	.-24     	; 0x1330 <__mulsf3+0x4>

00001348 <__mulsf3_pse>:
    1348:	95 9f       	mul	r25, r21
    134a:	d1 f3       	breq	.-12     	; 0x1340 <__mulsf3+0x14>
    134c:	95 0f       	add	r25, r21
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	55 1f       	adc	r21, r21
    1352:	62 9f       	mul	r22, r18
    1354:	f0 01       	movw	r30, r0
    1356:	72 9f       	mul	r23, r18
    1358:	bb 27       	eor	r27, r27
    135a:	f0 0d       	add	r31, r0
    135c:	b1 1d       	adc	r27, r1
    135e:	63 9f       	mul	r22, r19
    1360:	aa 27       	eor	r26, r26
    1362:	f0 0d       	add	r31, r0
    1364:	b1 1d       	adc	r27, r1
    1366:	aa 1f       	adc	r26, r26
    1368:	64 9f       	mul	r22, r20
    136a:	66 27       	eor	r22, r22
    136c:	b0 0d       	add	r27, r0
    136e:	a1 1d       	adc	r26, r1
    1370:	66 1f       	adc	r22, r22
    1372:	82 9f       	mul	r24, r18
    1374:	22 27       	eor	r18, r18
    1376:	b0 0d       	add	r27, r0
    1378:	a1 1d       	adc	r26, r1
    137a:	62 1f       	adc	r22, r18
    137c:	73 9f       	mul	r23, r19
    137e:	b0 0d       	add	r27, r0
    1380:	a1 1d       	adc	r26, r1
    1382:	62 1f       	adc	r22, r18
    1384:	83 9f       	mul	r24, r19
    1386:	a0 0d       	add	r26, r0
    1388:	61 1d       	adc	r22, r1
    138a:	22 1f       	adc	r18, r18
    138c:	74 9f       	mul	r23, r20
    138e:	33 27       	eor	r19, r19
    1390:	a0 0d       	add	r26, r0
    1392:	61 1d       	adc	r22, r1
    1394:	23 1f       	adc	r18, r19
    1396:	84 9f       	mul	r24, r20
    1398:	60 0d       	add	r22, r0
    139a:	21 1d       	adc	r18, r1
    139c:	82 2f       	mov	r24, r18
    139e:	76 2f       	mov	r23, r22
    13a0:	6a 2f       	mov	r22, r26
    13a2:	11 24       	eor	r1, r1
    13a4:	9f 57       	subi	r25, 0x7F	; 127
    13a6:	50 40       	sbci	r21, 0x00	; 0
    13a8:	8a f0       	brmi	.+34     	; 0x13cc <__mulsf3_pse+0x84>
    13aa:	e1 f0       	breq	.+56     	; 0x13e4 <__mulsf3_pse+0x9c>
    13ac:	88 23       	and	r24, r24
    13ae:	4a f0       	brmi	.+18     	; 0x13c2 <__mulsf3_pse+0x7a>
    13b0:	ee 0f       	add	r30, r30
    13b2:	ff 1f       	adc	r31, r31
    13b4:	bb 1f       	adc	r27, r27
    13b6:	66 1f       	adc	r22, r22
    13b8:	77 1f       	adc	r23, r23
    13ba:	88 1f       	adc	r24, r24
    13bc:	91 50       	subi	r25, 0x01	; 1
    13be:	50 40       	sbci	r21, 0x00	; 0
    13c0:	a9 f7       	brne	.-22     	; 0x13ac <__mulsf3_pse+0x64>
    13c2:	9e 3f       	cpi	r25, 0xFE	; 254
    13c4:	51 05       	cpc	r21, r1
    13c6:	70 f0       	brcs	.+28     	; 0x13e4 <__mulsf3_pse+0x9c>
    13c8:	23 cf       	rjmp	.-442    	; 0x1210 <__fp_inf>
    13ca:	a6 cf       	rjmp	.-180    	; 0x1318 <__fp_szero>
    13cc:	5f 3f       	cpi	r21, 0xFF	; 255
    13ce:	ec f3       	brlt	.-6      	; 0x13ca <__mulsf3_pse+0x82>
    13d0:	98 3e       	cpi	r25, 0xE8	; 232
    13d2:	dc f3       	brlt	.-10     	; 0x13ca <__mulsf3_pse+0x82>
    13d4:	86 95       	lsr	r24
    13d6:	77 95       	ror	r23
    13d8:	67 95       	ror	r22
    13da:	b7 95       	ror	r27
    13dc:	f7 95       	ror	r31
    13de:	e7 95       	ror	r30
    13e0:	9f 5f       	subi	r25, 0xFF	; 255
    13e2:	c1 f7       	brne	.-16     	; 0x13d4 <__mulsf3_pse+0x8c>
    13e4:	fe 2b       	or	r31, r30
    13e6:	88 0f       	add	r24, r24
    13e8:	91 1d       	adc	r25, r1
    13ea:	96 95       	lsr	r25
    13ec:	87 95       	ror	r24
    13ee:	97 f9       	bld	r25, 7
    13f0:	08 95       	ret

000013f2 <sin>:
    13f2:	9f 93       	push	r25
    13f4:	25 df       	rcall	.-438    	; 0x1240 <__fp_rempio2>
    13f6:	0f 90       	pop	r0
    13f8:	07 fc       	sbrc	r0, 7
    13fa:	ee 5f       	subi	r30, 0xFE	; 254
    13fc:	59 cf       	rjmp	.-334    	; 0x12b0 <__fp_sinus>

000013fe <__fp_mpack>:
    13fe:	9f 3f       	cpi	r25, 0xFF	; 255
    1400:	31 f0       	breq	.+12     	; 0x140e <__fp_mpack_finite+0xc>

00001402 <__fp_mpack_finite>:
    1402:	91 50       	subi	r25, 0x01	; 1
    1404:	20 f4       	brcc	.+8      	; 0x140e <__fp_mpack_finite+0xc>
    1406:	87 95       	ror	r24
    1408:	77 95       	ror	r23
    140a:	67 95       	ror	r22
    140c:	b7 95       	ror	r27
    140e:	88 0f       	add	r24, r24
    1410:	91 1d       	adc	r25, r1
    1412:	96 95       	lsr	r25
    1414:	87 95       	ror	r24
    1416:	97 f9       	bld	r25, 7
    1418:	08 95       	ret

0000141a <__fp_powsodd>:
    141a:	9f 93       	push	r25
    141c:	8f 93       	push	r24
    141e:	7f 93       	push	r23
    1420:	6f 93       	push	r22
    1422:	ff 93       	push	r31
    1424:	ef 93       	push	r30
    1426:	9b 01       	movw	r18, r22
    1428:	ac 01       	movw	r20, r24
    142a:	80 df       	rcall	.-256    	; 0x132c <__mulsf3>
    142c:	ef 91       	pop	r30
    142e:	ff 91       	pop	r31
    1430:	05 d0       	rcall	.+10     	; 0x143c <__fp_powser>
    1432:	2f 91       	pop	r18
    1434:	3f 91       	pop	r19
    1436:	4f 91       	pop	r20
    1438:	5f 91       	pop	r21
    143a:	78 cf       	rjmp	.-272    	; 0x132c <__mulsf3>

0000143c <__fp_powser>:
    143c:	df 93       	push	r29
    143e:	cf 93       	push	r28
    1440:	1f 93       	push	r17
    1442:	0f 93       	push	r16
    1444:	ff 92       	push	r15
    1446:	ef 92       	push	r14
    1448:	df 92       	push	r13
    144a:	7b 01       	movw	r14, r22
    144c:	8c 01       	movw	r16, r24
    144e:	68 94       	set
    1450:	05 c0       	rjmp	.+10     	; 0x145c <__fp_powser+0x20>
    1452:	da 2e       	mov	r13, r26
    1454:	ef 01       	movw	r28, r30
    1456:	76 df       	rcall	.-276    	; 0x1344 <__mulsf3x>
    1458:	fe 01       	movw	r30, r28
    145a:	e8 94       	clt
    145c:	a5 91       	lpm	r26, Z+
    145e:	25 91       	lpm	r18, Z+
    1460:	35 91       	lpm	r19, Z+
    1462:	45 91       	lpm	r20, Z+
    1464:	55 91       	lpm	r21, Z+
    1466:	ae f3       	brts	.-22     	; 0x1452 <__fp_powser+0x16>
    1468:	ef 01       	movw	r28, r30
    146a:	7e dd       	rcall	.-1284   	; 0xf68 <__addsf3x>
    146c:	fe 01       	movw	r30, r28
    146e:	97 01       	movw	r18, r14
    1470:	a8 01       	movw	r20, r16
    1472:	da 94       	dec	r13
    1474:	79 f7       	brne	.-34     	; 0x1454 <__fp_powser+0x18>
    1476:	df 90       	pop	r13
    1478:	ef 90       	pop	r14
    147a:	ff 90       	pop	r15
    147c:	0f 91       	pop	r16
    147e:	1f 91       	pop	r17
    1480:	cf 91       	pop	r28
    1482:	df 91       	pop	r29
    1484:	08 95       	ret

00001486 <vfprintf>:
    1486:	2f 92       	push	r2
    1488:	3f 92       	push	r3
    148a:	4f 92       	push	r4
    148c:	5f 92       	push	r5
    148e:	6f 92       	push	r6
    1490:	7f 92       	push	r7
    1492:	8f 92       	push	r8
    1494:	9f 92       	push	r9
    1496:	af 92       	push	r10
    1498:	bf 92       	push	r11
    149a:	cf 92       	push	r12
    149c:	df 92       	push	r13
    149e:	ef 92       	push	r14
    14a0:	ff 92       	push	r15
    14a2:	0f 93       	push	r16
    14a4:	1f 93       	push	r17
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	cd b7       	in	r28, 0x3d	; 61
    14ac:	de b7       	in	r29, 0x3e	; 62
    14ae:	63 97       	sbiw	r28, 0x13	; 19
    14b0:	cd bf       	out	0x3d, r28	; 61
    14b2:	de bf       	out	0x3e, r29	; 62
    14b4:	7c 01       	movw	r14, r24
    14b6:	1b 01       	movw	r2, r22
    14b8:	6a 01       	movw	r12, r20
    14ba:	fc 01       	movw	r30, r24
    14bc:	16 82       	std	Z+6, r1	; 0x06
    14be:	17 82       	std	Z+7, r1	; 0x07
    14c0:	83 81       	ldd	r24, Z+3	; 0x03
    14c2:	81 ff       	sbrs	r24, 1
    14c4:	49 c3       	rjmp	.+1682   	; 0x1b58 <vfprintf+0x6d2>
    14c6:	be 01       	movw	r22, r28
    14c8:	6f 5f       	subi	r22, 0xFF	; 255
    14ca:	7f 4f       	sbci	r23, 0xFF	; 255
    14cc:	4b 01       	movw	r8, r22
    14ce:	f7 01       	movw	r30, r14
    14d0:	93 81       	ldd	r25, Z+3	; 0x03
    14d2:	f1 01       	movw	r30, r2
    14d4:	93 fd       	sbrc	r25, 3
    14d6:	85 91       	lpm	r24, Z+
    14d8:	93 ff       	sbrs	r25, 3
    14da:	81 91       	ld	r24, Z+
    14dc:	1f 01       	movw	r2, r30
    14de:	88 23       	and	r24, r24
    14e0:	09 f4       	brne	.+2      	; 0x14e4 <vfprintf+0x5e>
    14e2:	36 c3       	rjmp	.+1644   	; 0x1b50 <vfprintf+0x6ca>
    14e4:	85 32       	cpi	r24, 0x25	; 37
    14e6:	39 f4       	brne	.+14     	; 0x14f6 <vfprintf+0x70>
    14e8:	93 fd       	sbrc	r25, 3
    14ea:	85 91       	lpm	r24, Z+
    14ec:	93 ff       	sbrs	r25, 3
    14ee:	81 91       	ld	r24, Z+
    14f0:	1f 01       	movw	r2, r30
    14f2:	85 32       	cpi	r24, 0x25	; 37
    14f4:	31 f4       	brne	.+12     	; 0x1502 <vfprintf+0x7c>
    14f6:	b7 01       	movw	r22, r14
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	34 d4       	rcall	.+2152   	; 0x1d64 <fputc>
    14fc:	56 01       	movw	r10, r12
    14fe:	65 01       	movw	r12, r10
    1500:	e6 cf       	rjmp	.-52     	; 0x14ce <vfprintf+0x48>
    1502:	10 e0       	ldi	r17, 0x00	; 0
    1504:	51 2c       	mov	r5, r1
    1506:	20 e0       	ldi	r18, 0x00	; 0
    1508:	20 32       	cpi	r18, 0x20	; 32
    150a:	a0 f4       	brcc	.+40     	; 0x1534 <vfprintf+0xae>
    150c:	8b 32       	cpi	r24, 0x2B	; 43
    150e:	69 f0       	breq	.+26     	; 0x152a <vfprintf+0xa4>
    1510:	30 f4       	brcc	.+12     	; 0x151e <vfprintf+0x98>
    1512:	80 32       	cpi	r24, 0x20	; 32
    1514:	59 f0       	breq	.+22     	; 0x152c <vfprintf+0xa6>
    1516:	83 32       	cpi	r24, 0x23	; 35
    1518:	69 f4       	brne	.+26     	; 0x1534 <vfprintf+0xae>
    151a:	20 61       	ori	r18, 0x10	; 16
    151c:	2c c0       	rjmp	.+88     	; 0x1576 <vfprintf+0xf0>
    151e:	8d 32       	cpi	r24, 0x2D	; 45
    1520:	39 f0       	breq	.+14     	; 0x1530 <vfprintf+0xaa>
    1522:	80 33       	cpi	r24, 0x30	; 48
    1524:	39 f4       	brne	.+14     	; 0x1534 <vfprintf+0xae>
    1526:	21 60       	ori	r18, 0x01	; 1
    1528:	26 c0       	rjmp	.+76     	; 0x1576 <vfprintf+0xf0>
    152a:	22 60       	ori	r18, 0x02	; 2
    152c:	24 60       	ori	r18, 0x04	; 4
    152e:	23 c0       	rjmp	.+70     	; 0x1576 <vfprintf+0xf0>
    1530:	28 60       	ori	r18, 0x08	; 8
    1532:	21 c0       	rjmp	.+66     	; 0x1576 <vfprintf+0xf0>
    1534:	27 fd       	sbrc	r18, 7
    1536:	27 c0       	rjmp	.+78     	; 0x1586 <vfprintf+0x100>
    1538:	30 ed       	ldi	r19, 0xD0	; 208
    153a:	38 0f       	add	r19, r24
    153c:	3a 30       	cpi	r19, 0x0A	; 10
    153e:	78 f4       	brcc	.+30     	; 0x155e <vfprintf+0xd8>
    1540:	26 ff       	sbrs	r18, 6
    1542:	06 c0       	rjmp	.+12     	; 0x1550 <vfprintf+0xca>
    1544:	fa e0       	ldi	r31, 0x0A	; 10
    1546:	1f 9f       	mul	r17, r31
    1548:	30 0d       	add	r19, r0
    154a:	11 24       	eor	r1, r1
    154c:	13 2f       	mov	r17, r19
    154e:	13 c0       	rjmp	.+38     	; 0x1576 <vfprintf+0xf0>
    1550:	6a e0       	ldi	r22, 0x0A	; 10
    1552:	56 9e       	mul	r5, r22
    1554:	30 0d       	add	r19, r0
    1556:	11 24       	eor	r1, r1
    1558:	53 2e       	mov	r5, r19
    155a:	20 62       	ori	r18, 0x20	; 32
    155c:	0c c0       	rjmp	.+24     	; 0x1576 <vfprintf+0xf0>
    155e:	8e 32       	cpi	r24, 0x2E	; 46
    1560:	21 f4       	brne	.+8      	; 0x156a <vfprintf+0xe4>
    1562:	26 fd       	sbrc	r18, 6
    1564:	f5 c2       	rjmp	.+1514   	; 0x1b50 <vfprintf+0x6ca>
    1566:	20 64       	ori	r18, 0x40	; 64
    1568:	06 c0       	rjmp	.+12     	; 0x1576 <vfprintf+0xf0>
    156a:	8c 36       	cpi	r24, 0x6C	; 108
    156c:	11 f4       	brne	.+4      	; 0x1572 <vfprintf+0xec>
    156e:	20 68       	ori	r18, 0x80	; 128
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <vfprintf+0xf0>
    1572:	88 36       	cpi	r24, 0x68	; 104
    1574:	41 f4       	brne	.+16     	; 0x1586 <vfprintf+0x100>
    1576:	f1 01       	movw	r30, r2
    1578:	93 fd       	sbrc	r25, 3
    157a:	85 91       	lpm	r24, Z+
    157c:	93 ff       	sbrs	r25, 3
    157e:	81 91       	ld	r24, Z+
    1580:	1f 01       	movw	r2, r30
    1582:	81 11       	cpse	r24, r1
    1584:	c1 cf       	rjmp	.-126    	; 0x1508 <vfprintf+0x82>
    1586:	9b eb       	ldi	r25, 0xBB	; 187
    1588:	98 0f       	add	r25, r24
    158a:	93 30       	cpi	r25, 0x03	; 3
    158c:	18 f4       	brcc	.+6      	; 0x1594 <vfprintf+0x10e>
    158e:	20 61       	ori	r18, 0x10	; 16
    1590:	80 5e       	subi	r24, 0xE0	; 224
    1592:	06 c0       	rjmp	.+12     	; 0x15a0 <vfprintf+0x11a>
    1594:	9b e9       	ldi	r25, 0x9B	; 155
    1596:	98 0f       	add	r25, r24
    1598:	93 30       	cpi	r25, 0x03	; 3
    159a:	08 f0       	brcs	.+2      	; 0x159e <vfprintf+0x118>
    159c:	9a c1       	rjmp	.+820    	; 0x18d2 <vfprintf+0x44c>
    159e:	2f 7e       	andi	r18, 0xEF	; 239
    15a0:	26 ff       	sbrs	r18, 6
    15a2:	16 e0       	ldi	r17, 0x06	; 6
    15a4:	2f 73       	andi	r18, 0x3F	; 63
    15a6:	72 2e       	mov	r7, r18
    15a8:	85 36       	cpi	r24, 0x65	; 101
    15aa:	21 f4       	brne	.+8      	; 0x15b4 <vfprintf+0x12e>
    15ac:	f2 2f       	mov	r31, r18
    15ae:	f0 64       	ori	r31, 0x40	; 64
    15b0:	7f 2e       	mov	r7, r31
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <vfprintf+0x13e>
    15b4:	86 36       	cpi	r24, 0x66	; 102
    15b6:	21 f4       	brne	.+8      	; 0x15c0 <vfprintf+0x13a>
    15b8:	62 2f       	mov	r22, r18
    15ba:	60 68       	ori	r22, 0x80	; 128
    15bc:	76 2e       	mov	r7, r22
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <vfprintf+0x13e>
    15c0:	11 11       	cpse	r17, r1
    15c2:	11 50       	subi	r17, 0x01	; 1
    15c4:	77 fe       	sbrs	r7, 7
    15c6:	07 c0       	rjmp	.+14     	; 0x15d6 <vfprintf+0x150>
    15c8:	1c 33       	cpi	r17, 0x3C	; 60
    15ca:	48 f4       	brcc	.+18     	; 0x15de <vfprintf+0x158>
    15cc:	44 24       	eor	r4, r4
    15ce:	43 94       	inc	r4
    15d0:	41 0e       	add	r4, r17
    15d2:	27 e0       	ldi	r18, 0x07	; 7
    15d4:	0b c0       	rjmp	.+22     	; 0x15ec <vfprintf+0x166>
    15d6:	18 30       	cpi	r17, 0x08	; 8
    15d8:	30 f4       	brcc	.+12     	; 0x15e6 <vfprintf+0x160>
    15da:	21 2f       	mov	r18, r17
    15dc:	06 c0       	rjmp	.+12     	; 0x15ea <vfprintf+0x164>
    15de:	27 e0       	ldi	r18, 0x07	; 7
    15e0:	4c e3       	ldi	r20, 0x3C	; 60
    15e2:	44 2e       	mov	r4, r20
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <vfprintf+0x166>
    15e6:	27 e0       	ldi	r18, 0x07	; 7
    15e8:	17 e0       	ldi	r17, 0x07	; 7
    15ea:	41 2c       	mov	r4, r1
    15ec:	56 01       	movw	r10, r12
    15ee:	74 e0       	ldi	r23, 0x04	; 4
    15f0:	a7 0e       	add	r10, r23
    15f2:	b1 1c       	adc	r11, r1
    15f4:	f6 01       	movw	r30, r12
    15f6:	60 81       	ld	r22, Z
    15f8:	71 81       	ldd	r23, Z+1	; 0x01
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	04 2d       	mov	r16, r4
    1600:	a4 01       	movw	r20, r8
    1602:	c2 d2       	rcall	.+1412   	; 0x1b88 <__ftoa_engine>
    1604:	6c 01       	movw	r12, r24
    1606:	09 81       	ldd	r16, Y+1	; 0x01
    1608:	00 ff       	sbrs	r16, 0
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <vfprintf+0x18a>
    160c:	03 ff       	sbrs	r16, 3
    160e:	06 c0       	rjmp	.+12     	; 0x161c <vfprintf+0x196>
    1610:	71 fc       	sbrc	r7, 1
    1612:	07 c0       	rjmp	.+14     	; 0x1622 <vfprintf+0x19c>
    1614:	72 fc       	sbrc	r7, 2
    1616:	08 c0       	rjmp	.+16     	; 0x1628 <vfprintf+0x1a2>
    1618:	61 2c       	mov	r6, r1
    161a:	08 c0       	rjmp	.+16     	; 0x162c <vfprintf+0x1a6>
    161c:	3d e2       	ldi	r19, 0x2D	; 45
    161e:	63 2e       	mov	r6, r19
    1620:	05 c0       	rjmp	.+10     	; 0x162c <vfprintf+0x1a6>
    1622:	2b e2       	ldi	r18, 0x2B	; 43
    1624:	62 2e       	mov	r6, r18
    1626:	02 c0       	rjmp	.+4      	; 0x162c <vfprintf+0x1a6>
    1628:	90 e2       	ldi	r25, 0x20	; 32
    162a:	69 2e       	mov	r6, r25
    162c:	80 2f       	mov	r24, r16
    162e:	8c 70       	andi	r24, 0x0C	; 12
    1630:	81 f1       	breq	.+96     	; 0x1692 <vfprintf+0x20c>
    1632:	66 20       	and	r6, r6
    1634:	11 f0       	breq	.+4      	; 0x163a <vfprintf+0x1b4>
    1636:	84 e0       	ldi	r24, 0x04	; 4
    1638:	01 c0       	rjmp	.+2      	; 0x163c <vfprintf+0x1b6>
    163a:	83 e0       	ldi	r24, 0x03	; 3
    163c:	85 15       	cp	r24, r5
    163e:	10 f0       	brcs	.+4      	; 0x1644 <vfprintf+0x1be>
    1640:	51 2c       	mov	r5, r1
    1642:	0a c0       	rjmp	.+20     	; 0x1658 <vfprintf+0x1d2>
    1644:	58 1a       	sub	r5, r24
    1646:	73 fc       	sbrc	r7, 3
    1648:	07 c0       	rjmp	.+14     	; 0x1658 <vfprintf+0x1d2>
    164a:	b7 01       	movw	r22, r14
    164c:	80 e2       	ldi	r24, 0x20	; 32
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	89 d3       	rcall	.+1810   	; 0x1d64 <fputc>
    1652:	5a 94       	dec	r5
    1654:	d1 f7       	brne	.-12     	; 0x164a <vfprintf+0x1c4>
    1656:	f4 cf       	rjmp	.-24     	; 0x1640 <vfprintf+0x1ba>
    1658:	66 20       	and	r6, r6
    165a:	21 f0       	breq	.+8      	; 0x1664 <vfprintf+0x1de>
    165c:	b7 01       	movw	r22, r14
    165e:	86 2d       	mov	r24, r6
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	80 d3       	rcall	.+1792   	; 0x1d64 <fputc>
    1664:	03 fd       	sbrc	r16, 3
    1666:	03 c0       	rjmp	.+6      	; 0x166e <vfprintf+0x1e8>
    1668:	0e e1       	ldi	r16, 0x1E	; 30
    166a:	12 e0       	ldi	r17, 0x02	; 2
    166c:	02 c0       	rjmp	.+4      	; 0x1672 <vfprintf+0x1ec>
    166e:	0a e1       	ldi	r16, 0x1A	; 26
    1670:	12 e0       	ldi	r17, 0x02	; 2
    1672:	f7 2d       	mov	r31, r7
    1674:	f0 71       	andi	r31, 0x10	; 16
    1676:	7f 2e       	mov	r7, r31
    1678:	f8 01       	movw	r30, r16
    167a:	84 91       	lpm	r24, Z
    167c:	88 23       	and	r24, r24
    167e:	09 f4       	brne	.+2      	; 0x1682 <vfprintf+0x1fc>
    1680:	5e c2       	rjmp	.+1212   	; 0x1b3e <vfprintf+0x6b8>
    1682:	71 10       	cpse	r7, r1
    1684:	80 52       	subi	r24, 0x20	; 32
    1686:	b7 01       	movw	r22, r14
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	6c d3       	rcall	.+1752   	; 0x1d64 <fputc>
    168c:	0f 5f       	subi	r16, 0xFF	; 255
    168e:	1f 4f       	sbci	r17, 0xFF	; 255
    1690:	f3 cf       	rjmp	.-26     	; 0x1678 <vfprintf+0x1f2>
    1692:	77 fe       	sbrs	r7, 7
    1694:	0f c0       	rjmp	.+30     	; 0x16b4 <vfprintf+0x22e>
    1696:	4c 0c       	add	r4, r12
    1698:	04 ff       	sbrs	r16, 4
    169a:	04 c0       	rjmp	.+8      	; 0x16a4 <vfprintf+0x21e>
    169c:	8a 81       	ldd	r24, Y+2	; 0x02
    169e:	81 33       	cpi	r24, 0x31	; 49
    16a0:	09 f4       	brne	.+2      	; 0x16a4 <vfprintf+0x21e>
    16a2:	4a 94       	dec	r4
    16a4:	14 14       	cp	r1, r4
    16a6:	74 f5       	brge	.+92     	; 0x1704 <vfprintf+0x27e>
    16a8:	f8 e0       	ldi	r31, 0x08	; 8
    16aa:	f4 15       	cp	r31, r4
    16ac:	78 f5       	brcc	.+94     	; 0x170c <vfprintf+0x286>
    16ae:	88 e0       	ldi	r24, 0x08	; 8
    16b0:	48 2e       	mov	r4, r24
    16b2:	2c c0       	rjmp	.+88     	; 0x170c <vfprintf+0x286>
    16b4:	76 fc       	sbrc	r7, 6
    16b6:	2a c0       	rjmp	.+84     	; 0x170c <vfprintf+0x286>
    16b8:	81 2f       	mov	r24, r17
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	8c 15       	cp	r24, r12
    16be:	9d 05       	cpc	r25, r13
    16c0:	9c f0       	brlt	.+38     	; 0x16e8 <vfprintf+0x262>
    16c2:	6c ef       	ldi	r22, 0xFC	; 252
    16c4:	c6 16       	cp	r12, r22
    16c6:	6f ef       	ldi	r22, 0xFF	; 255
    16c8:	d6 06       	cpc	r13, r22
    16ca:	74 f0       	brlt	.+28     	; 0x16e8 <vfprintf+0x262>
    16cc:	77 2d       	mov	r23, r7
    16ce:	70 68       	ori	r23, 0x80	; 128
    16d0:	77 2e       	mov	r7, r23
    16d2:	0a c0       	rjmp	.+20     	; 0x16e8 <vfprintf+0x262>
    16d4:	e2 e0       	ldi	r30, 0x02	; 2
    16d6:	f0 e0       	ldi	r31, 0x00	; 0
    16d8:	ec 0f       	add	r30, r28
    16da:	fd 1f       	adc	r31, r29
    16dc:	e1 0f       	add	r30, r17
    16de:	f1 1d       	adc	r31, r1
    16e0:	80 81       	ld	r24, Z
    16e2:	80 33       	cpi	r24, 0x30	; 48
    16e4:	19 f4       	brne	.+6      	; 0x16ec <vfprintf+0x266>
    16e6:	11 50       	subi	r17, 0x01	; 1
    16e8:	11 11       	cpse	r17, r1
    16ea:	f4 cf       	rjmp	.-24     	; 0x16d4 <vfprintf+0x24e>
    16ec:	77 fe       	sbrs	r7, 7
    16ee:	0e c0       	rjmp	.+28     	; 0x170c <vfprintf+0x286>
    16f0:	44 24       	eor	r4, r4
    16f2:	43 94       	inc	r4
    16f4:	41 0e       	add	r4, r17
    16f6:	81 2f       	mov	r24, r17
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	c8 16       	cp	r12, r24
    16fc:	d9 06       	cpc	r13, r25
    16fe:	2c f4       	brge	.+10     	; 0x170a <vfprintf+0x284>
    1700:	1c 19       	sub	r17, r12
    1702:	04 c0       	rjmp	.+8      	; 0x170c <vfprintf+0x286>
    1704:	44 24       	eor	r4, r4
    1706:	43 94       	inc	r4
    1708:	01 c0       	rjmp	.+2      	; 0x170c <vfprintf+0x286>
    170a:	10 e0       	ldi	r17, 0x00	; 0
    170c:	77 fe       	sbrs	r7, 7
    170e:	07 c0       	rjmp	.+14     	; 0x171e <vfprintf+0x298>
    1710:	1c 14       	cp	r1, r12
    1712:	1d 04       	cpc	r1, r13
    1714:	3c f4       	brge	.+14     	; 0x1724 <vfprintf+0x29e>
    1716:	96 01       	movw	r18, r12
    1718:	2f 5f       	subi	r18, 0xFF	; 255
    171a:	3f 4f       	sbci	r19, 0xFF	; 255
    171c:	05 c0       	rjmp	.+10     	; 0x1728 <vfprintf+0x2a2>
    171e:	25 e0       	ldi	r18, 0x05	; 5
    1720:	30 e0       	ldi	r19, 0x00	; 0
    1722:	02 c0       	rjmp	.+4      	; 0x1728 <vfprintf+0x2a2>
    1724:	21 e0       	ldi	r18, 0x01	; 1
    1726:	30 e0       	ldi	r19, 0x00	; 0
    1728:	66 20       	and	r6, r6
    172a:	11 f0       	breq	.+4      	; 0x1730 <vfprintf+0x2aa>
    172c:	2f 5f       	subi	r18, 0xFF	; 255
    172e:	3f 4f       	sbci	r19, 0xFF	; 255
    1730:	11 23       	and	r17, r17
    1732:	31 f0       	breq	.+12     	; 0x1740 <vfprintf+0x2ba>
    1734:	41 2f       	mov	r20, r17
    1736:	50 e0       	ldi	r21, 0x00	; 0
    1738:	4f 5f       	subi	r20, 0xFF	; 255
    173a:	5f 4f       	sbci	r21, 0xFF	; 255
    173c:	24 0f       	add	r18, r20
    173e:	35 1f       	adc	r19, r21
    1740:	45 2d       	mov	r20, r5
    1742:	50 e0       	ldi	r21, 0x00	; 0
    1744:	24 17       	cp	r18, r20
    1746:	35 07       	cpc	r19, r21
    1748:	14 f4       	brge	.+4      	; 0x174e <vfprintf+0x2c8>
    174a:	52 1a       	sub	r5, r18
    174c:	01 c0       	rjmp	.+2      	; 0x1750 <vfprintf+0x2ca>
    174e:	51 2c       	mov	r5, r1
    1750:	87 2d       	mov	r24, r7
    1752:	89 70       	andi	r24, 0x09	; 9
    1754:	41 f4       	brne	.+16     	; 0x1766 <vfprintf+0x2e0>
    1756:	55 20       	and	r5, r5
    1758:	31 f0       	breq	.+12     	; 0x1766 <vfprintf+0x2e0>
    175a:	b7 01       	movw	r22, r14
    175c:	80 e2       	ldi	r24, 0x20	; 32
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	01 d3       	rcall	.+1538   	; 0x1d64 <fputc>
    1762:	5a 94       	dec	r5
    1764:	f8 cf       	rjmp	.-16     	; 0x1756 <vfprintf+0x2d0>
    1766:	66 20       	and	r6, r6
    1768:	21 f0       	breq	.+8      	; 0x1772 <vfprintf+0x2ec>
    176a:	b7 01       	movw	r22, r14
    176c:	86 2d       	mov	r24, r6
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	f9 d2       	rcall	.+1522   	; 0x1d64 <fputc>
    1772:	73 fc       	sbrc	r7, 3
    1774:	08 c0       	rjmp	.+16     	; 0x1786 <vfprintf+0x300>
    1776:	55 20       	and	r5, r5
    1778:	31 f0       	breq	.+12     	; 0x1786 <vfprintf+0x300>
    177a:	b7 01       	movw	r22, r14
    177c:	80 e3       	ldi	r24, 0x30	; 48
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	f1 d2       	rcall	.+1506   	; 0x1d64 <fputc>
    1782:	5a 94       	dec	r5
    1784:	f8 cf       	rjmp	.-16     	; 0x1776 <vfprintf+0x2f0>
    1786:	77 fe       	sbrs	r7, 7
    1788:	5d c0       	rjmp	.+186    	; 0x1844 <vfprintf+0x3be>
    178a:	9c 2d       	mov	r25, r12
    178c:	8d 2d       	mov	r24, r13
    178e:	d7 fe       	sbrs	r13, 7
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <vfprintf+0x310>
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	80 e0       	ldi	r24, 0x00	; 0
    1796:	69 2e       	mov	r6, r25
    1798:	78 2e       	mov	r7, r24
    179a:	40 e0       	ldi	r20, 0x00	; 0
    179c:	50 e0       	ldi	r21, 0x00	; 0
    179e:	c6 01       	movw	r24, r12
    17a0:	84 19       	sub	r24, r4
    17a2:	91 09       	sbc	r25, r1
    17a4:	8c 87       	std	Y+12, r24	; 0x0c
    17a6:	9d 87       	std	Y+13, r25	; 0x0d
    17a8:	96 01       	movw	r18, r12
    17aa:	26 19       	sub	r18, r6
    17ac:	37 09       	sbc	r19, r7
    17ae:	28 0d       	add	r18, r8
    17b0:	39 1d       	adc	r19, r9
    17b2:	81 2f       	mov	r24, r17
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	ee 27       	eor	r30, r30
    17b8:	ff 27       	eor	r31, r31
    17ba:	e8 1b       	sub	r30, r24
    17bc:	f9 0b       	sbc	r31, r25
    17be:	ee 87       	std	Y+14, r30	; 0x0e
    17c0:	ff 87       	std	Y+15, r31	; 0x0f
    17c2:	ff ef       	ldi	r31, 0xFF	; 255
    17c4:	6f 16       	cp	r6, r31
    17c6:	7f 06       	cpc	r7, r31
    17c8:	61 f4       	brne	.+24     	; 0x17e2 <vfprintf+0x35c>
    17ca:	b7 01       	movw	r22, r14
    17cc:	8e e2       	ldi	r24, 0x2E	; 46
    17ce:	90 e0       	ldi	r25, 0x00	; 0
    17d0:	2b 8b       	std	Y+19, r18	; 0x13
    17d2:	3a 8b       	std	Y+18, r19	; 0x12
    17d4:	48 8b       	std	Y+16, r20	; 0x10
    17d6:	59 8b       	std	Y+17, r21	; 0x11
    17d8:	c5 d2       	rcall	.+1418   	; 0x1d64 <fputc>
    17da:	59 89       	ldd	r21, Y+17	; 0x11
    17dc:	48 89       	ldd	r20, Y+16	; 0x10
    17de:	3a 89       	ldd	r19, Y+18	; 0x12
    17e0:	2b 89       	ldd	r18, Y+19	; 0x13
    17e2:	c6 14       	cp	r12, r6
    17e4:	d7 04       	cpc	r13, r7
    17e6:	54 f0       	brlt	.+20     	; 0x17fc <vfprintf+0x376>
    17e8:	6c 85       	ldd	r22, Y+12	; 0x0c
    17ea:	7d 85       	ldd	r23, Y+13	; 0x0d
    17ec:	66 15       	cp	r22, r6
    17ee:	77 05       	cpc	r23, r7
    17f0:	2c f4       	brge	.+10     	; 0x17fc <vfprintf+0x376>
    17f2:	f9 01       	movw	r30, r18
    17f4:	e4 0f       	add	r30, r20
    17f6:	f5 1f       	adc	r31, r21
    17f8:	81 81       	ldd	r24, Z+1	; 0x01
    17fa:	01 c0       	rjmp	.+2      	; 0x17fe <vfprintf+0x378>
    17fc:	80 e3       	ldi	r24, 0x30	; 48
    17fe:	71 e0       	ldi	r23, 0x01	; 1
    1800:	67 1a       	sub	r6, r23
    1802:	71 08       	sbc	r7, r1
    1804:	4f 5f       	subi	r20, 0xFF	; 255
    1806:	5f 4f       	sbci	r21, 0xFF	; 255
    1808:	ee 85       	ldd	r30, Y+14	; 0x0e
    180a:	ff 85       	ldd	r31, Y+15	; 0x0f
    180c:	6e 16       	cp	r6, r30
    180e:	7f 06       	cpc	r7, r31
    1810:	64 f0       	brlt	.+24     	; 0x182a <vfprintf+0x3a4>
    1812:	b7 01       	movw	r22, r14
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	2b 8b       	std	Y+19, r18	; 0x13
    1818:	3a 8b       	std	Y+18, r19	; 0x12
    181a:	48 8b       	std	Y+16, r20	; 0x10
    181c:	59 8b       	std	Y+17, r21	; 0x11
    181e:	a2 d2       	rcall	.+1348   	; 0x1d64 <fputc>
    1820:	2b 89       	ldd	r18, Y+19	; 0x13
    1822:	3a 89       	ldd	r19, Y+18	; 0x12
    1824:	48 89       	ldd	r20, Y+16	; 0x10
    1826:	59 89       	ldd	r21, Y+17	; 0x11
    1828:	cc cf       	rjmp	.-104    	; 0x17c2 <vfprintf+0x33c>
    182a:	6c 14       	cp	r6, r12
    182c:	7d 04       	cpc	r7, r13
    182e:	39 f4       	brne	.+14     	; 0x183e <vfprintf+0x3b8>
    1830:	9a 81       	ldd	r25, Y+2	; 0x02
    1832:	96 33       	cpi	r25, 0x36	; 54
    1834:	18 f4       	brcc	.+6      	; 0x183c <vfprintf+0x3b6>
    1836:	95 33       	cpi	r25, 0x35	; 53
    1838:	11 f4       	brne	.+4      	; 0x183e <vfprintf+0x3b8>
    183a:	04 ff       	sbrs	r16, 4
    183c:	81 e3       	ldi	r24, 0x31	; 49
    183e:	b7 01       	movw	r22, r14
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	45 c0       	rjmp	.+138    	; 0x18ce <vfprintf+0x448>
    1844:	8a 81       	ldd	r24, Y+2	; 0x02
    1846:	81 33       	cpi	r24, 0x31	; 49
    1848:	09 f0       	breq	.+2      	; 0x184c <vfprintf+0x3c6>
    184a:	0f 7e       	andi	r16, 0xEF	; 239
    184c:	b7 01       	movw	r22, r14
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	89 d2       	rcall	.+1298   	; 0x1d64 <fputc>
    1852:	11 11       	cpse	r17, r1
    1854:	05 c0       	rjmp	.+10     	; 0x1860 <vfprintf+0x3da>
    1856:	74 fe       	sbrs	r7, 4
    1858:	16 c0       	rjmp	.+44     	; 0x1886 <vfprintf+0x400>
    185a:	85 e4       	ldi	r24, 0x45	; 69
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	15 c0       	rjmp	.+42     	; 0x188a <vfprintf+0x404>
    1860:	b7 01       	movw	r22, r14
    1862:	8e e2       	ldi	r24, 0x2E	; 46
    1864:	90 e0       	ldi	r25, 0x00	; 0
    1866:	7e d2       	rcall	.+1276   	; 0x1d64 <fputc>
    1868:	82 e0       	ldi	r24, 0x02	; 2
    186a:	66 24       	eor	r6, r6
    186c:	63 94       	inc	r6
    186e:	68 0e       	add	r6, r24
    1870:	f4 01       	movw	r30, r8
    1872:	e8 0f       	add	r30, r24
    1874:	f1 1d       	adc	r31, r1
    1876:	80 81       	ld	r24, Z
    1878:	b7 01       	movw	r22, r14
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	73 d2       	rcall	.+1254   	; 0x1d64 <fputc>
    187e:	11 50       	subi	r17, 0x01	; 1
    1880:	51 f3       	breq	.-44     	; 0x1856 <vfprintf+0x3d0>
    1882:	86 2d       	mov	r24, r6
    1884:	f2 cf       	rjmp	.-28     	; 0x186a <vfprintf+0x3e4>
    1886:	85 e6       	ldi	r24, 0x65	; 101
    1888:	90 e0       	ldi	r25, 0x00	; 0
    188a:	b7 01       	movw	r22, r14
    188c:	6b d2       	rcall	.+1238   	; 0x1d64 <fputc>
    188e:	d7 fc       	sbrc	r13, 7
    1890:	05 c0       	rjmp	.+10     	; 0x189c <vfprintf+0x416>
    1892:	c1 14       	cp	r12, r1
    1894:	d1 04       	cpc	r13, r1
    1896:	39 f4       	brne	.+14     	; 0x18a6 <vfprintf+0x420>
    1898:	04 ff       	sbrs	r16, 4
    189a:	05 c0       	rjmp	.+10     	; 0x18a6 <vfprintf+0x420>
    189c:	d1 94       	neg	r13
    189e:	c1 94       	neg	r12
    18a0:	d1 08       	sbc	r13, r1
    18a2:	8d e2       	ldi	r24, 0x2D	; 45
    18a4:	01 c0       	rjmp	.+2      	; 0x18a8 <vfprintf+0x422>
    18a6:	8b e2       	ldi	r24, 0x2B	; 43
    18a8:	b7 01       	movw	r22, r14
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	5b d2       	rcall	.+1206   	; 0x1d64 <fputc>
    18ae:	80 e3       	ldi	r24, 0x30	; 48
    18b0:	6a e0       	ldi	r22, 0x0A	; 10
    18b2:	c6 16       	cp	r12, r22
    18b4:	d1 04       	cpc	r13, r1
    18b6:	2c f0       	brlt	.+10     	; 0x18c2 <vfprintf+0x43c>
    18b8:	8f 5f       	subi	r24, 0xFF	; 255
    18ba:	fa e0       	ldi	r31, 0x0A	; 10
    18bc:	cf 1a       	sub	r12, r31
    18be:	d1 08       	sbc	r13, r1
    18c0:	f7 cf       	rjmp	.-18     	; 0x18b0 <vfprintf+0x42a>
    18c2:	b7 01       	movw	r22, r14
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	4e d2       	rcall	.+1180   	; 0x1d64 <fputc>
    18c8:	b7 01       	movw	r22, r14
    18ca:	c6 01       	movw	r24, r12
    18cc:	c0 96       	adiw	r24, 0x30	; 48
    18ce:	4a d2       	rcall	.+1172   	; 0x1d64 <fputc>
    18d0:	36 c1       	rjmp	.+620    	; 0x1b3e <vfprintf+0x6b8>
    18d2:	83 36       	cpi	r24, 0x63	; 99
    18d4:	31 f0       	breq	.+12     	; 0x18e2 <vfprintf+0x45c>
    18d6:	83 37       	cpi	r24, 0x73	; 115
    18d8:	79 f0       	breq	.+30     	; 0x18f8 <vfprintf+0x472>
    18da:	83 35       	cpi	r24, 0x53	; 83
    18dc:	09 f0       	breq	.+2      	; 0x18e0 <vfprintf+0x45a>
    18de:	54 c0       	rjmp	.+168    	; 0x1988 <vfprintf+0x502>
    18e0:	20 c0       	rjmp	.+64     	; 0x1922 <vfprintf+0x49c>
    18e2:	56 01       	movw	r10, r12
    18e4:	72 e0       	ldi	r23, 0x02	; 2
    18e6:	a7 0e       	add	r10, r23
    18e8:	b1 1c       	adc	r11, r1
    18ea:	f6 01       	movw	r30, r12
    18ec:	80 81       	ld	r24, Z
    18ee:	89 83       	std	Y+1, r24	; 0x01
    18f0:	01 e0       	ldi	r16, 0x01	; 1
    18f2:	10 e0       	ldi	r17, 0x00	; 0
    18f4:	64 01       	movw	r12, r8
    18f6:	13 c0       	rjmp	.+38     	; 0x191e <vfprintf+0x498>
    18f8:	56 01       	movw	r10, r12
    18fa:	f2 e0       	ldi	r31, 0x02	; 2
    18fc:	af 0e       	add	r10, r31
    18fe:	b1 1c       	adc	r11, r1
    1900:	f6 01       	movw	r30, r12
    1902:	c0 80       	ld	r12, Z
    1904:	d1 80       	ldd	r13, Z+1	; 0x01
    1906:	26 ff       	sbrs	r18, 6
    1908:	03 c0       	rjmp	.+6      	; 0x1910 <vfprintf+0x48a>
    190a:	61 2f       	mov	r22, r17
    190c:	70 e0       	ldi	r23, 0x00	; 0
    190e:	02 c0       	rjmp	.+4      	; 0x1914 <vfprintf+0x48e>
    1910:	6f ef       	ldi	r22, 0xFF	; 255
    1912:	7f ef       	ldi	r23, 0xFF	; 255
    1914:	c6 01       	movw	r24, r12
    1916:	2b 8b       	std	Y+19, r18	; 0x13
    1918:	1a d2       	rcall	.+1076   	; 0x1d4e <strnlen>
    191a:	8c 01       	movw	r16, r24
    191c:	2b 89       	ldd	r18, Y+19	; 0x13
    191e:	2f 77       	andi	r18, 0x7F	; 127
    1920:	14 c0       	rjmp	.+40     	; 0x194a <vfprintf+0x4c4>
    1922:	56 01       	movw	r10, r12
    1924:	f2 e0       	ldi	r31, 0x02	; 2
    1926:	af 0e       	add	r10, r31
    1928:	b1 1c       	adc	r11, r1
    192a:	f6 01       	movw	r30, r12
    192c:	c0 80       	ld	r12, Z
    192e:	d1 80       	ldd	r13, Z+1	; 0x01
    1930:	26 ff       	sbrs	r18, 6
    1932:	03 c0       	rjmp	.+6      	; 0x193a <vfprintf+0x4b4>
    1934:	61 2f       	mov	r22, r17
    1936:	70 e0       	ldi	r23, 0x00	; 0
    1938:	02 c0       	rjmp	.+4      	; 0x193e <vfprintf+0x4b8>
    193a:	6f ef       	ldi	r22, 0xFF	; 255
    193c:	7f ef       	ldi	r23, 0xFF	; 255
    193e:	c6 01       	movw	r24, r12
    1940:	2b 8b       	std	Y+19, r18	; 0x13
    1942:	fa d1       	rcall	.+1012   	; 0x1d38 <strnlen_P>
    1944:	8c 01       	movw	r16, r24
    1946:	2b 89       	ldd	r18, Y+19	; 0x13
    1948:	20 68       	ori	r18, 0x80	; 128
    194a:	72 2e       	mov	r7, r18
    194c:	23 fd       	sbrc	r18, 3
    194e:	18 c0       	rjmp	.+48     	; 0x1980 <vfprintf+0x4fa>
    1950:	85 2d       	mov	r24, r5
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	08 17       	cp	r16, r24
    1956:	19 07       	cpc	r17, r25
    1958:	98 f4       	brcc	.+38     	; 0x1980 <vfprintf+0x4fa>
    195a:	b7 01       	movw	r22, r14
    195c:	80 e2       	ldi	r24, 0x20	; 32
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	01 d2       	rcall	.+1026   	; 0x1d64 <fputc>
    1962:	5a 94       	dec	r5
    1964:	f5 cf       	rjmp	.-22     	; 0x1950 <vfprintf+0x4ca>
    1966:	f6 01       	movw	r30, r12
    1968:	77 fc       	sbrc	r7, 7
    196a:	85 91       	lpm	r24, Z+
    196c:	77 fe       	sbrs	r7, 7
    196e:	81 91       	ld	r24, Z+
    1970:	6f 01       	movw	r12, r30
    1972:	b7 01       	movw	r22, r14
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	f6 d1       	rcall	.+1004   	; 0x1d64 <fputc>
    1978:	51 10       	cpse	r5, r1
    197a:	5a 94       	dec	r5
    197c:	01 50       	subi	r16, 0x01	; 1
    197e:	11 09       	sbc	r17, r1
    1980:	01 15       	cp	r16, r1
    1982:	11 05       	cpc	r17, r1
    1984:	81 f7       	brne	.-32     	; 0x1966 <vfprintf+0x4e0>
    1986:	db c0       	rjmp	.+438    	; 0x1b3e <vfprintf+0x6b8>
    1988:	84 36       	cpi	r24, 0x64	; 100
    198a:	11 f0       	breq	.+4      	; 0x1990 <vfprintf+0x50a>
    198c:	89 36       	cpi	r24, 0x69	; 105
    198e:	49 f5       	brne	.+82     	; 0x19e2 <vfprintf+0x55c>
    1990:	56 01       	movw	r10, r12
    1992:	27 ff       	sbrs	r18, 7
    1994:	09 c0       	rjmp	.+18     	; 0x19a8 <vfprintf+0x522>
    1996:	f4 e0       	ldi	r31, 0x04	; 4
    1998:	af 0e       	add	r10, r31
    199a:	b1 1c       	adc	r11, r1
    199c:	f6 01       	movw	r30, r12
    199e:	60 81       	ld	r22, Z
    19a0:	71 81       	ldd	r23, Z+1	; 0x01
    19a2:	82 81       	ldd	r24, Z+2	; 0x02
    19a4:	93 81       	ldd	r25, Z+3	; 0x03
    19a6:	0a c0       	rjmp	.+20     	; 0x19bc <vfprintf+0x536>
    19a8:	f2 e0       	ldi	r31, 0x02	; 2
    19aa:	af 0e       	add	r10, r31
    19ac:	b1 1c       	adc	r11, r1
    19ae:	f6 01       	movw	r30, r12
    19b0:	60 81       	ld	r22, Z
    19b2:	71 81       	ldd	r23, Z+1	; 0x01
    19b4:	88 27       	eor	r24, r24
    19b6:	77 fd       	sbrc	r23, 7
    19b8:	80 95       	com	r24
    19ba:	98 2f       	mov	r25, r24
    19bc:	02 2f       	mov	r16, r18
    19be:	0f 76       	andi	r16, 0x6F	; 111
    19c0:	97 ff       	sbrs	r25, 7
    19c2:	08 c0       	rjmp	.+16     	; 0x19d4 <vfprintf+0x54e>
    19c4:	90 95       	com	r25
    19c6:	80 95       	com	r24
    19c8:	70 95       	com	r23
    19ca:	61 95       	neg	r22
    19cc:	7f 4f       	sbci	r23, 0xFF	; 255
    19ce:	8f 4f       	sbci	r24, 0xFF	; 255
    19d0:	9f 4f       	sbci	r25, 0xFF	; 255
    19d2:	00 68       	ori	r16, 0x80	; 128
    19d4:	2a e0       	ldi	r18, 0x0A	; 10
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	a4 01       	movw	r20, r8
    19da:	07 d2       	rcall	.+1038   	; 0x1dea <__ultoa_invert>
    19dc:	c8 2e       	mov	r12, r24
    19de:	c8 18       	sub	r12, r8
    19e0:	3d c0       	rjmp	.+122    	; 0x1a5c <vfprintf+0x5d6>
    19e2:	02 2f       	mov	r16, r18
    19e4:	85 37       	cpi	r24, 0x75	; 117
    19e6:	21 f4       	brne	.+8      	; 0x19f0 <vfprintf+0x56a>
    19e8:	0f 7e       	andi	r16, 0xEF	; 239
    19ea:	2a e0       	ldi	r18, 0x0A	; 10
    19ec:	30 e0       	ldi	r19, 0x00	; 0
    19ee:	1d c0       	rjmp	.+58     	; 0x1a2a <vfprintf+0x5a4>
    19f0:	09 7f       	andi	r16, 0xF9	; 249
    19f2:	8f 36       	cpi	r24, 0x6F	; 111
    19f4:	91 f0       	breq	.+36     	; 0x1a1a <vfprintf+0x594>
    19f6:	18 f4       	brcc	.+6      	; 0x19fe <vfprintf+0x578>
    19f8:	88 35       	cpi	r24, 0x58	; 88
    19fa:	59 f0       	breq	.+22     	; 0x1a12 <vfprintf+0x58c>
    19fc:	a9 c0       	rjmp	.+338    	; 0x1b50 <vfprintf+0x6ca>
    19fe:	80 37       	cpi	r24, 0x70	; 112
    1a00:	19 f0       	breq	.+6      	; 0x1a08 <vfprintf+0x582>
    1a02:	88 37       	cpi	r24, 0x78	; 120
    1a04:	11 f0       	breq	.+4      	; 0x1a0a <vfprintf+0x584>
    1a06:	a4 c0       	rjmp	.+328    	; 0x1b50 <vfprintf+0x6ca>
    1a08:	00 61       	ori	r16, 0x10	; 16
    1a0a:	04 ff       	sbrs	r16, 4
    1a0c:	09 c0       	rjmp	.+18     	; 0x1a20 <vfprintf+0x59a>
    1a0e:	04 60       	ori	r16, 0x04	; 4
    1a10:	07 c0       	rjmp	.+14     	; 0x1a20 <vfprintf+0x59a>
    1a12:	24 ff       	sbrs	r18, 4
    1a14:	08 c0       	rjmp	.+16     	; 0x1a26 <vfprintf+0x5a0>
    1a16:	06 60       	ori	r16, 0x06	; 6
    1a18:	06 c0       	rjmp	.+12     	; 0x1a26 <vfprintf+0x5a0>
    1a1a:	28 e0       	ldi	r18, 0x08	; 8
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	05 c0       	rjmp	.+10     	; 0x1a2a <vfprintf+0x5a4>
    1a20:	20 e1       	ldi	r18, 0x10	; 16
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	02 c0       	rjmp	.+4      	; 0x1a2a <vfprintf+0x5a4>
    1a26:	20 e1       	ldi	r18, 0x10	; 16
    1a28:	32 e0       	ldi	r19, 0x02	; 2
    1a2a:	56 01       	movw	r10, r12
    1a2c:	07 ff       	sbrs	r16, 7
    1a2e:	09 c0       	rjmp	.+18     	; 0x1a42 <vfprintf+0x5bc>
    1a30:	f4 e0       	ldi	r31, 0x04	; 4
    1a32:	af 0e       	add	r10, r31
    1a34:	b1 1c       	adc	r11, r1
    1a36:	f6 01       	movw	r30, r12
    1a38:	60 81       	ld	r22, Z
    1a3a:	71 81       	ldd	r23, Z+1	; 0x01
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	93 81       	ldd	r25, Z+3	; 0x03
    1a40:	08 c0       	rjmp	.+16     	; 0x1a52 <vfprintf+0x5cc>
    1a42:	f2 e0       	ldi	r31, 0x02	; 2
    1a44:	af 0e       	add	r10, r31
    1a46:	b1 1c       	adc	r11, r1
    1a48:	f6 01       	movw	r30, r12
    1a4a:	60 81       	ld	r22, Z
    1a4c:	71 81       	ldd	r23, Z+1	; 0x01
    1a4e:	80 e0       	ldi	r24, 0x00	; 0
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	a4 01       	movw	r20, r8
    1a54:	ca d1       	rcall	.+916    	; 0x1dea <__ultoa_invert>
    1a56:	c8 2e       	mov	r12, r24
    1a58:	c8 18       	sub	r12, r8
    1a5a:	0f 77       	andi	r16, 0x7F	; 127
    1a5c:	06 ff       	sbrs	r16, 6
    1a5e:	0b c0       	rjmp	.+22     	; 0x1a76 <vfprintf+0x5f0>
    1a60:	20 2f       	mov	r18, r16
    1a62:	2e 7f       	andi	r18, 0xFE	; 254
    1a64:	c1 16       	cp	r12, r17
    1a66:	50 f4       	brcc	.+20     	; 0x1a7c <vfprintf+0x5f6>
    1a68:	04 ff       	sbrs	r16, 4
    1a6a:	0a c0       	rjmp	.+20     	; 0x1a80 <vfprintf+0x5fa>
    1a6c:	02 fd       	sbrc	r16, 2
    1a6e:	08 c0       	rjmp	.+16     	; 0x1a80 <vfprintf+0x5fa>
    1a70:	20 2f       	mov	r18, r16
    1a72:	2e 7e       	andi	r18, 0xEE	; 238
    1a74:	05 c0       	rjmp	.+10     	; 0x1a80 <vfprintf+0x5fa>
    1a76:	dc 2c       	mov	r13, r12
    1a78:	20 2f       	mov	r18, r16
    1a7a:	03 c0       	rjmp	.+6      	; 0x1a82 <vfprintf+0x5fc>
    1a7c:	dc 2c       	mov	r13, r12
    1a7e:	01 c0       	rjmp	.+2      	; 0x1a82 <vfprintf+0x5fc>
    1a80:	d1 2e       	mov	r13, r17
    1a82:	24 ff       	sbrs	r18, 4
    1a84:	0d c0       	rjmp	.+26     	; 0x1aa0 <vfprintf+0x61a>
    1a86:	fe 01       	movw	r30, r28
    1a88:	ec 0d       	add	r30, r12
    1a8a:	f1 1d       	adc	r31, r1
    1a8c:	80 81       	ld	r24, Z
    1a8e:	80 33       	cpi	r24, 0x30	; 48
    1a90:	11 f4       	brne	.+4      	; 0x1a96 <vfprintf+0x610>
    1a92:	29 7e       	andi	r18, 0xE9	; 233
    1a94:	09 c0       	rjmp	.+18     	; 0x1aa8 <vfprintf+0x622>
    1a96:	22 ff       	sbrs	r18, 2
    1a98:	06 c0       	rjmp	.+12     	; 0x1aa6 <vfprintf+0x620>
    1a9a:	d3 94       	inc	r13
    1a9c:	d3 94       	inc	r13
    1a9e:	04 c0       	rjmp	.+8      	; 0x1aa8 <vfprintf+0x622>
    1aa0:	82 2f       	mov	r24, r18
    1aa2:	86 78       	andi	r24, 0x86	; 134
    1aa4:	09 f0       	breq	.+2      	; 0x1aa8 <vfprintf+0x622>
    1aa6:	d3 94       	inc	r13
    1aa8:	23 fd       	sbrc	r18, 3
    1aaa:	12 c0       	rjmp	.+36     	; 0x1ad0 <vfprintf+0x64a>
    1aac:	20 ff       	sbrs	r18, 0
    1aae:	06 c0       	rjmp	.+12     	; 0x1abc <vfprintf+0x636>
    1ab0:	1c 2d       	mov	r17, r12
    1ab2:	d5 14       	cp	r13, r5
    1ab4:	18 f4       	brcc	.+6      	; 0x1abc <vfprintf+0x636>
    1ab6:	15 0d       	add	r17, r5
    1ab8:	1d 19       	sub	r17, r13
    1aba:	d5 2c       	mov	r13, r5
    1abc:	d5 14       	cp	r13, r5
    1abe:	60 f4       	brcc	.+24     	; 0x1ad8 <vfprintf+0x652>
    1ac0:	b7 01       	movw	r22, r14
    1ac2:	80 e2       	ldi	r24, 0x20	; 32
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	2b 8b       	std	Y+19, r18	; 0x13
    1ac8:	4d d1       	rcall	.+666    	; 0x1d64 <fputc>
    1aca:	d3 94       	inc	r13
    1acc:	2b 89       	ldd	r18, Y+19	; 0x13
    1ace:	f6 cf       	rjmp	.-20     	; 0x1abc <vfprintf+0x636>
    1ad0:	d5 14       	cp	r13, r5
    1ad2:	10 f4       	brcc	.+4      	; 0x1ad8 <vfprintf+0x652>
    1ad4:	5d 18       	sub	r5, r13
    1ad6:	01 c0       	rjmp	.+2      	; 0x1ada <vfprintf+0x654>
    1ad8:	51 2c       	mov	r5, r1
    1ada:	24 ff       	sbrs	r18, 4
    1adc:	11 c0       	rjmp	.+34     	; 0x1b00 <vfprintf+0x67a>
    1ade:	b7 01       	movw	r22, r14
    1ae0:	80 e3       	ldi	r24, 0x30	; 48
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	2b 8b       	std	Y+19, r18	; 0x13
    1ae6:	3e d1       	rcall	.+636    	; 0x1d64 <fputc>
    1ae8:	2b 89       	ldd	r18, Y+19	; 0x13
    1aea:	22 ff       	sbrs	r18, 2
    1aec:	16 c0       	rjmp	.+44     	; 0x1b1a <vfprintf+0x694>
    1aee:	21 ff       	sbrs	r18, 1
    1af0:	03 c0       	rjmp	.+6      	; 0x1af8 <vfprintf+0x672>
    1af2:	88 e5       	ldi	r24, 0x58	; 88
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	02 c0       	rjmp	.+4      	; 0x1afc <vfprintf+0x676>
    1af8:	88 e7       	ldi	r24, 0x78	; 120
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	b7 01       	movw	r22, r14
    1afe:	0c c0       	rjmp	.+24     	; 0x1b18 <vfprintf+0x692>
    1b00:	82 2f       	mov	r24, r18
    1b02:	86 78       	andi	r24, 0x86	; 134
    1b04:	51 f0       	breq	.+20     	; 0x1b1a <vfprintf+0x694>
    1b06:	21 fd       	sbrc	r18, 1
    1b08:	02 c0       	rjmp	.+4      	; 0x1b0e <vfprintf+0x688>
    1b0a:	80 e2       	ldi	r24, 0x20	; 32
    1b0c:	01 c0       	rjmp	.+2      	; 0x1b10 <vfprintf+0x68a>
    1b0e:	8b e2       	ldi	r24, 0x2B	; 43
    1b10:	27 fd       	sbrc	r18, 7
    1b12:	8d e2       	ldi	r24, 0x2D	; 45
    1b14:	b7 01       	movw	r22, r14
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	25 d1       	rcall	.+586    	; 0x1d64 <fputc>
    1b1a:	c1 16       	cp	r12, r17
    1b1c:	30 f4       	brcc	.+12     	; 0x1b2a <vfprintf+0x6a4>
    1b1e:	b7 01       	movw	r22, r14
    1b20:	80 e3       	ldi	r24, 0x30	; 48
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	1f d1       	rcall	.+574    	; 0x1d64 <fputc>
    1b26:	11 50       	subi	r17, 0x01	; 1
    1b28:	f8 cf       	rjmp	.-16     	; 0x1b1a <vfprintf+0x694>
    1b2a:	ca 94       	dec	r12
    1b2c:	f4 01       	movw	r30, r8
    1b2e:	ec 0d       	add	r30, r12
    1b30:	f1 1d       	adc	r31, r1
    1b32:	80 81       	ld	r24, Z
    1b34:	b7 01       	movw	r22, r14
    1b36:	90 e0       	ldi	r25, 0x00	; 0
    1b38:	15 d1       	rcall	.+554    	; 0x1d64 <fputc>
    1b3a:	c1 10       	cpse	r12, r1
    1b3c:	f6 cf       	rjmp	.-20     	; 0x1b2a <vfprintf+0x6a4>
    1b3e:	55 20       	and	r5, r5
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <vfprintf+0x6be>
    1b42:	dd cc       	rjmp	.-1606   	; 0x14fe <vfprintf+0x78>
    1b44:	b7 01       	movw	r22, r14
    1b46:	80 e2       	ldi	r24, 0x20	; 32
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	0c d1       	rcall	.+536    	; 0x1d64 <fputc>
    1b4c:	5a 94       	dec	r5
    1b4e:	f7 cf       	rjmp	.-18     	; 0x1b3e <vfprintf+0x6b8>
    1b50:	f7 01       	movw	r30, r14
    1b52:	86 81       	ldd	r24, Z+6	; 0x06
    1b54:	97 81       	ldd	r25, Z+7	; 0x07
    1b56:	02 c0       	rjmp	.+4      	; 0x1b5c <vfprintf+0x6d6>
    1b58:	8f ef       	ldi	r24, 0xFF	; 255
    1b5a:	9f ef       	ldi	r25, 0xFF	; 255
    1b5c:	63 96       	adiw	r28, 0x13	; 19
    1b5e:	cd bf       	out	0x3d, r28	; 61
    1b60:	de bf       	out	0x3e, r29	; 62
    1b62:	df 91       	pop	r29
    1b64:	cf 91       	pop	r28
    1b66:	1f 91       	pop	r17
    1b68:	0f 91       	pop	r16
    1b6a:	ff 90       	pop	r15
    1b6c:	ef 90       	pop	r14
    1b6e:	df 90       	pop	r13
    1b70:	cf 90       	pop	r12
    1b72:	bf 90       	pop	r11
    1b74:	af 90       	pop	r10
    1b76:	9f 90       	pop	r9
    1b78:	8f 90       	pop	r8
    1b7a:	7f 90       	pop	r7
    1b7c:	6f 90       	pop	r6
    1b7e:	5f 90       	pop	r5
    1b80:	4f 90       	pop	r4
    1b82:	3f 90       	pop	r3
    1b84:	2f 90       	pop	r2
    1b86:	08 95       	ret

00001b88 <__ftoa_engine>:
    1b88:	28 30       	cpi	r18, 0x08	; 8
    1b8a:	08 f0       	brcs	.+2      	; 0x1b8e <__ftoa_engine+0x6>
    1b8c:	27 e0       	ldi	r18, 0x07	; 7
    1b8e:	33 27       	eor	r19, r19
    1b90:	da 01       	movw	r26, r20
    1b92:	99 0f       	add	r25, r25
    1b94:	31 1d       	adc	r19, r1
    1b96:	87 fd       	sbrc	r24, 7
    1b98:	91 60       	ori	r25, 0x01	; 1
    1b9a:	00 96       	adiw	r24, 0x00	; 0
    1b9c:	61 05       	cpc	r22, r1
    1b9e:	71 05       	cpc	r23, r1
    1ba0:	39 f4       	brne	.+14     	; 0x1bb0 <__ftoa_engine+0x28>
    1ba2:	32 60       	ori	r19, 0x02	; 2
    1ba4:	2e 5f       	subi	r18, 0xFE	; 254
    1ba6:	3d 93       	st	X+, r19
    1ba8:	30 e3       	ldi	r19, 0x30	; 48
    1baa:	2a 95       	dec	r18
    1bac:	e1 f7       	brne	.-8      	; 0x1ba6 <__ftoa_engine+0x1e>
    1bae:	08 95       	ret
    1bb0:	9f 3f       	cpi	r25, 0xFF	; 255
    1bb2:	30 f0       	brcs	.+12     	; 0x1bc0 <__ftoa_engine+0x38>
    1bb4:	80 38       	cpi	r24, 0x80	; 128
    1bb6:	71 05       	cpc	r23, r1
    1bb8:	61 05       	cpc	r22, r1
    1bba:	09 f0       	breq	.+2      	; 0x1bbe <__ftoa_engine+0x36>
    1bbc:	3c 5f       	subi	r19, 0xFC	; 252
    1bbe:	3c 5f       	subi	r19, 0xFC	; 252
    1bc0:	3d 93       	st	X+, r19
    1bc2:	91 30       	cpi	r25, 0x01	; 1
    1bc4:	08 f0       	brcs	.+2      	; 0x1bc8 <__ftoa_engine+0x40>
    1bc6:	80 68       	ori	r24, 0x80	; 128
    1bc8:	91 1d       	adc	r25, r1
    1bca:	df 93       	push	r29
    1bcc:	cf 93       	push	r28
    1bce:	1f 93       	push	r17
    1bd0:	0f 93       	push	r16
    1bd2:	ff 92       	push	r15
    1bd4:	ef 92       	push	r14
    1bd6:	19 2f       	mov	r17, r25
    1bd8:	98 7f       	andi	r25, 0xF8	; 248
    1bda:	96 95       	lsr	r25
    1bdc:	e9 2f       	mov	r30, r25
    1bde:	96 95       	lsr	r25
    1be0:	96 95       	lsr	r25
    1be2:	e9 0f       	add	r30, r25
    1be4:	ff 27       	eor	r31, r31
    1be6:	e4 58       	subi	r30, 0x84	; 132
    1be8:	fd 4f       	sbci	r31, 0xFD	; 253
    1bea:	99 27       	eor	r25, r25
    1bec:	33 27       	eor	r19, r19
    1bee:	ee 24       	eor	r14, r14
    1bf0:	ff 24       	eor	r15, r15
    1bf2:	a7 01       	movw	r20, r14
    1bf4:	e7 01       	movw	r28, r14
    1bf6:	05 90       	lpm	r0, Z+
    1bf8:	08 94       	sec
    1bfa:	07 94       	ror	r0
    1bfc:	28 f4       	brcc	.+10     	; 0x1c08 <__ftoa_engine+0x80>
    1bfe:	36 0f       	add	r19, r22
    1c00:	e7 1e       	adc	r14, r23
    1c02:	f8 1e       	adc	r15, r24
    1c04:	49 1f       	adc	r20, r25
    1c06:	51 1d       	adc	r21, r1
    1c08:	66 0f       	add	r22, r22
    1c0a:	77 1f       	adc	r23, r23
    1c0c:	88 1f       	adc	r24, r24
    1c0e:	99 1f       	adc	r25, r25
    1c10:	06 94       	lsr	r0
    1c12:	a1 f7       	brne	.-24     	; 0x1bfc <__ftoa_engine+0x74>
    1c14:	05 90       	lpm	r0, Z+
    1c16:	07 94       	ror	r0
    1c18:	28 f4       	brcc	.+10     	; 0x1c24 <__ftoa_engine+0x9c>
    1c1a:	e7 0e       	add	r14, r23
    1c1c:	f8 1e       	adc	r15, r24
    1c1e:	49 1f       	adc	r20, r25
    1c20:	56 1f       	adc	r21, r22
    1c22:	c1 1d       	adc	r28, r1
    1c24:	77 0f       	add	r23, r23
    1c26:	88 1f       	adc	r24, r24
    1c28:	99 1f       	adc	r25, r25
    1c2a:	66 1f       	adc	r22, r22
    1c2c:	06 94       	lsr	r0
    1c2e:	a1 f7       	brne	.-24     	; 0x1c18 <__ftoa_engine+0x90>
    1c30:	05 90       	lpm	r0, Z+
    1c32:	07 94       	ror	r0
    1c34:	28 f4       	brcc	.+10     	; 0x1c40 <__ftoa_engine+0xb8>
    1c36:	f8 0e       	add	r15, r24
    1c38:	49 1f       	adc	r20, r25
    1c3a:	56 1f       	adc	r21, r22
    1c3c:	c7 1f       	adc	r28, r23
    1c3e:	d1 1d       	adc	r29, r1
    1c40:	88 0f       	add	r24, r24
    1c42:	99 1f       	adc	r25, r25
    1c44:	66 1f       	adc	r22, r22
    1c46:	77 1f       	adc	r23, r23
    1c48:	06 94       	lsr	r0
    1c4a:	a1 f7       	brne	.-24     	; 0x1c34 <__ftoa_engine+0xac>
    1c4c:	05 90       	lpm	r0, Z+
    1c4e:	07 94       	ror	r0
    1c50:	20 f4       	brcc	.+8      	; 0x1c5a <__ftoa_engine+0xd2>
    1c52:	49 0f       	add	r20, r25
    1c54:	56 1f       	adc	r21, r22
    1c56:	c7 1f       	adc	r28, r23
    1c58:	d8 1f       	adc	r29, r24
    1c5a:	99 0f       	add	r25, r25
    1c5c:	66 1f       	adc	r22, r22
    1c5e:	77 1f       	adc	r23, r23
    1c60:	88 1f       	adc	r24, r24
    1c62:	06 94       	lsr	r0
    1c64:	a9 f7       	brne	.-22     	; 0x1c50 <__ftoa_engine+0xc8>
    1c66:	84 91       	lpm	r24, Z
    1c68:	10 95       	com	r17
    1c6a:	17 70       	andi	r17, 0x07	; 7
    1c6c:	41 f0       	breq	.+16     	; 0x1c7e <__ftoa_engine+0xf6>
    1c6e:	d6 95       	lsr	r29
    1c70:	c7 95       	ror	r28
    1c72:	57 95       	ror	r21
    1c74:	47 95       	ror	r20
    1c76:	f7 94       	ror	r15
    1c78:	e7 94       	ror	r14
    1c7a:	1a 95       	dec	r17
    1c7c:	c1 f7       	brne	.-16     	; 0x1c6e <__ftoa_engine+0xe6>
    1c7e:	e2 e2       	ldi	r30, 0x22	; 34
    1c80:	f2 e0       	ldi	r31, 0x02	; 2
    1c82:	68 94       	set
    1c84:	15 90       	lpm	r1, Z+
    1c86:	15 91       	lpm	r17, Z+
    1c88:	35 91       	lpm	r19, Z+
    1c8a:	65 91       	lpm	r22, Z+
    1c8c:	95 91       	lpm	r25, Z+
    1c8e:	05 90       	lpm	r0, Z+
    1c90:	7f e2       	ldi	r23, 0x2F	; 47
    1c92:	73 95       	inc	r23
    1c94:	e1 18       	sub	r14, r1
    1c96:	f1 0a       	sbc	r15, r17
    1c98:	43 0b       	sbc	r20, r19
    1c9a:	56 0b       	sbc	r21, r22
    1c9c:	c9 0b       	sbc	r28, r25
    1c9e:	d0 09       	sbc	r29, r0
    1ca0:	c0 f7       	brcc	.-16     	; 0x1c92 <__ftoa_engine+0x10a>
    1ca2:	e1 0c       	add	r14, r1
    1ca4:	f1 1e       	adc	r15, r17
    1ca6:	43 1f       	adc	r20, r19
    1ca8:	56 1f       	adc	r21, r22
    1caa:	c9 1f       	adc	r28, r25
    1cac:	d0 1d       	adc	r29, r0
    1cae:	7e f4       	brtc	.+30     	; 0x1cce <__ftoa_engine+0x146>
    1cb0:	70 33       	cpi	r23, 0x30	; 48
    1cb2:	11 f4       	brne	.+4      	; 0x1cb8 <__ftoa_engine+0x130>
    1cb4:	8a 95       	dec	r24
    1cb6:	e6 cf       	rjmp	.-52     	; 0x1c84 <__ftoa_engine+0xfc>
    1cb8:	e8 94       	clt
    1cba:	01 50       	subi	r16, 0x01	; 1
    1cbc:	30 f0       	brcs	.+12     	; 0x1cca <__ftoa_engine+0x142>
    1cbe:	08 0f       	add	r16, r24
    1cc0:	0a f4       	brpl	.+2      	; 0x1cc4 <__ftoa_engine+0x13c>
    1cc2:	00 27       	eor	r16, r16
    1cc4:	02 17       	cp	r16, r18
    1cc6:	08 f4       	brcc	.+2      	; 0x1cca <__ftoa_engine+0x142>
    1cc8:	20 2f       	mov	r18, r16
    1cca:	23 95       	inc	r18
    1ccc:	02 2f       	mov	r16, r18
    1cce:	7a 33       	cpi	r23, 0x3A	; 58
    1cd0:	28 f0       	brcs	.+10     	; 0x1cdc <__ftoa_engine+0x154>
    1cd2:	79 e3       	ldi	r23, 0x39	; 57
    1cd4:	7d 93       	st	X+, r23
    1cd6:	2a 95       	dec	r18
    1cd8:	e9 f7       	brne	.-6      	; 0x1cd4 <__ftoa_engine+0x14c>
    1cda:	10 c0       	rjmp	.+32     	; 0x1cfc <__ftoa_engine+0x174>
    1cdc:	7d 93       	st	X+, r23
    1cde:	2a 95       	dec	r18
    1ce0:	89 f6       	brne	.-94     	; 0x1c84 <__ftoa_engine+0xfc>
    1ce2:	06 94       	lsr	r0
    1ce4:	97 95       	ror	r25
    1ce6:	67 95       	ror	r22
    1ce8:	37 95       	ror	r19
    1cea:	17 95       	ror	r17
    1cec:	17 94       	ror	r1
    1cee:	e1 18       	sub	r14, r1
    1cf0:	f1 0a       	sbc	r15, r17
    1cf2:	43 0b       	sbc	r20, r19
    1cf4:	56 0b       	sbc	r21, r22
    1cf6:	c9 0b       	sbc	r28, r25
    1cf8:	d0 09       	sbc	r29, r0
    1cfa:	98 f0       	brcs	.+38     	; 0x1d22 <__ftoa_engine+0x19a>
    1cfc:	23 95       	inc	r18
    1cfe:	7e 91       	ld	r23, -X
    1d00:	73 95       	inc	r23
    1d02:	7a 33       	cpi	r23, 0x3A	; 58
    1d04:	08 f0       	brcs	.+2      	; 0x1d08 <__ftoa_engine+0x180>
    1d06:	70 e3       	ldi	r23, 0x30	; 48
    1d08:	7c 93       	st	X, r23
    1d0a:	20 13       	cpse	r18, r16
    1d0c:	b8 f7       	brcc	.-18     	; 0x1cfc <__ftoa_engine+0x174>
    1d0e:	7e 91       	ld	r23, -X
    1d10:	70 61       	ori	r23, 0x10	; 16
    1d12:	7d 93       	st	X+, r23
    1d14:	30 f0       	brcs	.+12     	; 0x1d22 <__ftoa_engine+0x19a>
    1d16:	83 95       	inc	r24
    1d18:	71 e3       	ldi	r23, 0x31	; 49
    1d1a:	7d 93       	st	X+, r23
    1d1c:	70 e3       	ldi	r23, 0x30	; 48
    1d1e:	2a 95       	dec	r18
    1d20:	e1 f7       	brne	.-8      	; 0x1d1a <__ftoa_engine+0x192>
    1d22:	11 24       	eor	r1, r1
    1d24:	ef 90       	pop	r14
    1d26:	ff 90       	pop	r15
    1d28:	0f 91       	pop	r16
    1d2a:	1f 91       	pop	r17
    1d2c:	cf 91       	pop	r28
    1d2e:	df 91       	pop	r29
    1d30:	99 27       	eor	r25, r25
    1d32:	87 fd       	sbrc	r24, 7
    1d34:	90 95       	com	r25
    1d36:	08 95       	ret

00001d38 <strnlen_P>:
    1d38:	fc 01       	movw	r30, r24
    1d3a:	05 90       	lpm	r0, Z+
    1d3c:	61 50       	subi	r22, 0x01	; 1
    1d3e:	70 40       	sbci	r23, 0x00	; 0
    1d40:	01 10       	cpse	r0, r1
    1d42:	d8 f7       	brcc	.-10     	; 0x1d3a <strnlen_P+0x2>
    1d44:	80 95       	com	r24
    1d46:	90 95       	com	r25
    1d48:	8e 0f       	add	r24, r30
    1d4a:	9f 1f       	adc	r25, r31
    1d4c:	08 95       	ret

00001d4e <strnlen>:
    1d4e:	fc 01       	movw	r30, r24
    1d50:	61 50       	subi	r22, 0x01	; 1
    1d52:	70 40       	sbci	r23, 0x00	; 0
    1d54:	01 90       	ld	r0, Z+
    1d56:	01 10       	cpse	r0, r1
    1d58:	d8 f7       	brcc	.-10     	; 0x1d50 <strnlen+0x2>
    1d5a:	80 95       	com	r24
    1d5c:	90 95       	com	r25
    1d5e:	8e 0f       	add	r24, r30
    1d60:	9f 1f       	adc	r25, r31
    1d62:	08 95       	ret

00001d64 <fputc>:
    1d64:	0f 93       	push	r16
    1d66:	1f 93       	push	r17
    1d68:	cf 93       	push	r28
    1d6a:	df 93       	push	r29
    1d6c:	18 2f       	mov	r17, r24
    1d6e:	09 2f       	mov	r16, r25
    1d70:	eb 01       	movw	r28, r22
    1d72:	8b 81       	ldd	r24, Y+3	; 0x03
    1d74:	81 fd       	sbrc	r24, 1
    1d76:	03 c0       	rjmp	.+6      	; 0x1d7e <fputc+0x1a>
    1d78:	8f ef       	ldi	r24, 0xFF	; 255
    1d7a:	9f ef       	ldi	r25, 0xFF	; 255
    1d7c:	20 c0       	rjmp	.+64     	; 0x1dbe <fputc+0x5a>
    1d7e:	82 ff       	sbrs	r24, 2
    1d80:	10 c0       	rjmp	.+32     	; 0x1da2 <fputc+0x3e>
    1d82:	4e 81       	ldd	r20, Y+6	; 0x06
    1d84:	5f 81       	ldd	r21, Y+7	; 0x07
    1d86:	2c 81       	ldd	r18, Y+4	; 0x04
    1d88:	3d 81       	ldd	r19, Y+5	; 0x05
    1d8a:	42 17       	cp	r20, r18
    1d8c:	53 07       	cpc	r21, r19
    1d8e:	7c f4       	brge	.+30     	; 0x1dae <fputc+0x4a>
    1d90:	e8 81       	ld	r30, Y
    1d92:	f9 81       	ldd	r31, Y+1	; 0x01
    1d94:	9f 01       	movw	r18, r30
    1d96:	2f 5f       	subi	r18, 0xFF	; 255
    1d98:	3f 4f       	sbci	r19, 0xFF	; 255
    1d9a:	28 83       	st	Y, r18
    1d9c:	39 83       	std	Y+1, r19	; 0x01
    1d9e:	10 83       	st	Z, r17
    1da0:	06 c0       	rjmp	.+12     	; 0x1dae <fputc+0x4a>
    1da2:	e8 85       	ldd	r30, Y+8	; 0x08
    1da4:	f9 85       	ldd	r31, Y+9	; 0x09
    1da6:	81 2f       	mov	r24, r17
    1da8:	19 95       	eicall
    1daa:	89 2b       	or	r24, r25
    1dac:	29 f7       	brne	.-54     	; 0x1d78 <fputc+0x14>
    1dae:	2e 81       	ldd	r18, Y+6	; 0x06
    1db0:	3f 81       	ldd	r19, Y+7	; 0x07
    1db2:	2f 5f       	subi	r18, 0xFF	; 255
    1db4:	3f 4f       	sbci	r19, 0xFF	; 255
    1db6:	2e 83       	std	Y+6, r18	; 0x06
    1db8:	3f 83       	std	Y+7, r19	; 0x07
    1dba:	81 2f       	mov	r24, r17
    1dbc:	90 2f       	mov	r25, r16
    1dbe:	df 91       	pop	r29
    1dc0:	cf 91       	pop	r28
    1dc2:	1f 91       	pop	r17
    1dc4:	0f 91       	pop	r16
    1dc6:	08 95       	ret

00001dc8 <printf>:
    1dc8:	cf 93       	push	r28
    1dca:	df 93       	push	r29
    1dcc:	cd b7       	in	r28, 0x3d	; 61
    1dce:	de b7       	in	r29, 0x3e	; 62
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	36 96       	adiw	r30, 0x06	; 6
    1dd4:	61 91       	ld	r22, Z+
    1dd6:	71 91       	ld	r23, Z+
    1dd8:	af 01       	movw	r20, r30
    1dda:	80 91 8d 20 	lds	r24, 0x208D
    1dde:	90 91 8e 20 	lds	r25, 0x208E
    1de2:	51 db       	rcall	.-2398   	; 0x1486 <vfprintf>
    1de4:	df 91       	pop	r29
    1de6:	cf 91       	pop	r28
    1de8:	08 95       	ret

00001dea <__ultoa_invert>:
    1dea:	fa 01       	movw	r30, r20
    1dec:	aa 27       	eor	r26, r26
    1dee:	28 30       	cpi	r18, 0x08	; 8
    1df0:	51 f1       	breq	.+84     	; 0x1e46 <__ultoa_invert+0x5c>
    1df2:	20 31       	cpi	r18, 0x10	; 16
    1df4:	81 f1       	breq	.+96     	; 0x1e56 <__ultoa_invert+0x6c>
    1df6:	e8 94       	clt
    1df8:	6f 93       	push	r22
    1dfa:	6e 7f       	andi	r22, 0xFE	; 254
    1dfc:	6e 5f       	subi	r22, 0xFE	; 254
    1dfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1e00:	8f 4f       	sbci	r24, 0xFF	; 255
    1e02:	9f 4f       	sbci	r25, 0xFF	; 255
    1e04:	af 4f       	sbci	r26, 0xFF	; 255
    1e06:	b1 e0       	ldi	r27, 0x01	; 1
    1e08:	3e d0       	rcall	.+124    	; 0x1e86 <__ultoa_invert+0x9c>
    1e0a:	b4 e0       	ldi	r27, 0x04	; 4
    1e0c:	3c d0       	rcall	.+120    	; 0x1e86 <__ultoa_invert+0x9c>
    1e0e:	67 0f       	add	r22, r23
    1e10:	78 1f       	adc	r23, r24
    1e12:	89 1f       	adc	r24, r25
    1e14:	9a 1f       	adc	r25, r26
    1e16:	a1 1d       	adc	r26, r1
    1e18:	68 0f       	add	r22, r24
    1e1a:	79 1f       	adc	r23, r25
    1e1c:	8a 1f       	adc	r24, r26
    1e1e:	91 1d       	adc	r25, r1
    1e20:	a1 1d       	adc	r26, r1
    1e22:	6a 0f       	add	r22, r26
    1e24:	71 1d       	adc	r23, r1
    1e26:	81 1d       	adc	r24, r1
    1e28:	91 1d       	adc	r25, r1
    1e2a:	a1 1d       	adc	r26, r1
    1e2c:	20 d0       	rcall	.+64     	; 0x1e6e <__ultoa_invert+0x84>
    1e2e:	09 f4       	brne	.+2      	; 0x1e32 <__ultoa_invert+0x48>
    1e30:	68 94       	set
    1e32:	3f 91       	pop	r19
    1e34:	2a e0       	ldi	r18, 0x0A	; 10
    1e36:	26 9f       	mul	r18, r22
    1e38:	11 24       	eor	r1, r1
    1e3a:	30 19       	sub	r19, r0
    1e3c:	30 5d       	subi	r19, 0xD0	; 208
    1e3e:	31 93       	st	Z+, r19
    1e40:	de f6       	brtc	.-74     	; 0x1df8 <__ultoa_invert+0xe>
    1e42:	cf 01       	movw	r24, r30
    1e44:	08 95       	ret
    1e46:	46 2f       	mov	r20, r22
    1e48:	47 70       	andi	r20, 0x07	; 7
    1e4a:	40 5d       	subi	r20, 0xD0	; 208
    1e4c:	41 93       	st	Z+, r20
    1e4e:	b3 e0       	ldi	r27, 0x03	; 3
    1e50:	0f d0       	rcall	.+30     	; 0x1e70 <__ultoa_invert+0x86>
    1e52:	c9 f7       	brne	.-14     	; 0x1e46 <__ultoa_invert+0x5c>
    1e54:	f6 cf       	rjmp	.-20     	; 0x1e42 <__ultoa_invert+0x58>
    1e56:	46 2f       	mov	r20, r22
    1e58:	4f 70       	andi	r20, 0x0F	; 15
    1e5a:	40 5d       	subi	r20, 0xD0	; 208
    1e5c:	4a 33       	cpi	r20, 0x3A	; 58
    1e5e:	18 f0       	brcs	.+6      	; 0x1e66 <__ultoa_invert+0x7c>
    1e60:	49 5d       	subi	r20, 0xD9	; 217
    1e62:	31 fd       	sbrc	r19, 1
    1e64:	40 52       	subi	r20, 0x20	; 32
    1e66:	41 93       	st	Z+, r20
    1e68:	02 d0       	rcall	.+4      	; 0x1e6e <__ultoa_invert+0x84>
    1e6a:	a9 f7       	brne	.-22     	; 0x1e56 <__ultoa_invert+0x6c>
    1e6c:	ea cf       	rjmp	.-44     	; 0x1e42 <__ultoa_invert+0x58>
    1e6e:	b4 e0       	ldi	r27, 0x04	; 4
    1e70:	a6 95       	lsr	r26
    1e72:	97 95       	ror	r25
    1e74:	87 95       	ror	r24
    1e76:	77 95       	ror	r23
    1e78:	67 95       	ror	r22
    1e7a:	ba 95       	dec	r27
    1e7c:	c9 f7       	brne	.-14     	; 0x1e70 <__ultoa_invert+0x86>
    1e7e:	00 97       	sbiw	r24, 0x00	; 0
    1e80:	61 05       	cpc	r22, r1
    1e82:	71 05       	cpc	r23, r1
    1e84:	08 95       	ret
    1e86:	9b 01       	movw	r18, r22
    1e88:	ac 01       	movw	r20, r24
    1e8a:	0a 2e       	mov	r0, r26
    1e8c:	06 94       	lsr	r0
    1e8e:	57 95       	ror	r21
    1e90:	47 95       	ror	r20
    1e92:	37 95       	ror	r19
    1e94:	27 95       	ror	r18
    1e96:	ba 95       	dec	r27
    1e98:	c9 f7       	brne	.-14     	; 0x1e8c <__ultoa_invert+0xa2>
    1e9a:	62 0f       	add	r22, r18
    1e9c:	73 1f       	adc	r23, r19
    1e9e:	84 1f       	adc	r24, r20
    1ea0:	95 1f       	adc	r25, r21
    1ea2:	a0 1d       	adc	r26, r0
    1ea4:	08 95       	ret

00001ea6 <_exit>:
    1ea6:	f8 94       	cli

00001ea8 <__stop_program>:
    1ea8:	ff cf       	rjmp	.-2      	; 0x1ea8 <__stop_program>
