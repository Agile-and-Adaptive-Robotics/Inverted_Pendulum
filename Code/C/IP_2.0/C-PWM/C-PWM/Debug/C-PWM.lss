
C-PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d2  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000001d2  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000201  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000020f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008c6  00000000  00000000  0000022f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000061d  00000000  00000000  00000af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ee  00000000  00000000  00001112  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001300  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001324  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  0000152c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000130  00000130  000001c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000153c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    00000058  000000c2  000000c2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .bss.on.1638  00000002  00800100  00800100  000001d2  2**0
                  ALLOC
 15 .bss.counter.1637 00000002  00800102  00800102  000001d2  2**0
                  ALLOC
 16 .text.__dummy_fini 00000002  00000138  00000138  000001cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_funcs_on_exit 00000002  0000013a  0000013a  000001ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_simulator_exit 00000002  0000013c  0000013c  000001d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.exit    00000016  0000011a  0000011a  000001ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text._Exit   00000004  00000134  00000134  000001c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
   8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
   c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  10:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  14:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  18:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  1c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  20:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  24:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  28:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  2c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  30:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  34:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  38:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  3c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  40:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  44:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  48:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  4c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  50:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  54:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  58:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  5c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  60:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  64:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 04       	cpc	r0, r1
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 61 00 	call	0xc2	; 0xc2 <_etext>
  ba:	0c 94 8d 00 	jmp	0x11a	; 0x11a <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

00000130 <__bad_interrupt>:
 130:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

000000c2 <main>:
 */ 

#include <xc.h>

int main(void) {
	DDRB = 1 << PINB0;
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	84 b9       	out	0x04, r24	; 4

		int onTotal = currentLevel;
		int offTotal = levels - currentLevel;

		static int counter = 0;
		counter++;
  c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <counter.1637>
  ca:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <counter.1637+0x1>
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <counter.1637+0x1>
  d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <counter.1637>

		static int on = 0;

		if (on) {
  d8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  dc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e0:	23 2b       	or	r18, r19
  e2:	59 f0       	breq	.+22     	; 0xfa <main+0x38>
			if (counter == onTotal) {
  e4:	89 2b       	or	r24, r25
  e6:	79 f7       	brne	.-34     	; 0xc6 <main+0x4>
				counter = 0;
  e8:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <counter.1637+0x1>
  ec:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <counter.1637>
				on = 0;
  f0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  f4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
  f8:	e6 cf       	rjmp	.-52     	; 0xc6 <main+0x4>
			}
		} else {
			if (counter == offTotal) {
  fa:	2f e7       	ldi	r18, 0x7F	; 127
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	28 17       	cp	r18, r24
 100:	39 07       	cpc	r19, r25
 102:	09 f7       	brne	.-62     	; 0xc6 <main+0x4>
				counter = 0;
 104:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <counter.1637+0x1>
 108:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <counter.1637>
				on = 1;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 114:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 118:	d6 cf       	rjmp	.-84     	; 0xc6 <main+0x4>

Disassembly of section .text.__dummy_fini:

00000138 <_fini>:
 138:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000013a <__funcs_on_exit>:
 13a:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000013c <__simulator_exit>:
 13c:	08 95       	ret

Disassembly of section .text.exit:

0000011a <exit>:
 11a:	ec 01       	movw	r28, r24
 11c:	0e 94 9d 00 	call	0x13a	; 0x13a <__funcs_on_exit>
 120:	0e 94 9c 00 	call	0x138	; 0x138 <_fini>
 124:	ce 01       	movw	r24, r28
 126:	0e 94 9e 00 	call	0x13c	; 0x13c <__simulator_exit>
 12a:	ce 01       	movw	r24, r28
 12c:	0e 94 9a 00 	call	0x134	; 0x134 <_Exit>

Disassembly of section .text._Exit:

00000134 <_Exit>:
 134:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
